
build/iso/boot/myos.bin:     file format elf32-i386


Disassembly of section .text:

00100000 <loader-0xc>:
  100000:	02 b0 ad 1b 03 00    	add    0x31bad(%eax),%dh
  100006:	00 00                	add    %al,(%eax)
  100008:	fb                   	sti    
  100009:	4f                   	dec    %edi
  10000a:	52                   	push   %edx
  10000b:	e4                 	in     $0xbc,%al

0010000c <loader>:
  10000c:	bc 00 60 30 00       	mov    $0x306000,%esp
  100011:	68 00 60 30 00       	push   $0x306000
  100016:	e8 06 05 00 00       	call   100521 <kernel_main>

0010001b <_stop>:
  10001b:	fa                   	cli    
  10001c:	f4                   	hlt    
  10001d:	eb fc                	jmp    10001b <_stop>
  10001f:	90                   	nop

00100020 <isr_common_stub>:
  100020:	60                   	pusha  
  100021:	66 8c d8             	mov    %ds,%ax
  100024:	50                   	push   %eax
  100025:	66 b8 10 00          	mov    $0x10,%ax
  100029:	8e d8                	mov    %eax,%ds
  10002b:	8e c0                	mov    %eax,%es
  10002d:	8e e0                	mov    %eax,%fs
  10002f:	8e e8                	mov    %eax,%gs
  100031:	e8 54 2d 00 00       	call   102d8a <isr_handler>
  100036:	58                   	pop    %eax
  100037:	8e d8                	mov    %eax,%ds
  100039:	8e c0                	mov    %eax,%es
  10003b:	8e e0                	mov    %eax,%fs
  10003d:	8e e8                	mov    %eax,%gs
  10003f:	61                   	popa   
  100040:	83 c4 08             	add    $0x8,%esp
  100043:	fb                   	sti    
  100044:	cf                   	iret   

00100045 <irq_common_stub>:
  100045:	60                   	pusha  
  100046:	66 8c d8             	mov    %ds,%ax
  100049:	50                   	push   %eax
  10004a:	66 b8 10 00          	mov    $0x10,%ax
  10004e:	8e d8                	mov    %eax,%ds
  100050:	8e c0                	mov    %eax,%es
  100052:	8e e0                	mov    %eax,%fs
  100054:	8e e8                	mov    %eax,%gs
  100056:	e8 1f 2e 00 00       	call   102e7a <irq_handler>
  10005b:	5b                   	pop    %ebx
  10005c:	8e db                	mov    %ebx,%ds
  10005e:	8e c3                	mov    %ebx,%es
  100060:	8e e3                	mov    %ebx,%fs
  100062:	8e eb                	mov    %ebx,%gs
  100064:	61                   	popa   
  100065:	83 c4 08             	add    $0x8,%esp
  100068:	fb                   	sti    
  100069:	cf                   	iret   

0010006a <isr0>:
  10006a:	fa                   	cli    
  10006b:	6a 00                	push   $0x0
  10006d:	6a 00                	push   $0x0
  10006f:	eb af                	jmp    100020 <isr_common_stub>

00100071 <isr1>:
  100071:	fa                   	cli    
  100072:	6a 00                	push   $0x0
  100074:	6a 01                	push   $0x1
  100076:	eb a8                	jmp    100020 <isr_common_stub>

00100078 <isr2>:
  100078:	fa                   	cli    
  100079:	6a 00                	push   $0x0
  10007b:	6a 02                	push   $0x2
  10007d:	eb a1                	jmp    100020 <isr_common_stub>

0010007f <isr3>:
  10007f:	fa                   	cli    
  100080:	6a 00                	push   $0x0
  100082:	6a 03                	push   $0x3
  100084:	eb 9a                	jmp    100020 <isr_common_stub>

00100086 <isr4>:
  100086:	fa                   	cli    
  100087:	6a 00                	push   $0x0
  100089:	6a 04                	push   $0x4
  10008b:	eb 93                	jmp    100020 <isr_common_stub>

0010008d <isr5>:
  10008d:	fa                   	cli    
  10008e:	6a 00                	push   $0x0
  100090:	6a 05                	push   $0x5
  100092:	eb 8c                	jmp    100020 <isr_common_stub>

00100094 <isr6>:
  100094:	fa                   	cli    
  100095:	6a 00                	push   $0x0
  100097:	6a 06                	push   $0x6
  100099:	eb 85                	jmp    100020 <isr_common_stub>

0010009b <isr7>:
  10009b:	fa                   	cli    
  10009c:	6a 00                	push   $0x0
  10009e:	6a 07                	push   $0x7
  1000a0:	e9 7b ff ff ff       	jmp    100020 <isr_common_stub>

001000a5 <isr8>:
  1000a5:	fa                   	cli    
  1000a6:	6a 08                	push   $0x8
  1000a8:	e9 73 ff ff ff       	jmp    100020 <isr_common_stub>

001000ad <isr9>:
  1000ad:	fa                   	cli    
  1000ae:	6a 00                	push   $0x0
  1000b0:	6a 09                	push   $0x9
  1000b2:	e9 69 ff ff ff       	jmp    100020 <isr_common_stub>

001000b7 <isr10>:
  1000b7:	fa                   	cli    
  1000b8:	6a 0a                	push   $0xa
  1000ba:	e9 61 ff ff ff       	jmp    100020 <isr_common_stub>

001000bf <isr11>:
  1000bf:	fa                   	cli    
  1000c0:	6a 0b                	push   $0xb
  1000c2:	e9 59 ff ff ff       	jmp    100020 <isr_common_stub>

001000c7 <isr12>:
  1000c7:	fa                   	cli    
  1000c8:	6a 0c                	push   $0xc
  1000ca:	e9 51 ff ff ff       	jmp    100020 <isr_common_stub>

001000cf <isr13>:
  1000cf:	fa                   	cli    
  1000d0:	6a 0d                	push   $0xd
  1000d2:	e9 49 ff ff ff       	jmp    100020 <isr_common_stub>

001000d7 <isr14>:
  1000d7:	fa                   	cli    
  1000d8:	6a 0e                	push   $0xe
  1000da:	e9 41 ff ff ff       	jmp    100020 <isr_common_stub>

001000df <isr15>:
  1000df:	fa                   	cli    
  1000e0:	6a 00                	push   $0x0
  1000e2:	6a 0f                	push   $0xf
  1000e4:	e9 37 ff ff ff       	jmp    100020 <isr_common_stub>

001000e9 <isr16>:
  1000e9:	fa                   	cli    
  1000ea:	6a 00                	push   $0x0
  1000ec:	6a 10                	push   $0x10
  1000ee:	e9 2d ff ff ff       	jmp    100020 <isr_common_stub>

001000f3 <isr17>:
  1000f3:	fa                   	cli    
  1000f4:	6a 00                	push   $0x0
  1000f6:	6a 11                	push   $0x11
  1000f8:	e9 23 ff ff ff       	jmp    100020 <isr_common_stub>

001000fd <isr18>:
  1000fd:	fa                   	cli    
  1000fe:	6a 00                	push   $0x0
  100100:	6a 12                	push   $0x12
  100102:	e9 19 ff ff ff       	jmp    100020 <isr_common_stub>

00100107 <isr19>:
  100107:	fa                   	cli    
  100108:	6a 00                	push   $0x0
  10010a:	6a 13                	push   $0x13
  10010c:	e9 0f ff ff ff       	jmp    100020 <isr_common_stub>

00100111 <isr20>:
  100111:	fa                   	cli    
  100112:	6a 00                	push   $0x0
  100114:	6a 14                	push   $0x14
  100116:	e9 05 ff ff ff       	jmp    100020 <isr_common_stub>

0010011b <isr21>:
  10011b:	fa                   	cli    
  10011c:	6a 00                	push   $0x0
  10011e:	6a 15                	push   $0x15
  100120:	e9 fb fe ff ff       	jmp    100020 <isr_common_stub>

00100125 <isr22>:
  100125:	fa                   	cli    
  100126:	6a 00                	push   $0x0
  100128:	6a 16                	push   $0x16
  10012a:	e9 f1 fe ff ff       	jmp    100020 <isr_common_stub>

0010012f <isr23>:
  10012f:	fa                   	cli    
  100130:	6a 00                	push   $0x0
  100132:	6a 17                	push   $0x17
  100134:	e9 e7 fe ff ff       	jmp    100020 <isr_common_stub>

00100139 <isr24>:
  100139:	fa                   	cli    
  10013a:	6a 00                	push   $0x0
  10013c:	6a 18                	push   $0x18
  10013e:	e9 dd fe ff ff       	jmp    100020 <isr_common_stub>

00100143 <isr25>:
  100143:	fa                   	cli    
  100144:	6a 00                	push   $0x0
  100146:	6a 19                	push   $0x19
  100148:	e9 d3 fe ff ff       	jmp    100020 <isr_common_stub>

0010014d <isr26>:
  10014d:	fa                   	cli    
  10014e:	6a 00                	push   $0x0
  100150:	6a 1a                	push   $0x1a
  100152:	e9 c9 fe ff ff       	jmp    100020 <isr_common_stub>

00100157 <isr27>:
  100157:	fa                   	cli    
  100158:	6a 00                	push   $0x0
  10015a:	6a 1b                	push   $0x1b
  10015c:	e9 bf fe ff ff       	jmp    100020 <isr_common_stub>

00100161 <isr28>:
  100161:	fa                   	cli    
  100162:	6a 00                	push   $0x0
  100164:	6a 1c                	push   $0x1c
  100166:	e9 b5 fe ff ff       	jmp    100020 <isr_common_stub>

0010016b <isr29>:
  10016b:	fa                   	cli    
  10016c:	6a 00                	push   $0x0
  10016e:	6a 1d                	push   $0x1d
  100170:	e9 ab fe ff ff       	jmp    100020 <isr_common_stub>

00100175 <isr30>:
  100175:	fa                   	cli    
  100176:	6a 00                	push   $0x0
  100178:	6a 1e                	push   $0x1e
  10017a:	e9 a1 fe ff ff       	jmp    100020 <isr_common_stub>

0010017f <isr31>:
  10017f:	fa                   	cli    
  100180:	6a 00                	push   $0x0
  100182:	6a 1f                	push   $0x1f
  100184:	e9 97 fe ff ff       	jmp    100020 <isr_common_stub>

00100189 <irq0>:
  100189:	fa                   	cli    
  10018a:	6a 00                	push   $0x0
  10018c:	6a 20                	push   $0x20
  10018e:	e9 b2 fe ff ff       	jmp    100045 <irq_common_stub>

00100193 <irq1>:
  100193:	fa                   	cli    
  100194:	6a 01                	push   $0x1
  100196:	6a 21                	push   $0x21
  100198:	e9 a8 fe ff ff       	jmp    100045 <irq_common_stub>

0010019d <irq2>:
  10019d:	fa                   	cli    
  10019e:	6a 02                	push   $0x2
  1001a0:	6a 22                	push   $0x22
  1001a2:	e9 9e fe ff ff       	jmp    100045 <irq_common_stub>

001001a7 <irq3>:
  1001a7:	fa                   	cli    
  1001a8:	6a 03                	push   $0x3
  1001aa:	6a 23                	push   $0x23
  1001ac:	e9 94 fe ff ff       	jmp    100045 <irq_common_stub>

001001b1 <irq4>:
  1001b1:	fa                   	cli    
  1001b2:	6a 04                	push   $0x4
  1001b4:	6a 24                	push   $0x24
  1001b6:	e9 8a fe ff ff       	jmp    100045 <irq_common_stub>

001001bb <irq5>:
  1001bb:	fa                   	cli    
  1001bc:	6a 05                	push   $0x5
  1001be:	6a 25                	push   $0x25
  1001c0:	e9 80 fe ff ff       	jmp    100045 <irq_common_stub>

001001c5 <irq6>:
  1001c5:	fa                   	cli    
  1001c6:	6a 06                	push   $0x6
  1001c8:	6a 26                	push   $0x26
  1001ca:	e9 76 fe ff ff       	jmp    100045 <irq_common_stub>

001001cf <irq7>:
  1001cf:	fa                   	cli    
  1001d0:	6a 07                	push   $0x7
  1001d2:	6a 27                	push   $0x27
  1001d4:	e9 6c fe ff ff       	jmp    100045 <irq_common_stub>

001001d9 <irq8>:
  1001d9:	fa                   	cli    
  1001da:	6a 08                	push   $0x8
  1001dc:	6a 28                	push   $0x28
  1001de:	e9 62 fe ff ff       	jmp    100045 <irq_common_stub>

001001e3 <irq9>:
  1001e3:	fa                   	cli    
  1001e4:	6a 09                	push   $0x9
  1001e6:	6a 29                	push   $0x29
  1001e8:	e9 58 fe ff ff       	jmp    100045 <irq_common_stub>

001001ed <irq10>:
  1001ed:	fa                   	cli    
  1001ee:	6a 0a                	push   $0xa
  1001f0:	6a 2a                	push   $0x2a
  1001f2:	e9 4e fe ff ff       	jmp    100045 <irq_common_stub>

001001f7 <irq11>:
  1001f7:	fa                   	cli    
  1001f8:	6a 0b                	push   $0xb
  1001fa:	6a 2b                	push   $0x2b
  1001fc:	e9 44 fe ff ff       	jmp    100045 <irq_common_stub>

00100201 <irq12>:
  100201:	fa                   	cli    
  100202:	6a 0c                	push   $0xc
  100204:	6a 2c                	push   $0x2c
  100206:	e9 3a fe ff ff       	jmp    100045 <irq_common_stub>

0010020b <irq13>:
  10020b:	fa                   	cli    
  10020c:	6a 0d                	push   $0xd
  10020e:	6a 2d                	push   $0x2d
  100210:	e9 30 fe ff ff       	jmp    100045 <irq_common_stub>

00100215 <irq14>:
  100215:	fa                   	cli    
  100216:	6a 0e                	push   $0xe
  100218:	6a 2e                	push   $0x2e
  10021a:	e9 26 fe ff ff       	jmp    100045 <irq_common_stub>

0010021f <irq15>:
  10021f:	fa                   	cli    
  100220:	6a 0f                	push   $0xf
  100222:	6a 2f                	push   $0x2f
  100224:	e9 1c fe ff ff       	jmp    100045 <irq_common_stub>
  100229:	66 90                	xchg   %ax,%ax
  10022b:	66 90                	xchg   %ax,%ax
  10022d:	66 90                	xchg   %ax,%ax
  10022f:	90                   	nop

00100230 <test>:
  100230:	e9 f1 04 00 00       	jmp    100726 <testok1>
  100235:	c3                   	ret    

00100236 <mouse_write>:
  100236:	55                   	push   %ebp
  100237:	89 e5                	mov    %esp,%ebp
  100239:	53                   	push   %ebx
  10023a:	83 ec 14             	sub    $0x14,%esp
  10023d:	e8 1e 33 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  100242:	81 c3 26 4f 00 00    	add    $0x4f26,%ebx
  100248:	8b 45 08             	mov    0x8(%ebp),%eax
  10024b:	88 45 f4             	mov    %al,-0xc(%ebp)
  10024e:	83 ec 0c             	sub    $0xc,%esp
  100251:	6a 01                	push   $0x1
  100253:	e8 72 00 00 00       	call   1002ca <mouse_wait>
  100258:	83 c4 10             	add    $0x10,%esp
  10025b:	83 ec 08             	sub    $0x8,%esp
  10025e:	68 d4 00 00 00       	push   $0xd4
  100263:	6a 64                	push   $0x64
  100265:	e8 c5 2c 00 00       	call   102f2f <port_outb>
  10026a:	83 c4 10             	add    $0x10,%esp
  10026d:	83 ec 0c             	sub    $0xc,%esp
  100270:	6a 01                	push   $0x1
  100272:	e8 53 00 00 00       	call   1002ca <mouse_wait>
  100277:	83 c4 10             	add    $0x10,%esp
  10027a:	0f b6 45 f4          	movzbl -0xc(%ebp),%eax
  10027e:	83 ec 08             	sub    $0x8,%esp
  100281:	50                   	push   %eax
  100282:	6a 60                	push   $0x60
  100284:	e8 a6 2c 00 00       	call   102f2f <port_outb>
  100289:	83 c4 10             	add    $0x10,%esp
  10028c:	90                   	nop
  10028d:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100290:	c9                   	leave  
  100291:	c3                   	ret    

00100292 <mouse_read>:
  100292:	55                   	push   %ebp
  100293:	89 e5                	mov    %esp,%ebp
  100295:	53                   	push   %ebx
  100296:	83 ec 14             	sub    $0x14,%esp
  100299:	e8 c2 32 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  10029e:	81 c3 ca 4e 00 00    	add    $0x4eca,%ebx
  1002a4:	83 ec 0c             	sub    $0xc,%esp
  1002a7:	6a 00                	push   $0x0
  1002a9:	e8 1c 00 00 00       	call   1002ca <mouse_wait>
  1002ae:	83 c4 10             	add    $0x10,%esp
  1002b1:	83 ec 0c             	sub    $0xc,%esp
  1002b4:	6a 60                	push   $0x60
  1002b6:	e8 4d 2c 00 00       	call   102f08 <port_inb>
  1002bb:	83 c4 10             	add    $0x10,%esp
  1002be:	88 45 f7             	mov    %al,-0x9(%ebp)
  1002c1:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  1002c5:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1002c8:	c9                   	leave  
  1002c9:	c3                   	ret    

001002ca <mouse_wait>:
  1002ca:	55                   	push   %ebp
  1002cb:	89 e5                	mov    %esp,%ebp
  1002cd:	53                   	push   %ebx
  1002ce:	83 ec 24             	sub    $0x24,%esp
  1002d1:	e8 8a 32 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  1002d6:	81 c3 92 4e 00 00    	add    $0x4e92,%ebx
  1002dc:	8b 45 08             	mov    0x8(%ebp),%eax
  1002df:	88 45 e4             	mov    %al,-0x1c(%ebp)
  1002e2:	c7 45 f4 a0 86 01 00 	movl   $0x186a0,-0xc(%ebp)
  1002e9:	80 7d e4 00          	cmpb   $0x0,-0x1c(%ebp)
  1002ed:	75 3d                	jne    10032c <mouse_wait+0x62>
  1002ef:	eb 18                	jmp    100309 <mouse_wait+0x3f>
  1002f1:	83 ec 0c             	sub    $0xc,%esp
  1002f4:	6a 64                	push   $0x64
  1002f6:	e8 0d 2c 00 00       	call   102f08 <port_inb>
  1002fb:	83 c4 10             	add    $0x10,%esp
  1002fe:	0f b6 c0             	movzbl %al,%eax
  100301:	83 e0 01             	and    $0x1,%eax
  100304:	83 f8 01             	cmp    $0x1,%eax
  100307:	74 2f                	je     100338 <mouse_wait+0x6e>
  100309:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
  10030d:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
  100311:	75 de                	jne    1002f1 <mouse_wait+0x27>
  100313:	eb 27                	jmp    10033c <mouse_wait+0x72>
  100315:	83 ec 0c             	sub    $0xc,%esp
  100318:	6a 64                	push   $0x64
  10031a:	e8 e9 2b 00 00       	call   102f08 <port_inb>
  10031f:	83 c4 10             	add    $0x10,%esp
  100322:	0f b6 c0             	movzbl %al,%eax
  100325:	83 e0 02             	and    $0x2,%eax
  100328:	85 c0                	test   %eax,%eax
  10032a:	74 0f                	je     10033b <mouse_wait+0x71>
  10032c:	83 6d f4 01          	subl   $0x1,-0xc(%ebp)
  100330:	83 7d f4 00          	cmpl   $0x0,-0xc(%ebp)
  100334:	75 df                	jne    100315 <mouse_wait+0x4b>
  100336:	eb 04                	jmp    10033c <mouse_wait+0x72>
  100338:	90                   	nop
  100339:	eb 01                	jmp    10033c <mouse_wait+0x72>
  10033b:	90                   	nop
  10033c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  10033f:	c9                   	leave  
  100340:	c3                   	ret    

00100341 <mouse_callback>:
  100341:	55                   	push   %ebp
  100342:	89 e5                	mov    %esp,%ebp
  100344:	53                   	push   %ebx
  100345:	83 ec 04             	sub    $0x4,%esp
  100348:	e8 13 32 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  10034d:	81 c3 1b 4e 00 00    	add    $0x4e1b,%ebx
  100353:	0f b6 83 98 0e 20 00 	movzbl 0x200e98(%ebx),%eax
  10035a:	0f b6 c0             	movzbl %al,%eax
  10035d:	83 f8 02             	cmp    $0x2,%eax
  100360:	74 5e                	je     1003c0 <mouse_callback+0x7f>
  100362:	83 f8 02             	cmp    $0x2,%eax
  100365:	0f 8f 8a 00 00 00    	jg     1003f5 <mouse_callback+0xb4>
  10036b:	85 c0                	test   %eax,%eax
  10036d:	74 07                	je     100376 <mouse_callback+0x35>
  10036f:	83 f8 01             	cmp    $0x1,%eax
  100372:	74 27                	je     10039b <mouse_callback+0x5a>
  100374:	eb 7f                	jmp    1003f5 <mouse_callback+0xb4>
  100376:	83 ec 0c             	sub    $0xc,%esp
  100379:	6a 60                	push   $0x60
  10037b:	e8 88 2b 00 00       	call   102f08 <port_inb>
  100380:	83 c4 10             	add    $0x10,%esp
  100383:	88 83 99 0e 20 00    	mov    %al,0x200e99(%ebx)
  100389:	0f b6 83 98 0e 20 00 	movzbl 0x200e98(%ebx),%eax
  100390:	83 c0 01             	add    $0x1,%eax
  100393:	88 83 98 0e 20 00    	mov    %al,0x200e98(%ebx)
  100399:	eb 5a                	jmp    1003f5 <mouse_callback+0xb4>
  10039b:	83 ec 0c             	sub    $0xc,%esp
  10039e:	6a 60                	push   $0x60
  1003a0:	e8 63 2b 00 00       	call   102f08 <port_inb>
  1003a5:	83 c4 10             	add    $0x10,%esp
  1003a8:	88 83 9a 0e 20 00    	mov    %al,0x200e9a(%ebx)
  1003ae:	0f b6 83 98 0e 20 00 	movzbl 0x200e98(%ebx),%eax
  1003b5:	83 c0 01             	add    $0x1,%eax
  1003b8:	88 83 98 0e 20 00    	mov    %al,0x200e98(%ebx)
  1003be:	eb 35                	jmp    1003f5 <mouse_callback+0xb4>
  1003c0:	83 ec 0c             	sub    $0xc,%esp
  1003c3:	6a 60                	push   $0x60
  1003c5:	e8 3e 2b 00 00       	call   102f08 <port_inb>
  1003ca:	83 c4 10             	add    $0x10,%esp
  1003cd:	88 83 9b 0e 20 00    	mov    %al,0x200e9b(%ebx)
  1003d3:	0f b6 83 9a 0e 20 00 	movzbl 0x200e9a(%ebx),%eax
  1003da:	88 83 9c 0e 20 00    	mov    %al,0x200e9c(%ebx)
  1003e0:	0f b6 83 9b 0e 20 00 	movzbl 0x200e9b(%ebx),%eax
  1003e7:	88 83 9d 0e 20 00    	mov    %al,0x200e9d(%ebx)
  1003ed:	c6 83 98 0e 20 00 00 	movb   $0x0,0x200e98(%ebx)
  1003f4:	90                   	nop
  1003f5:	83 ec 0c             	sub    $0xc,%esp
  1003f8:	6a 2c                	push   $0x2c
  1003fa:	e8 36 2a 00 00       	call   102e35 <irq_ack>
  1003ff:	83 c4 10             	add    $0x10,%esp
  100402:	90                   	nop
  100403:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100406:	c9                   	leave  
  100407:	c3                   	ret    

00100408 <init_mouse>:
  100408:	55                   	push   %ebp
  100409:	89 e5                	mov    %esp,%ebp
  10040b:	53                   	push   %ebx
  10040c:	83 ec 14             	sub    $0x14,%esp
  10040f:	e8 4c 31 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  100414:	81 c3 54 4d 00 00    	add    $0x4d54,%ebx
  10041a:	83 ec 0c             	sub    $0xc,%esp
  10041d:	6a 01                	push   $0x1
  10041f:	e8 a6 fe ff ff       	call   1002ca <mouse_wait>
  100424:	83 c4 10             	add    $0x10,%esp
  100427:	83 ec 08             	sub    $0x8,%esp
  10042a:	68 a8 00 00 00       	push   $0xa8
  10042f:	6a 64                	push   $0x64
  100431:	e8 f9 2a 00 00       	call   102f2f <port_outb>
  100436:	83 c4 10             	add    $0x10,%esp
  100439:	83 ec 0c             	sub    $0xc,%esp
  10043c:	6a 01                	push   $0x1
  10043e:	e8 87 fe ff ff       	call   1002ca <mouse_wait>
  100443:	83 c4 10             	add    $0x10,%esp
  100446:	83 ec 08             	sub    $0x8,%esp
  100449:	6a 20                	push   $0x20
  10044b:	6a 64                	push   $0x64
  10044d:	e8 dd 2a 00 00       	call   102f2f <port_outb>
  100452:	83 c4 10             	add    $0x10,%esp
  100455:	83 ec 0c             	sub    $0xc,%esp
  100458:	6a 00                	push   $0x0
  10045a:	e8 6b fe ff ff       	call   1002ca <mouse_wait>
  10045f:	83 c4 10             	add    $0x10,%esp
  100462:	83 ec 0c             	sub    $0xc,%esp
  100465:	6a 60                	push   $0x60
  100467:	e8 9c 2a 00 00       	call   102f08 <port_inb>
  10046c:	83 c4 10             	add    $0x10,%esp
  10046f:	83 c8 02             	or     $0x2,%eax
  100472:	88 45 f7             	mov    %al,-0x9(%ebp)
  100475:	83 ec 0c             	sub    $0xc,%esp
  100478:	6a 01                	push   $0x1
  10047a:	e8 4b fe ff ff       	call   1002ca <mouse_wait>
  10047f:	83 c4 10             	add    $0x10,%esp
  100482:	83 ec 08             	sub    $0x8,%esp
  100485:	6a 60                	push   $0x60
  100487:	6a 64                	push   $0x64
  100489:	e8 a1 2a 00 00       	call   102f2f <port_outb>
  10048e:	83 c4 10             	add    $0x10,%esp
  100491:	83 ec 0c             	sub    $0xc,%esp
  100494:	6a 01                	push   $0x1
  100496:	e8 2f fe ff ff       	call   1002ca <mouse_wait>
  10049b:	83 c4 10             	add    $0x10,%esp
  10049e:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  1004a2:	83 ec 08             	sub    $0x8,%esp
  1004a5:	50                   	push   %eax
  1004a6:	6a 60                	push   $0x60
  1004a8:	e8 82 2a 00 00       	call   102f2f <port_outb>
  1004ad:	83 c4 10             	add    $0x10,%esp
  1004b0:	83 ec 0c             	sub    $0xc,%esp
  1004b3:	68 f6 00 00 00       	push   $0xf6
  1004b8:	e8 79 fd ff ff       	call   100236 <mouse_write>
  1004bd:	83 c4 10             	add    $0x10,%esp
  1004c0:	e8 cd fd ff ff       	call   100292 <mouse_read>
  1004c5:	83 ec 0c             	sub    $0xc,%esp
  1004c8:	68 f4 00 00 00       	push   $0xf4
  1004cd:	e8 64 fd ff ff       	call   100236 <mouse_write>
  1004d2:	83 c4 10             	add    $0x10,%esp
  1004d5:	e8 b8 fd ff ff       	call   100292 <mouse_read>
  1004da:	83 ec 08             	sub    $0x8,%esp
  1004dd:	8d 83 d9 b1 ff ff    	lea    -0x4e27(%ebx),%eax
  1004e3:	50                   	push   %eax
  1004e4:	6a 2c                	push   $0x2c
  1004e6:	e8 23 29 00 00       	call   102e0e <register_interrupt_handler>
  1004eb:	83 c4 10             	add    $0x10,%esp
  1004ee:	90                   	nop
  1004ef:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1004f2:	c9                   	leave  
  1004f3:	c3                   	ret    

001004f4 <aa>:
  1004f4:	55                   	push   %ebp
  1004f5:	89 e5                	mov    %esp,%ebp
  1004f7:	53                   	push   %ebx
  1004f8:	83 ec 04             	sub    $0x4,%esp
  1004fb:	e8 5c 30 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  100500:	05 68 4c 00 00       	add    $0x4c68,%eax
  100505:	83 ec 08             	sub    $0x8,%esp
  100508:	6a 0b                	push   $0xb
  10050a:	8d 90 98 ee ff ff    	lea    -0x1168(%eax),%edx
  100510:	52                   	push   %edx
  100511:	89 c3                	mov    %eax,%ebx
  100513:	e8 ff 1e 00 00       	call   102417 <printkc>
  100518:	83 c4 10             	add    $0x10,%esp
  10051b:	90                   	nop
  10051c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  10051f:	c9                   	leave  
  100520:	c3                   	ret    

00100521 <kernel_main>:
  100521:	55                   	push   %ebp
  100522:	89 e5                	mov    %esp,%ebp
  100524:	53                   	push   %ebx
  100525:	83 ec 24             	sub    $0x24,%esp
  100528:	e8 33 30 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  10052d:	81 c3 3b 4c 00 00    	add    $0x4c3b,%ebx
  100533:	e8 62 1c 00 00       	call   10219a <clear_screen>
  100538:	83 ec 0c             	sub    $0xc,%esp
  10053b:	8d 83 a1 ee ff ff    	lea    -0x115f(%ebx),%eax
  100541:	50                   	push   %eax
  100542:	e8 0a 1d 00 00       	call   102251 <printk>
  100547:	83 c4 10             	add    $0x10,%esp
  10054a:	8d 45 0c             	lea    0xc(%ebp),%eax
  10054d:	83 ec 08             	sub    $0x8,%esp
  100550:	6a 07                	push   $0x7
  100552:	50                   	push   %eax
  100553:	e8 ea 2d 00 00       	call   103342 <print_hex>
  100558:	83 c4 10             	add    $0x10,%esp
  10055b:	83 ec 0c             	sub    $0xc,%esp
  10055e:	8d 83 b2 ee ff ff    	lea    -0x114e(%ebx),%eax
  100564:	50                   	push   %eax
  100565:	e8 e7 1c 00 00       	call   102251 <printk>
  10056a:	83 c4 10             	add    $0x10,%esp
  10056d:	83 ec 0c             	sub    $0xc,%esp
  100570:	8d 83 b4 ee ff ff    	lea    -0x114c(%ebx),%eax
  100576:	50                   	push   %eax
  100577:	e8 d5 1c 00 00       	call   102251 <printk>
  10057c:	83 c4 10             	add    $0x10,%esp
  10057f:	83 ec 0c             	sub    $0xc,%esp
  100582:	8d 83 c1 ee ff ff    	lea    -0x113f(%ebx),%eax
  100588:	50                   	push   %eax
  100589:	e8 c3 1c 00 00       	call   102251 <printk>
  10058e:	83 c4 10             	add    $0x10,%esp
  100591:	e8 67 20 00 00       	call   1025fd <init_gdt>
  100596:	83 ec 0c             	sub    $0xc,%esp
  100599:	8d 83 d1 ee ff ff    	lea    -0x112f(%ebx),%eax
  10059f:	50                   	push   %eax
  1005a0:	e8 ac 1c 00 00       	call   102251 <printk>
  1005a5:	83 c4 10             	add    $0x10,%esp
  1005a8:	e8 dc 21 00 00       	call   102789 <init_idt>
  1005ad:	83 ec 0c             	sub    $0xc,%esp
  1005b0:	8d 83 e1 ee ff ff    	lea    -0x111f(%ebx),%eax
  1005b6:	50                   	push   %eax
  1005b7:	e8 95 1c 00 00       	call   102251 <printk>
  1005bc:	83 c4 10             	add    $0x10,%esp
  1005bf:	fb                   	sti    
  1005c0:	83 ec 0c             	sub    $0xc,%esp
  1005c3:	6a 00                	push   $0x0
  1005c5:	e8 3c 2a 00 00       	call   103006 <init_timer>
  1005ca:	83 c4 10             	add    $0x10,%esp
  1005cd:	83 ec 0c             	sub    $0xc,%esp
  1005d0:	8d 83 f7 ee ff ff    	lea    -0x1109(%ebx),%eax
  1005d6:	50                   	push   %eax
  1005d7:	e8 75 1c 00 00       	call   102251 <printk>
  1005dc:	83 c4 10             	add    $0x10,%esp
  1005df:	e8 e4 0c 00 00       	call   1012c8 <init_keyboard>
  1005e4:	83 ec 0c             	sub    $0xc,%esp
  1005e7:	8d 83 10 ef ff ff    	lea    -0x10f0(%ebx),%eax
  1005ed:	50                   	push   %eax
  1005ee:	e8 5e 1c 00 00       	call   102251 <printk>
  1005f3:	83 c4 10             	add    $0x10,%esp
  1005f6:	e8 0d fe ff ff       	call   100408 <init_mouse>
  1005fb:	83 ec 0c             	sub    $0xc,%esp
  1005fe:	8d 83 26 ef ff ff    	lea    -0x10da(%ebx),%eax
  100604:	50                   	push   %eax
  100605:	e8 47 1c 00 00       	call   102251 <printk>
  10060a:	83 c4 10             	add    $0x10,%esp
  10060d:	e8 6b 0a 00 00       	call   10107d <init_ata>
  100612:	83 ec 0c             	sub    $0xc,%esp
  100615:	8d 83 3a ef ff ff    	lea    -0x10c6(%ebx),%eax
  10061b:	50                   	push   %eax
  10061c:	e8 30 1c 00 00       	call   102251 <printk>
  100621:	83 c4 10             	add    $0x10,%esp
  100624:	e8 59 1b 00 00       	call   102182 <init_pci>
  100629:	83 ec 0c             	sub    $0xc,%esp
  10062c:	8d 83 50 ef ff ff    	lea    -0x10b0(%ebx),%eax
  100632:	50                   	push   %eax
  100633:	e8 19 1c 00 00       	call   102251 <printk>
  100638:	83 c4 10             	add    $0x10,%esp
  10063b:	8d 83 8c b3 ff ff    	lea    -0x4c74(%ebx),%eax
  100641:	89 45 ec             	mov    %eax,-0x14(%ebp)
  100644:	c7 45 e8 00 00 60 00 	movl   $0x600000,-0x18(%ebp)
  10064b:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  100652:	eb 47                	jmp    10069b <kernel_main+0x17a>
  100654:	8b 55 f4             	mov    -0xc(%ebp),%edx
  100657:	8b 45 ec             	mov    -0x14(%ebp),%eax
  10065a:	01 d0                	add    %edx,%eax
  10065c:	0f b6 00             	movzbl (%eax),%eax
  10065f:	0f b6 c0             	movzbl %al,%eax
  100662:	83 ec 08             	sub    $0x8,%esp
  100665:	6a 02                	push   $0x2
  100667:	50                   	push   %eax
  100668:	e8 d5 2c 00 00       	call   103342 <print_hex>
  10066d:	83 c4 10             	add    $0x10,%esp
  100670:	8b 55 f4             	mov    -0xc(%ebp),%edx
  100673:	8b 45 ec             	mov    -0x14(%ebp),%eax
  100676:	01 d0                	add    %edx,%eax
  100678:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  10067b:	8b 55 e8             	mov    -0x18(%ebp),%edx
  10067e:	01 ca                	add    %ecx,%edx
  100680:	0f b6 00             	movzbl (%eax),%eax
  100683:	88 02                	mov    %al,(%edx)
  100685:	83 ec 0c             	sub    $0xc,%esp
  100688:	8d 83 71 ef ff ff    	lea    -0x108f(%ebx),%eax
  10068e:	50                   	push   %eax
  10068f:	e8 bd 1b 00 00       	call   102251 <printk>
  100694:	83 c4 10             	add    $0x10,%esp
  100697:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
  10069b:	83 7d f4 2c          	cmpl   $0x2c,-0xc(%ebp)
  10069f:	7e b3                	jle    100654 <kernel_main+0x133>
  1006a1:	83 ec 0c             	sub    $0xc,%esp
  1006a4:	8d 83 b2 ee ff ff    	lea    -0x114e(%ebx),%eax
  1006aa:	50                   	push   %eax
  1006ab:	e8 a1 1b 00 00       	call   102251 <printk>
  1006b0:	83 c4 10             	add    $0x10,%esp
  1006b3:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
  1006ba:	eb 32                	jmp    1006ee <kernel_main+0x1cd>
  1006bc:	8b 55 f0             	mov    -0x10(%ebp),%edx
  1006bf:	8b 45 e8             	mov    -0x18(%ebp),%eax
  1006c2:	01 d0                	add    %edx,%eax
  1006c4:	0f b6 00             	movzbl (%eax),%eax
  1006c7:	0f b6 c0             	movzbl %al,%eax
  1006ca:	83 ec 08             	sub    $0x8,%esp
  1006cd:	6a 02                	push   $0x2
  1006cf:	50                   	push   %eax
  1006d0:	e8 6d 2c 00 00       	call   103342 <print_hex>
  1006d5:	83 c4 10             	add    $0x10,%esp
  1006d8:	83 ec 0c             	sub    $0xc,%esp
  1006db:	8d 83 71 ef ff ff    	lea    -0x108f(%ebx),%eax
  1006e1:	50                   	push   %eax
  1006e2:	e8 6a 1b 00 00       	call   102251 <printk>
  1006e7:	83 c4 10             	add    $0x10,%esp
  1006ea:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
  1006ee:	83 7d f0 2c          	cmpl   $0x2c,-0x10(%ebp)
  1006f2:	7e c8                	jle    1006bc <kernel_main+0x19b>
  1006f4:	83 ec 0c             	sub    $0xc,%esp
  1006f7:	8d 83 b2 ee ff ff    	lea    -0x114e(%ebx),%eax
  1006fd:	50                   	push   %eax
  1006fe:	e8 4e 1b 00 00       	call   102251 <printk>
  100703:	83 c4 10             	add    $0x10,%esp
  100706:	c7 45 e4 00 00 60 00 	movl   $0x600000,-0x1c(%ebp)
  10070d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
  100710:	ff d0                	call   *%eax
  100712:	83 ec 0c             	sub    $0xc,%esp
  100715:	8d 83 74 ef ff ff    	lea    -0x108c(%ebx),%eax
  10071b:	50                   	push   %eax
  10071c:	e8 30 1b 00 00       	call   102251 <printk>
  100721:	83 c4 10             	add    $0x10,%esp
  100724:	eb fe                	jmp    100724 <kernel_main+0x203>

00100726 <testok1>:
  100726:	55                   	push   %ebp
  100727:	89 e5                	mov    %esp,%ebp
  100729:	53                   	push   %ebx
  10072a:	83 ec 04             	sub    $0x4,%esp
  10072d:	e8 2a 2e 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  100732:	05 36 4a 00 00       	add    $0x4a36,%eax
  100737:	83 ec 08             	sub    $0x8,%esp
  10073a:	6a 0c                	push   $0xc
  10073c:	8d 90 95 ef ff ff    	lea    -0x106b(%eax),%edx
  100742:	52                   	push   %edx
  100743:	89 c3                	mov    %eax,%ebx
  100745:	e8 cd 1c 00 00       	call   102417 <printkc>
  10074a:	83 c4 10             	add    $0x10,%esp
  10074d:	90                   	nop
  10074e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100751:	c9                   	leave  
  100752:	c3                   	ret    

00100753 <testok2>:
  100753:	55                   	push   %ebp
  100754:	89 e5                	mov    %esp,%ebp
  100756:	53                   	push   %ebx
  100757:	83 ec 04             	sub    $0x4,%esp
  10075a:	e8 fd 2d 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  10075f:	05 09 4a 00 00       	add    $0x4a09,%eax
  100764:	83 ec 08             	sub    $0x8,%esp
  100767:	6a 0d                	push   $0xd
  100769:	8d 90 9b ef ff ff    	lea    -0x1065(%eax),%edx
  10076f:	52                   	push   %edx
  100770:	89 c3                	mov    %eax,%ebx
  100772:	e8 a0 1c 00 00       	call   102417 <printkc>
  100777:	83 c4 10             	add    $0x10,%esp
  10077a:	90                   	nop
  10077b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  10077e:	c9                   	leave  
  10077f:	c3                   	ret    

00100780 <start_shell>:
  100780:	55                   	push   %ebp
  100781:	89 e5                	mov    %esp,%ebp
  100783:	53                   	push   %ebx
  100784:	83 ec 14             	sub    $0x14,%esp
  100787:	e8 d4 2d 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  10078c:	81 c3 dc 49 00 00    	add    $0x49dc,%ebx
  100792:	83 ec 0c             	sub    $0xc,%esp
  100795:	c7 c0 c5 11 10 00    	mov    $0x1011c5,%eax
  10079b:	50                   	push   %eax
  10079c:	e8 0e 0b 00 00       	call   1012af <set_keyboard_hook>
  1007a1:	83 c4 10             	add    $0x10,%esp
  1007a4:	83 ec 0c             	sub    $0xc,%esp
  1007a7:	8d 83 a3 ef ff ff    	lea    -0x105d(%ebx),%eax
  1007ad:	50                   	push   %eax
  1007ae:	e8 9e 1a 00 00       	call   102251 <printk>
  1007b3:	83 c4 10             	add    $0x10,%esp
  1007b6:	83 ec 08             	sub    $0x8,%esp
  1007b9:	6a 0a                	push   $0xa
  1007bb:	8d 83 b0 ef ff ff    	lea    -0x1050(%ebx),%eax
  1007c1:	50                   	push   %eax
  1007c2:	e8 50 1c 00 00       	call   102417 <printkc>
  1007c7:	83 c4 10             	add    $0x10,%esp
  1007ca:	e8 9c 0a 00 00       	call   10126b <input>
  1007cf:	89 45 f4             	mov    %eax,-0xc(%ebp)
  1007d2:	83 ec 0c             	sub    $0xc,%esp
  1007d5:	8d 83 b7 ef ff ff    	lea    -0x1049(%ebx),%eax
  1007db:	50                   	push   %eax
  1007dc:	e8 70 1a 00 00       	call   102251 <printk>
  1007e1:	83 c4 10             	add    $0x10,%esp
  1007e4:	83 ec 08             	sub    $0x8,%esp
  1007e7:	8d 83 b9 ef ff ff    	lea    -0x1047(%ebx),%eax
  1007ed:	50                   	push   %eax
  1007ee:	ff 75 f4             	push   -0xc(%ebp)
  1007f1:	e8 11 2d 00 00       	call   103507 <strcmp>
  1007f6:	83 c4 10             	add    $0x10,%esp
  1007f9:	85 c0                	test   %eax,%eax
  1007fb:	74 67                	je     100864 <start_shell+0xe4>
  1007fd:	83 ec 08             	sub    $0x8,%esp
  100800:	8d 83 ba ef ff ff    	lea    -0x1046(%ebx),%eax
  100806:	50                   	push   %eax
  100807:	ff 75 f4             	push   -0xc(%ebp)
  10080a:	e8 f8 2c 00 00       	call   103507 <strcmp>
  10080f:	83 c4 10             	add    $0x10,%esp
  100812:	85 c0                	test   %eax,%eax
  100814:	75 07                	jne    10081d <start_shell+0x9d>
  100816:	e8 7f 19 00 00       	call   10219a <clear_screen>
  10081b:	eb 99                	jmp    1007b6 <start_shell+0x36>
  10081d:	83 ec 08             	sub    $0x8,%esp
  100820:	8d 83 c0 ef ff ff    	lea    -0x1040(%ebx),%eax
  100826:	50                   	push   %eax
  100827:	ff 75 f4             	push   -0xc(%ebp)
  10082a:	e8 d8 2c 00 00       	call   103507 <strcmp>
  10082f:	83 c4 10             	add    $0x10,%esp
  100832:	85 c0                	test   %eax,%eax
  100834:	75 07                	jne    10083d <start_shell+0xbd>
  100836:	b8 01 00 00 00       	mov    $0x1,%eax
  10083b:	eb 2d                	jmp    10086a <start_shell+0xea>
  10083d:	83 ec 08             	sub    $0x8,%esp
  100840:	8d 83 c5 ef ff ff    	lea    -0x103b(%ebx),%eax
  100846:	50                   	push   %eax
  100847:	ff 75 f4             	push   -0xc(%ebp)
  10084a:	e8 b8 2c 00 00       	call   103507 <strcmp>
  10084f:	83 c4 10             	add    $0x10,%esp
  100852:	85 c0                	test   %eax,%eax
  100854:	0f 85 5c ff ff ff    	jne    1007b6 <start_shell+0x36>
  10085a:	e8 23 19 00 00       	call   102182 <init_pci>
  10085f:	e9 52 ff ff ff       	jmp    1007b6 <start_shell+0x36>
  100864:	90                   	nop
  100865:	e9 4c ff ff ff       	jmp    1007b6 <start_shell+0x36>
  10086a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  10086d:	c9                   	leave  
  10086e:	c3                   	ret    

0010086f <ata_detect>:
  10086f:	55                   	push   %ebp
  100870:	89 e5                	mov    %esp,%ebp
  100872:	53                   	push   %ebx
  100873:	83 ec 24             	sub    $0x24,%esp
  100876:	e8 e5 2c 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  10087b:	81 c3 ed 48 00 00    	add    $0x48ed,%ebx
  100881:	8b 45 0c             	mov    0xc(%ebp),%eax
  100884:	8b 55 10             	mov    0x10(%ebp),%edx
  100887:	66 89 45 e4          	mov    %ax,-0x1c(%ebp)
  10088b:	89 d0                	mov    %edx,%eax
  10088d:	88 45 e0             	mov    %al,-0x20(%ebp)
  100890:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax
  100894:	66 89 45 e8          	mov    %ax,-0x18(%ebp)
  100898:	8b 45 14             	mov    0x14(%ebp),%eax
  10089b:	89 45 ec             	mov    %eax,-0x14(%ebp)
  10089e:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
  1008a2:	88 45 ea             	mov    %al,-0x16(%ebp)
  1008a5:	c6 45 f0 00          	movb   $0x0,-0x10(%ebp)
  1008a9:	83 ec 0c             	sub    $0xc,%esp
  1008ac:	8d 83 cc ef ff ff    	lea    -0x1034(%ebx),%eax
  1008b2:	50                   	push   %eax
  1008b3:	e8 99 19 00 00       	call   102251 <printk>
  1008b8:	83 c4 10             	add    $0x10,%esp
  1008bb:	83 ec 0c             	sub    $0xc,%esp
  1008be:	ff 75 14             	push   0x14(%ebp)
  1008c1:	e8 8b 19 00 00       	call   102251 <printk>
  1008c6:	83 c4 10             	add    $0x10,%esp
  1008c9:	83 ec 0c             	sub    $0xc,%esp
  1008cc:	8d 83 d6 ef ff ff    	lea    -0x102a(%ebx),%eax
  1008d2:	50                   	push   %eax
  1008d3:	e8 79 19 00 00       	call   102251 <printk>
  1008d8:	83 c4 10             	add    $0x10,%esp
  1008db:	80 7d e0 00          	cmpb   $0x0,-0x20(%ebp)
  1008df:	74 08                	je     1008e9 <ata_detect+0x7a>
  1008e1:	8d 83 d8 ef ff ff    	lea    -0x1028(%ebx),%eax
  1008e7:	eb 06                	jmp    1008ef <ata_detect+0x80>
  1008e9:	8d 83 df ef ff ff    	lea    -0x1021(%ebx),%eax
  1008ef:	83 ec 0c             	sub    $0xc,%esp
  1008f2:	50                   	push   %eax
  1008f3:	e8 59 19 00 00       	call   102251 <printk>
  1008f8:	83 c4 10             	add    $0x10,%esp
  1008fb:	83 ec 0c             	sub    $0xc,%esp
  1008fe:	8d 83 e5 ef ff ff    	lea    -0x101b(%ebx),%eax
  100904:	50                   	push   %eax
  100905:	e8 47 19 00 00       	call   102251 <printk>
  10090a:	83 c4 10             	add    $0x10,%esp
  10090d:	80 7d e0 00          	cmpb   $0x0,-0x20(%ebp)
  100911:	74 07                	je     10091a <ata_detect+0xab>
  100913:	ba a0 00 00 00       	mov    $0xa0,%edx
  100918:	eb 05                	jmp    10091f <ata_detect+0xb0>
  10091a:	ba b0 00 00 00       	mov    $0xb0,%edx
  10091f:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  100923:	83 c0 06             	add    $0x6,%eax
  100926:	0f b7 c0             	movzwl %ax,%eax
  100929:	83 ec 08             	sub    $0x8,%esp
  10092c:	52                   	push   %edx
  10092d:	50                   	push   %eax
  10092e:	e8 fc 25 00 00       	call   102f2f <port_outb>
  100933:	83 c4 10             	add    $0x10,%esp
  100936:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  10093a:	66 05 06 02          	add    $0x206,%ax
  10093e:	0f b7 c0             	movzwl %ax,%eax
  100941:	83 ec 08             	sub    $0x8,%esp
  100944:	6a 00                	push   $0x0
  100946:	50                   	push   %eax
  100947:	e8 e3 25 00 00       	call   102f2f <port_outb>
  10094c:	83 c4 10             	add    $0x10,%esp
  10094f:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  100953:	83 c0 06             	add    $0x6,%eax
  100956:	0f b7 c0             	movzwl %ax,%eax
  100959:	83 ec 08             	sub    $0x8,%esp
  10095c:	68 a0 00 00 00       	push   $0xa0
  100961:	50                   	push   %eax
  100962:	e8 c8 25 00 00       	call   102f2f <port_outb>
  100967:	83 c4 10             	add    $0x10,%esp
  10096a:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  10096e:	83 c0 07             	add    $0x7,%eax
  100971:	0f b7 c0             	movzwl %ax,%eax
  100974:	83 ec 0c             	sub    $0xc,%esp
  100977:	50                   	push   %eax
  100978:	e8 8b 25 00 00       	call   102f08 <port_inb>
  10097d:	83 c4 10             	add    $0x10,%esp
  100980:	88 45 f7             	mov    %al,-0x9(%ebp)
  100983:	80 7d f7 ff          	cmpb   $0xff,-0x9(%ebp)
  100987:	75 2b                	jne    1009b4 <ata_detect+0x145>
  100989:	83 ec 0c             	sub    $0xc,%esp
  10098c:	8d 83 e8 ef ff ff    	lea    -0x1018(%ebx),%eax
  100992:	50                   	push   %eax
  100993:	e8 b9 18 00 00       	call   102251 <printk>
  100998:	83 c4 10             	add    $0x10,%esp
  10099b:	8b 45 08             	mov    0x8(%ebp),%eax
  10099e:	8b 55 e8             	mov    -0x18(%ebp),%edx
  1009a1:	89 10                	mov    %edx,(%eax)
  1009a3:	8b 55 ec             	mov    -0x14(%ebp),%edx
  1009a6:	89 50 04             	mov    %edx,0x4(%eax)
  1009a9:	8b 55 f0             	mov    -0x10(%ebp),%edx
  1009ac:	89 50 08             	mov    %edx,0x8(%eax)
  1009af:	e9 bb 01 00 00       	jmp    100b6f <ata_detect+0x300>
  1009b4:	80 7d e0 00          	cmpb   $0x0,-0x20(%ebp)
  1009b8:	74 07                	je     1009c1 <ata_detect+0x152>
  1009ba:	ba a0 00 00 00       	mov    $0xa0,%edx
  1009bf:	eb 05                	jmp    1009c6 <ata_detect+0x157>
  1009c1:	ba b0 00 00 00       	mov    $0xb0,%edx
  1009c6:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  1009ca:	83 c0 06             	add    $0x6,%eax
  1009cd:	0f b7 c0             	movzwl %ax,%eax
  1009d0:	83 ec 08             	sub    $0x8,%esp
  1009d3:	52                   	push   %edx
  1009d4:	50                   	push   %eax
  1009d5:	e8 55 25 00 00       	call   102f2f <port_outb>
  1009da:	83 c4 10             	add    $0x10,%esp
  1009dd:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  1009e1:	83 c0 02             	add    $0x2,%eax
  1009e4:	0f b7 c0             	movzwl %ax,%eax
  1009e7:	83 ec 08             	sub    $0x8,%esp
  1009ea:	6a 00                	push   $0x0
  1009ec:	50                   	push   %eax
  1009ed:	e8 3d 25 00 00       	call   102f2f <port_outb>
  1009f2:	83 c4 10             	add    $0x10,%esp
  1009f5:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  1009f9:	83 c0 03             	add    $0x3,%eax
  1009fc:	0f b7 c0             	movzwl %ax,%eax
  1009ff:	83 ec 08             	sub    $0x8,%esp
  100a02:	6a 00                	push   $0x0
  100a04:	50                   	push   %eax
  100a05:	e8 25 25 00 00       	call   102f2f <port_outb>
  100a0a:	83 c4 10             	add    $0x10,%esp
  100a0d:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  100a11:	83 c0 04             	add    $0x4,%eax
  100a14:	0f b7 c0             	movzwl %ax,%eax
  100a17:	83 ec 08             	sub    $0x8,%esp
  100a1a:	6a 00                	push   $0x0
  100a1c:	50                   	push   %eax
  100a1d:	e8 0d 25 00 00       	call   102f2f <port_outb>
  100a22:	83 c4 10             	add    $0x10,%esp
  100a25:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  100a29:	83 c0 05             	add    $0x5,%eax
  100a2c:	0f b7 c0             	movzwl %ax,%eax
  100a2f:	83 ec 08             	sub    $0x8,%esp
  100a32:	6a 00                	push   $0x0
  100a34:	50                   	push   %eax
  100a35:	e8 f5 24 00 00       	call   102f2f <port_outb>
  100a3a:	83 c4 10             	add    $0x10,%esp
  100a3d:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  100a41:	83 c0 07             	add    $0x7,%eax
  100a44:	0f b7 c0             	movzwl %ax,%eax
  100a47:	83 ec 08             	sub    $0x8,%esp
  100a4a:	68 ec 00 00 00       	push   $0xec
  100a4f:	50                   	push   %eax
  100a50:	e8 da 24 00 00       	call   102f2f <port_outb>
  100a55:	83 c4 10             	add    $0x10,%esp
  100a58:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  100a5c:	83 c0 07             	add    $0x7,%eax
  100a5f:	0f b7 c0             	movzwl %ax,%eax
  100a62:	83 ec 0c             	sub    $0xc,%esp
  100a65:	50                   	push   %eax
  100a66:	e8 9d 24 00 00       	call   102f08 <port_inb>
  100a6b:	83 c4 10             	add    $0x10,%esp
  100a6e:	88 45 f7             	mov    %al,-0x9(%ebp)
  100a71:	80 7d f7 ff          	cmpb   $0xff,-0x9(%ebp)
  100a75:	75 44                	jne    100abb <ata_detect+0x24c>
  100a77:	83 ec 0c             	sub    $0xc,%esp
  100a7a:	8d 83 e8 ef ff ff    	lea    -0x1018(%ebx),%eax
  100a80:	50                   	push   %eax
  100a81:	e8 cb 17 00 00       	call   102251 <printk>
  100a86:	83 c4 10             	add    $0x10,%esp
  100a89:	8b 45 08             	mov    0x8(%ebp),%eax
  100a8c:	8b 55 e8             	mov    -0x18(%ebp),%edx
  100a8f:	89 10                	mov    %edx,(%eax)
  100a91:	8b 55 ec             	mov    -0x14(%ebp),%edx
  100a94:	89 50 04             	mov    %edx,0x4(%eax)
  100a97:	8b 55 f0             	mov    -0x10(%ebp),%edx
  100a9a:	89 50 08             	mov    %edx,0x8(%eax)
  100a9d:	e9 cd 00 00 00       	jmp    100b6f <ata_detect+0x300>
  100aa2:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  100aa6:	83 c0 07             	add    $0x7,%eax
  100aa9:	0f b7 c0             	movzwl %ax,%eax
  100aac:	83 ec 0c             	sub    $0xc,%esp
  100aaf:	50                   	push   %eax
  100ab0:	e8 53 24 00 00       	call   102f08 <port_inb>
  100ab5:	83 c4 10             	add    $0x10,%esp
  100ab8:	88 45 f7             	mov    %al,-0x9(%ebp)
  100abb:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  100abf:	84 c0                	test   %al,%al
  100ac1:	79 0b                	jns    100ace <ata_detect+0x25f>
  100ac3:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  100ac7:	83 e0 40             	and    $0x40,%eax
  100aca:	85 c0                	test   %eax,%eax
  100acc:	74 d4                	je     100aa2 <ata_detect+0x233>
  100ace:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  100ad2:	83 c0 07             	add    $0x7,%eax
  100ad5:	0f b7 c0             	movzwl %ax,%eax
  100ad8:	83 ec 0c             	sub    $0xc,%esp
  100adb:	50                   	push   %eax
  100adc:	e8 27 24 00 00       	call   102f08 <port_inb>
  100ae1:	83 c4 10             	add    $0x10,%esp
  100ae4:	88 45 f7             	mov    %al,-0x9(%ebp)
  100ae7:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  100aeb:	83 e0 01             	and    $0x1,%eax
  100aee:	85 c0                	test   %eax,%eax
  100af0:	74 28                	je     100b1a <ata_detect+0x2ab>
  100af2:	83 ec 0c             	sub    $0xc,%esp
  100af5:	8d 83 f3 ef ff ff    	lea    -0x100d(%ebx),%eax
  100afb:	50                   	push   %eax
  100afc:	e8 50 17 00 00       	call   102251 <printk>
  100b01:	83 c4 10             	add    $0x10,%esp
  100b04:	8b 45 08             	mov    0x8(%ebp),%eax
  100b07:	8b 55 e8             	mov    -0x18(%ebp),%edx
  100b0a:	89 10                	mov    %edx,(%eax)
  100b0c:	8b 55 ec             	mov    -0x14(%ebp),%edx
  100b0f:	89 50 04             	mov    %edx,0x4(%eax)
  100b12:	8b 55 f0             	mov    -0x10(%ebp),%edx
  100b15:	89 50 08             	mov    %edx,0x8(%eax)
  100b18:	eb 55                	jmp    100b6f <ata_detect+0x300>
  100b1a:	66 c7 45 f4 00 00    	movw   $0x0,-0xc(%ebp)
  100b20:	eb 1b                	jmp    100b3d <ata_detect+0x2ce>
  100b22:	0f b7 45 e8          	movzwl -0x18(%ebp),%eax
  100b26:	83 c0 07             	add    $0x7,%eax
  100b29:	0f b7 c0             	movzwl %ax,%eax
  100b2c:	83 ec 0c             	sub    $0xc,%esp
  100b2f:	50                   	push   %eax
  100b30:	e8 25 24 00 00       	call   102f5a <port_inw>
  100b35:	83 c4 10             	add    $0x10,%esp
  100b38:	66 83 45 f4 02       	addw   $0x2,-0xc(%ebp)
  100b3d:	66 81 7d f4 ff 01    	cmpw   $0x1ff,-0xc(%ebp)
  100b43:	76 dd                	jbe    100b22 <ata_detect+0x2b3>
  100b45:	c6 45 f0 01          	movb   $0x1,-0x10(%ebp)
  100b49:	83 ec 0c             	sub    $0xc,%esp
  100b4c:	8d 83 fa ef ff ff    	lea    -0x1006(%ebx),%eax
  100b52:	50                   	push   %eax
  100b53:	e8 f9 16 00 00       	call   102251 <printk>
  100b58:	83 c4 10             	add    $0x10,%esp
  100b5b:	8b 45 08             	mov    0x8(%ebp),%eax
  100b5e:	8b 55 e8             	mov    -0x18(%ebp),%edx
  100b61:	89 10                	mov    %edx,(%eax)
  100b63:	8b 55 ec             	mov    -0x14(%ebp),%edx
  100b66:	89 50 04             	mov    %edx,0x4(%eax)
  100b69:	8b 55 f0             	mov    -0x10(%ebp),%edx
  100b6c:	89 50 08             	mov    %edx,0x8(%eax)
  100b6f:	8b 45 08             	mov    0x8(%ebp),%eax
  100b72:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100b75:	c9                   	leave  
  100b76:	c2 04 00             	ret    $0x4

00100b79 <ata_write>:
  100b79:	55                   	push   %ebp
  100b7a:	89 e5                	mov    %esp,%ebp
  100b7c:	53                   	push   %ebx
  100b7d:	83 ec 24             	sub    $0x24,%esp
  100b80:	e8 db 29 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  100b85:	81 c3 e3 45 00 00    	add    $0x45e3,%ebx
  100b8b:	8b 45 1c             	mov    0x1c(%ebp),%eax
  100b8e:	66 89 45 e4          	mov    %ax,-0x1c(%ebp)
  100b92:	8b 45 14             	mov    0x14(%ebp),%eax
  100b95:	25 00 00 00 f0       	and    $0xf0000000,%eax
  100b9a:	85 c0                	test   %eax,%eax
  100b9c:	74 0a                	je     100ba8 <ata_write+0x2f>
  100b9e:	b8 00 00 00 00       	mov    $0x0,%eax
  100ba3:	e9 e0 01 00 00       	jmp    100d88 <ata_write+0x20f>
  100ba8:	66 81 7d e4 00 02    	cmpw   $0x200,-0x1c(%ebp)
  100bae:	76 0a                	jbe    100bba <ata_write+0x41>
  100bb0:	b8 00 00 00 00       	mov    $0x0,%eax
  100bb5:	e9 ce 01 00 00       	jmp    100d88 <ata_write+0x20f>
  100bba:	0f b6 45 0a          	movzbl 0xa(%ebp),%eax
  100bbe:	84 c0                	test   %al,%al
  100bc0:	74 07                	je     100bc9 <ata_write+0x50>
  100bc2:	ba e0 ff ff ff       	mov    $0xffffffe0,%edx
  100bc7:	eb 05                	jmp    100bce <ata_write+0x55>
  100bc9:	ba f0 ff ff ff       	mov    $0xfffffff0,%edx
  100bce:	8b 45 14             	mov    0x14(%ebp),%eax
  100bd1:	c1 e8 18             	shr    $0x18,%eax
  100bd4:	83 e0 0f             	and    $0xf,%eax
  100bd7:	09 d0                	or     %edx,%eax
  100bd9:	0f b6 d0             	movzbl %al,%edx
  100bdc:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100be0:	83 c0 06             	add    $0x6,%eax
  100be3:	0f b7 c0             	movzwl %ax,%eax
  100be6:	83 ec 08             	sub    $0x8,%esp
  100be9:	52                   	push   %edx
  100bea:	50                   	push   %eax
  100beb:	e8 3f 23 00 00       	call   102f2f <port_outb>
  100bf0:	83 c4 10             	add    $0x10,%esp
  100bf3:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100bf7:	83 c0 01             	add    $0x1,%eax
  100bfa:	0f b7 c0             	movzwl %ax,%eax
  100bfd:	83 ec 08             	sub    $0x8,%esp
  100c00:	6a 00                	push   $0x0
  100c02:	50                   	push   %eax
  100c03:	e8 27 23 00 00       	call   102f2f <port_outb>
  100c08:	83 c4 10             	add    $0x10,%esp
  100c0b:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100c0f:	83 c0 02             	add    $0x2,%eax
  100c12:	0f b7 c0             	movzwl %ax,%eax
  100c15:	83 ec 08             	sub    $0x8,%esp
  100c18:	6a 01                	push   $0x1
  100c1a:	50                   	push   %eax
  100c1b:	e8 0f 23 00 00       	call   102f2f <port_outb>
  100c20:	83 c4 10             	add    $0x10,%esp
  100c23:	8b 45 14             	mov    0x14(%ebp),%eax
  100c26:	0f b6 d0             	movzbl %al,%edx
  100c29:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100c2d:	83 c0 03             	add    $0x3,%eax
  100c30:	0f b7 c0             	movzwl %ax,%eax
  100c33:	83 ec 08             	sub    $0x8,%esp
  100c36:	52                   	push   %edx
  100c37:	50                   	push   %eax
  100c38:	e8 f2 22 00 00       	call   102f2f <port_outb>
  100c3d:	83 c4 10             	add    $0x10,%esp
  100c40:	8b 45 14             	mov    0x14(%ebp),%eax
  100c43:	c1 e8 08             	shr    $0x8,%eax
  100c46:	0f b6 d0             	movzbl %al,%edx
  100c49:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100c4d:	83 c0 04             	add    $0x4,%eax
  100c50:	0f b7 c0             	movzwl %ax,%eax
  100c53:	83 ec 08             	sub    $0x8,%esp
  100c56:	52                   	push   %edx
  100c57:	50                   	push   %eax
  100c58:	e8 d2 22 00 00       	call   102f2f <port_outb>
  100c5d:	83 c4 10             	add    $0x10,%esp
  100c60:	8b 45 14             	mov    0x14(%ebp),%eax
  100c63:	c1 e8 10             	shr    $0x10,%eax
  100c66:	0f b6 d0             	movzbl %al,%edx
  100c69:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100c6d:	83 c0 05             	add    $0x5,%eax
  100c70:	0f b7 c0             	movzwl %ax,%eax
  100c73:	83 ec 08             	sub    $0x8,%esp
  100c76:	52                   	push   %edx
  100c77:	50                   	push   %eax
  100c78:	e8 b2 22 00 00       	call   102f2f <port_outb>
  100c7d:	83 c4 10             	add    $0x10,%esp
  100c80:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100c84:	83 c0 07             	add    $0x7,%eax
  100c87:	0f b7 c0             	movzwl %ax,%eax
  100c8a:	83 ec 08             	sub    $0x8,%esp
  100c8d:	6a 30                	push   $0x30
  100c8f:	50                   	push   %eax
  100c90:	e8 9a 22 00 00       	call   102f2f <port_outb>
  100c95:	83 c4 10             	add    $0x10,%esp
  100c98:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100c9c:	83 c0 07             	add    $0x7,%eax
  100c9f:	0f b7 c0             	movzwl %ax,%eax
  100ca2:	83 ec 0c             	sub    $0xc,%esp
  100ca5:	50                   	push   %eax
  100ca6:	e8 5d 22 00 00       	call   102f08 <port_inb>
  100cab:	83 c4 10             	add    $0x10,%esp
  100cae:	88 45 f7             	mov    %al,-0x9(%ebp)
  100cb1:	eb 19                	jmp    100ccc <ata_write+0x153>
  100cb3:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100cb7:	83 c0 07             	add    $0x7,%eax
  100cba:	0f b7 c0             	movzwl %ax,%eax
  100cbd:	83 ec 0c             	sub    $0xc,%esp
  100cc0:	50                   	push   %eax
  100cc1:	e8 42 22 00 00       	call   102f08 <port_inb>
  100cc6:	83 c4 10             	add    $0x10,%esp
  100cc9:	88 45 f7             	mov    %al,-0x9(%ebp)
  100ccc:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  100cd0:	84 c0                	test   %al,%al
  100cd2:	79 0b                	jns    100cdf <ata_write+0x166>
  100cd4:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  100cd8:	83 e0 40             	and    $0x40,%eax
  100cdb:	85 c0                	test   %eax,%eax
  100cdd:	74 d4                	je     100cb3 <ata_write+0x13a>
  100cdf:	66 c7 45 f4 00 00    	movw   $0x0,-0xc(%ebp)
  100ce5:	eb 60                	jmp    100d47 <ata_write+0x1ce>
  100ce7:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
  100ceb:	8b 45 18             	mov    0x18(%ebp),%eax
  100cee:	01 d0                	add    %edx,%eax
  100cf0:	0f b6 00             	movzbl (%eax),%eax
  100cf3:	0f b6 c0             	movzbl %al,%eax
  100cf6:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
  100cfa:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
  100cfe:	8d 50 01             	lea    0x1(%eax),%edx
  100d01:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax
  100d05:	39 c2                	cmp    %eax,%edx
  100d07:	7d 21                	jge    100d2a <ata_write+0x1b1>
  100d09:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
  100d0d:	8d 50 01             	lea    0x1(%eax),%edx
  100d10:	8b 45 18             	mov    0x18(%ebp),%eax
  100d13:	01 d0                	add    %edx,%eax
  100d15:	0f b6 00             	movzbl (%eax),%eax
  100d18:	0f b6 c0             	movzbl %al,%eax
  100d1b:	c1 e0 08             	shl    $0x8,%eax
  100d1e:	89 c2                	mov    %eax,%edx
  100d20:	0f b7 45 f2          	movzwl -0xe(%ebp),%eax
  100d24:	09 d0                	or     %edx,%eax
  100d26:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
  100d2a:	0f b7 55 f2          	movzwl -0xe(%ebp),%edx
  100d2e:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100d32:	0f b7 c0             	movzwl %ax,%eax
  100d35:	83 ec 08             	sub    $0x8,%esp
  100d38:	52                   	push   %edx
  100d39:	50                   	push   %eax
  100d3a:	e8 44 22 00 00       	call   102f83 <port_outw>
  100d3f:	83 c4 10             	add    $0x10,%esp
  100d42:	66 83 45 f4 02       	addw   $0x2,-0xc(%ebp)
  100d47:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
  100d4b:	66 3b 45 e4          	cmp    -0x1c(%ebp),%ax
  100d4f:	72 96                	jb     100ce7 <ata_write+0x16e>
  100d51:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax
  100d55:	83 c0 01             	add    $0x1,%eax
  100d58:	83 e0 fe             	and    $0xfffffffe,%eax
  100d5b:	66 89 45 f0          	mov    %ax,-0x10(%ebp)
  100d5f:	eb 1a                	jmp    100d7b <ata_write+0x202>
  100d61:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100d65:	0f b7 c0             	movzwl %ax,%eax
  100d68:	83 ec 08             	sub    $0x8,%esp
  100d6b:	6a 00                	push   $0x0
  100d6d:	50                   	push   %eax
  100d6e:	e8 10 22 00 00       	call   102f83 <port_outw>
  100d73:	83 c4 10             	add    $0x10,%esp
  100d76:	66 83 45 f0 02       	addw   $0x2,-0x10(%ebp)
  100d7b:	66 81 7d f0 ff 01    	cmpw   $0x1ff,-0x10(%ebp)
  100d81:	76 de                	jbe    100d61 <ata_write+0x1e8>
  100d83:	b8 01 00 00 00       	mov    $0x1,%eax
  100d88:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100d8b:	c9                   	leave  
  100d8c:	c3                   	ret    

00100d8d <ata_read>:
  100d8d:	55                   	push   %ebp
  100d8e:	89 e5                	mov    %esp,%ebp
  100d90:	53                   	push   %ebx
  100d91:	83 ec 24             	sub    $0x24,%esp
  100d94:	e8 c7 27 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  100d99:	81 c3 cf 43 00 00    	add    $0x43cf,%ebx
  100d9f:	8b 45 1c             	mov    0x1c(%ebp),%eax
  100da2:	66 89 45 e4          	mov    %ax,-0x1c(%ebp)
  100da6:	8b 45 14             	mov    0x14(%ebp),%eax
  100da9:	25 00 00 00 f0       	and    $0xf0000000,%eax
  100dae:	85 c0                	test   %eax,%eax
  100db0:	74 0a                	je     100dbc <ata_read+0x2f>
  100db2:	b8 00 00 00 00       	mov    $0x0,%eax
  100db7:	e9 ef 01 00 00       	jmp    100fab <ata_read+0x21e>
  100dbc:	0f b6 45 0a          	movzbl 0xa(%ebp),%eax
  100dc0:	84 c0                	test   %al,%al
  100dc2:	74 07                	je     100dcb <ata_read+0x3e>
  100dc4:	ba e0 ff ff ff       	mov    $0xffffffe0,%edx
  100dc9:	eb 05                	jmp    100dd0 <ata_read+0x43>
  100dcb:	ba f0 ff ff ff       	mov    $0xfffffff0,%edx
  100dd0:	8b 45 14             	mov    0x14(%ebp),%eax
  100dd3:	c1 e8 18             	shr    $0x18,%eax
  100dd6:	83 e0 0f             	and    $0xf,%eax
  100dd9:	09 d0                	or     %edx,%eax
  100ddb:	0f b6 d0             	movzbl %al,%edx
  100dde:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100de2:	83 c0 06             	add    $0x6,%eax
  100de5:	0f b7 c0             	movzwl %ax,%eax
  100de8:	83 ec 08             	sub    $0x8,%esp
  100deb:	52                   	push   %edx
  100dec:	50                   	push   %eax
  100ded:	e8 3d 21 00 00       	call   102f2f <port_outb>
  100df2:	83 c4 10             	add    $0x10,%esp
  100df5:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100df9:	83 c0 01             	add    $0x1,%eax
  100dfc:	0f b7 c0             	movzwl %ax,%eax
  100dff:	83 ec 08             	sub    $0x8,%esp
  100e02:	6a 00                	push   $0x0
  100e04:	50                   	push   %eax
  100e05:	e8 25 21 00 00       	call   102f2f <port_outb>
  100e0a:	83 c4 10             	add    $0x10,%esp
  100e0d:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100e11:	83 c0 02             	add    $0x2,%eax
  100e14:	0f b7 c0             	movzwl %ax,%eax
  100e17:	83 ec 08             	sub    $0x8,%esp
  100e1a:	6a 01                	push   $0x1
  100e1c:	50                   	push   %eax
  100e1d:	e8 0d 21 00 00       	call   102f2f <port_outb>
  100e22:	83 c4 10             	add    $0x10,%esp
  100e25:	8b 45 14             	mov    0x14(%ebp),%eax
  100e28:	0f b6 d0             	movzbl %al,%edx
  100e2b:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100e2f:	83 c0 03             	add    $0x3,%eax
  100e32:	0f b7 c0             	movzwl %ax,%eax
  100e35:	83 ec 08             	sub    $0x8,%esp
  100e38:	52                   	push   %edx
  100e39:	50                   	push   %eax
  100e3a:	e8 f0 20 00 00       	call   102f2f <port_outb>
  100e3f:	83 c4 10             	add    $0x10,%esp
  100e42:	8b 45 14             	mov    0x14(%ebp),%eax
  100e45:	c1 e8 08             	shr    $0x8,%eax
  100e48:	0f b6 d0             	movzbl %al,%edx
  100e4b:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100e4f:	83 c0 04             	add    $0x4,%eax
  100e52:	0f b7 c0             	movzwl %ax,%eax
  100e55:	83 ec 08             	sub    $0x8,%esp
  100e58:	52                   	push   %edx
  100e59:	50                   	push   %eax
  100e5a:	e8 d0 20 00 00       	call   102f2f <port_outb>
  100e5f:	83 c4 10             	add    $0x10,%esp
  100e62:	8b 45 14             	mov    0x14(%ebp),%eax
  100e65:	c1 e8 10             	shr    $0x10,%eax
  100e68:	0f b6 d0             	movzbl %al,%edx
  100e6b:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100e6f:	83 c0 05             	add    $0x5,%eax
  100e72:	0f b7 c0             	movzwl %ax,%eax
  100e75:	83 ec 08             	sub    $0x8,%esp
  100e78:	52                   	push   %edx
  100e79:	50                   	push   %eax
  100e7a:	e8 b0 20 00 00       	call   102f2f <port_outb>
  100e7f:	83 c4 10             	add    $0x10,%esp
  100e82:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100e86:	83 c0 07             	add    $0x7,%eax
  100e89:	0f b7 c0             	movzwl %ax,%eax
  100e8c:	83 ec 08             	sub    $0x8,%esp
  100e8f:	6a 20                	push   $0x20
  100e91:	50                   	push   %eax
  100e92:	e8 98 20 00 00       	call   102f2f <port_outb>
  100e97:	83 c4 10             	add    $0x10,%esp
  100e9a:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100e9e:	83 c0 07             	add    $0x7,%eax
  100ea1:	0f b7 c0             	movzwl %ax,%eax
  100ea4:	83 ec 0c             	sub    $0xc,%esp
  100ea7:	50                   	push   %eax
  100ea8:	e8 5b 20 00 00       	call   102f08 <port_inb>
  100ead:	83 c4 10             	add    $0x10,%esp
  100eb0:	88 45 f7             	mov    %al,-0x9(%ebp)
  100eb3:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  100eb7:	83 e0 01             	and    $0x1,%eax
  100eba:	85 c0                	test   %eax,%eax
  100ebc:	74 1c                	je     100eda <ata_read+0x14d>
  100ebe:	83 ec 0c             	sub    $0xc,%esp
  100ec1:	8d 83 04 f0 ff ff    	lea    -0xffc(%ebx),%eax
  100ec7:	50                   	push   %eax
  100ec8:	e8 84 13 00 00       	call   102251 <printk>
  100ecd:	83 c4 10             	add    $0x10,%esp
  100ed0:	b8 00 00 00 00       	mov    $0x0,%eax
  100ed5:	e9 d1 00 00 00       	jmp    100fab <ata_read+0x21e>
  100eda:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100ede:	83 c0 07             	add    $0x7,%eax
  100ee1:	0f b7 c0             	movzwl %ax,%eax
  100ee4:	83 ec 0c             	sub    $0xc,%esp
  100ee7:	50                   	push   %eax
  100ee8:	e8 1b 20 00 00       	call   102f08 <port_inb>
  100eed:	83 c4 10             	add    $0x10,%esp
  100ef0:	88 45 f7             	mov    %al,-0x9(%ebp)
  100ef3:	eb 19                	jmp    100f0e <ata_read+0x181>
  100ef5:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100ef9:	83 c0 07             	add    $0x7,%eax
  100efc:	0f b7 c0             	movzwl %ax,%eax
  100eff:	83 ec 0c             	sub    $0xc,%esp
  100f02:	50                   	push   %eax
  100f03:	e8 00 20 00 00       	call   102f08 <port_inb>
  100f08:	83 c4 10             	add    $0x10,%esp
  100f0b:	88 45 f7             	mov    %al,-0x9(%ebp)
  100f0e:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  100f12:	84 c0                	test   %al,%al
  100f14:	79 0b                	jns    100f21 <ata_read+0x194>
  100f16:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  100f1a:	83 e0 40             	and    $0x40,%eax
  100f1d:	85 c0                	test   %eax,%eax
  100f1f:	74 d4                	je     100ef5 <ata_read+0x168>
  100f21:	66 c7 45 f4 00 00    	movw   $0x0,-0xc(%ebp)
  100f27:	eb 43                	jmp    100f6c <ata_read+0x1df>
  100f29:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100f2d:	0f b7 c0             	movzwl %ax,%eax
  100f30:	83 ec 0c             	sub    $0xc,%esp
  100f33:	50                   	push   %eax
  100f34:	e8 21 20 00 00       	call   102f5a <port_inw>
  100f39:	83 c4 10             	add    $0x10,%esp
  100f3c:	66 89 45 f0          	mov    %ax,-0x10(%ebp)
  100f40:	0f b7 55 f4          	movzwl -0xc(%ebp),%edx
  100f44:	8b 45 18             	mov    0x18(%ebp),%eax
  100f47:	01 d0                	add    %edx,%eax
  100f49:	0f b7 55 f0          	movzwl -0x10(%ebp),%edx
  100f4d:	88 10                	mov    %dl,(%eax)
  100f4f:	0f b7 45 f0          	movzwl -0x10(%ebp),%eax
  100f53:	66 c1 e8 08          	shr    $0x8,%ax
  100f57:	89 c2                	mov    %eax,%edx
  100f59:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
  100f5d:	8d 48 01             	lea    0x1(%eax),%ecx
  100f60:	8b 45 18             	mov    0x18(%ebp),%eax
  100f63:	01 c8                	add    %ecx,%eax
  100f65:	88 10                	mov    %dl,(%eax)
  100f67:	66 83 45 f4 02       	addw   $0x2,-0xc(%ebp)
  100f6c:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
  100f70:	66 3b 45 e4          	cmp    -0x1c(%ebp),%ax
  100f74:	72 b3                	jb     100f29 <ata_read+0x19c>
  100f76:	0f b7 45 e4          	movzwl -0x1c(%ebp),%eax
  100f7a:	83 c0 01             	add    $0x1,%eax
  100f7d:	83 e0 fe             	and    $0xfffffffe,%eax
  100f80:	66 89 45 f2          	mov    %ax,-0xe(%ebp)
  100f84:	eb 18                	jmp    100f9e <ata_read+0x211>
  100f86:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100f8a:	0f b7 c0             	movzwl %ax,%eax
  100f8d:	83 ec 0c             	sub    $0xc,%esp
  100f90:	50                   	push   %eax
  100f91:	e8 c4 1f 00 00       	call   102f5a <port_inw>
  100f96:	83 c4 10             	add    $0x10,%esp
  100f99:	66 83 45 f2 02       	addw   $0x2,-0xe(%ebp)
  100f9e:	66 81 7d f2 ff 01    	cmpw   $0x1ff,-0xe(%ebp)
  100fa4:	76 e0                	jbe    100f86 <ata_read+0x1f9>
  100fa6:	b8 01 00 00 00       	mov    $0x1,%eax
  100fab:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  100fae:	c9                   	leave  
  100faf:	c3                   	ret    

00100fb0 <ata_flush>:
  100fb0:	55                   	push   %ebp
  100fb1:	89 e5                	mov    %esp,%ebp
  100fb3:	53                   	push   %ebx
  100fb4:	83 ec 14             	sub    $0x14,%esp
  100fb7:	e8 a4 25 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  100fbc:	81 c3 ac 41 00 00    	add    $0x41ac,%ebx
  100fc2:	0f b6 45 0a          	movzbl 0xa(%ebp),%eax
  100fc6:	84 c0                	test   %al,%al
  100fc8:	74 07                	je     100fd1 <ata_flush+0x21>
  100fca:	ba e0 00 00 00       	mov    $0xe0,%edx
  100fcf:	eb 05                	jmp    100fd6 <ata_flush+0x26>
  100fd1:	ba f0 00 00 00       	mov    $0xf0,%edx
  100fd6:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100fda:	83 c0 06             	add    $0x6,%eax
  100fdd:	0f b7 c0             	movzwl %ax,%eax
  100fe0:	83 ec 08             	sub    $0x8,%esp
  100fe3:	52                   	push   %edx
  100fe4:	50                   	push   %eax
  100fe5:	e8 45 1f 00 00       	call   102f2f <port_outb>
  100fea:	83 c4 10             	add    $0x10,%esp
  100fed:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  100ff1:	83 c0 07             	add    $0x7,%eax
  100ff4:	0f b7 c0             	movzwl %ax,%eax
  100ff7:	83 ec 08             	sub    $0x8,%esp
  100ffa:	68 e7 00 00 00       	push   $0xe7
  100fff:	50                   	push   %eax
  101000:	e8 2a 1f 00 00       	call   102f2f <port_outb>
  101005:	83 c4 10             	add    $0x10,%esp
  101008:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  10100c:	83 c0 07             	add    $0x7,%eax
  10100f:	0f b7 c0             	movzwl %ax,%eax
  101012:	83 ec 0c             	sub    $0xc,%esp
  101015:	50                   	push   %eax
  101016:	e8 ed 1e 00 00       	call   102f08 <port_inb>
  10101b:	83 c4 10             	add    $0x10,%esp
  10101e:	88 45 f7             	mov    %al,-0x9(%ebp)
  101021:	eb 19                	jmp    10103c <ata_flush+0x8c>
  101023:	0f b7 45 08          	movzwl 0x8(%ebp),%eax
  101027:	83 c0 07             	add    $0x7,%eax
  10102a:	0f b7 c0             	movzwl %ax,%eax
  10102d:	83 ec 0c             	sub    $0xc,%esp
  101030:	50                   	push   %eax
  101031:	e8 d2 1e 00 00       	call   102f08 <port_inb>
  101036:	83 c4 10             	add    $0x10,%esp
  101039:	88 45 f7             	mov    %al,-0x9(%ebp)
  10103c:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  101040:	84 c0                	test   %al,%al
  101042:	79 0b                	jns    10104f <ata_flush+0x9f>
  101044:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  101048:	83 e0 40             	and    $0x40,%eax
  10104b:	85 c0                	test   %eax,%eax
  10104d:	74 d4                	je     101023 <ata_flush+0x73>
  10104f:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  101053:	83 e0 01             	and    $0x1,%eax
  101056:	85 c0                	test   %eax,%eax
  101058:	74 19                	je     101073 <ata_flush+0xc3>
  10105a:	83 ec 0c             	sub    $0xc,%esp
  10105d:	8d 83 23 f0 ff ff    	lea    -0xfdd(%ebx),%eax
  101063:	50                   	push   %eax
  101064:	e8 e8 11 00 00       	call   102251 <printk>
  101069:	83 c4 10             	add    $0x10,%esp
  10106c:	b8 00 00 00 00       	mov    $0x0,%eax
  101071:	eb 05                	jmp    101078 <ata_flush+0xc8>
  101073:	b8 01 00 00 00       	mov    $0x1,%eax
  101078:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  10107b:	c9                   	leave  
  10107c:	c3                   	ret    

0010107d <init_ata>:
  10107d:	55                   	push   %ebp
  10107e:	89 e5                	mov    %esp,%ebp
  101080:	53                   	push   %ebx
  101081:	83 ec 44             	sub    $0x44,%esp
  101084:	e8 d7 24 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  101089:	81 c3 df 40 00 00    	add    $0x40df,%ebx
  10108f:	8d 45 ec             	lea    -0x14(%ebp),%eax
  101092:	8d 93 3c f0 ff ff    	lea    -0xfc4(%ebx),%edx
  101098:	52                   	push   %edx
  101099:	6a 01                	push   $0x1
  10109b:	68 f0 01 00 00       	push   $0x1f0
  1010a0:	50                   	push   %eax
  1010a1:	e8 c9 f7 ff ff       	call   10086f <ata_detect>
  1010a6:	83 c4 0c             	add    $0xc,%esp
  1010a9:	8d 45 e0             	lea    -0x20(%ebp),%eax
  1010ac:	8d 93 3c f0 ff ff    	lea    -0xfc4(%ebx),%edx
  1010b2:	52                   	push   %edx
  1010b3:	6a 00                	push   $0x0
  1010b5:	68 f0 01 00 00       	push   $0x1f0
  1010ba:	50                   	push   %eax
  1010bb:	e8 af f7 ff ff       	call   10086f <ata_detect>
  1010c0:	83 c4 0c             	add    $0xc,%esp
  1010c3:	c7 45 d1 53 4f 55 42 	movl   $0x42554f53,-0x2f(%ebp)
  1010ca:	c7 45 d5 48 49 4b 20 	movl   $0x204b4948,-0x2b(%ebp)
  1010d1:	c7 45 d9 42 49 53 57 	movl   $0x57534942,-0x27(%ebp)
  1010d8:	66 c7 45 dd 41 53    	movw   $0x5341,-0x23(%ebp)
  1010de:	c6 45 df 00          	movb   $0x0,-0x21(%ebp)
  1010e2:	83 ec 08             	sub    $0x8,%esp
  1010e5:	6a 0e                	push   $0xe
  1010e7:	8d 45 d1             	lea    -0x2f(%ebp),%eax
  1010ea:	50                   	push   %eax
  1010eb:	6a 05                	push   $0x5
  1010ed:	ff 75 e8             	push   -0x18(%ebp)
  1010f0:	ff 75 e4             	push   -0x1c(%ebp)
  1010f3:	ff 75 e0             	push   -0x20(%ebp)
  1010f6:	e8 7e fa ff ff       	call   100b79 <ata_write>
  1010fb:	83 c4 20             	add    $0x20,%esp
  1010fe:	83 ec 04             	sub    $0x4,%esp
  101101:	ff 75 e8             	push   -0x18(%ebp)
  101104:	ff 75 e4             	push   -0x1c(%ebp)
  101107:	ff 75 e0             	push   -0x20(%ebp)
  10110a:	e8 a1 fe ff ff       	call   100fb0 <ata_flush>
  10110f:	83 c4 10             	add    $0x10,%esp
  101112:	c6 45 d0 00          	movb   $0x0,-0x30(%ebp)
  101116:	83 ec 0c             	sub    $0xc,%esp
  101119:	8d 83 41 f0 ff ff    	lea    -0xfbf(%ebx),%eax
  10111f:	50                   	push   %eax
  101120:	e8 2c 11 00 00       	call   102251 <printk>
  101125:	83 c4 10             	add    $0x10,%esp
  101128:	83 ec 08             	sub    $0x8,%esp
  10112b:	6a 0e                	push   $0xe
  10112d:	8d 45 c2             	lea    -0x3e(%ebp),%eax
  101130:	50                   	push   %eax
  101131:	6a 05                	push   $0x5
  101133:	ff 75 e8             	push   -0x18(%ebp)
  101136:	ff 75 e4             	push   -0x1c(%ebp)
  101139:	ff 75 e0             	push   -0x20(%ebp)
  10113c:	e8 4c fc ff ff       	call   100d8d <ata_read>
  101141:	83 c4 20             	add    $0x20,%esp
  101144:	83 ec 0c             	sub    $0xc,%esp
  101147:	8d 45 c2             	lea    -0x3e(%ebp),%eax
  10114a:	50                   	push   %eax
  10114b:	e8 01 11 00 00       	call   102251 <printk>
  101150:	83 c4 10             	add    $0x10,%esp
  101153:	83 ec 0c             	sub    $0xc,%esp
  101156:	8d 83 48 f0 ff ff    	lea    -0xfb8(%ebx),%eax
  10115c:	50                   	push   %eax
  10115d:	e8 ef 10 00 00       	call   102251 <printk>
  101162:	83 c4 10             	add    $0x10,%esp
  101165:	90                   	nop
  101166:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  101169:	c9                   	leave  
  10116a:	c3                   	ret    

0010116b <empty_keyboard_hook>:
  10116b:	55                   	push   %ebp
  10116c:	89 e5                	mov    %esp,%ebp
  10116e:	e8 e9 23 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  101173:	05 f5 3f 00 00       	add    $0x3ff5,%eax
  101178:	90                   	nop
  101179:	5d                   	pop    %ebp
  10117a:	c3                   	ret    

0010117b <keyboard_callback>:
  10117b:	55                   	push   %ebp
  10117c:	89 e5                	mov    %esp,%ebp
  10117e:	53                   	push   %ebx
  10117f:	83 ec 14             	sub    $0x14,%esp
  101182:	e8 d9 23 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  101187:	81 c3 e1 3f 00 00    	add    $0x3fe1,%ebx
  10118d:	83 ec 0c             	sub    $0xc,%esp
  101190:	6a 60                	push   $0x60
  101192:	e8 71 1d 00 00       	call   102f08 <port_inb>
  101197:	83 c4 10             	add    $0x10,%esp
  10119a:	88 45 f7             	mov    %al,-0x9(%ebp)
  10119d:	80 7d f7 39          	cmpb   $0x39,-0x9(%ebp)
  1011a1:	77 1c                	ja     1011bf <keyboard_callback+0x44>
  1011a3:	8b 83 18 00 00 00    	mov    0x18(%ebx),%eax
  1011a9:	0f b6 55 f7          	movzbl -0x9(%ebp),%edx
  1011ad:	8b 94 93 98 fe ff ff 	mov    -0x168(%ebx,%edx,4),%edx
  1011b4:	83 ec 0c             	sub    $0xc,%esp
  1011b7:	52                   	push   %edx
  1011b8:	ff d0                	call   *%eax
  1011ba:	83 c4 10             	add    $0x10,%esp
  1011bd:	eb 01                	jmp    1011c0 <keyboard_callback+0x45>
  1011bf:	90                   	nop
  1011c0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1011c3:	c9                   	leave  
  1011c4:	c3                   	ret    

001011c5 <generic_keyboard_hook>:
  1011c5:	55                   	push   %ebp
  1011c6:	89 e5                	mov    %esp,%ebp
  1011c8:	53                   	push   %ebx
  1011c9:	83 ec 04             	sub    $0x4,%esp
  1011cc:	e8 8f 23 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  1011d1:	81 c3 97 3f 00 00    	add    $0x3f97,%ebx
  1011d7:	8b 45 08             	mov    0x8(%ebp),%eax
  1011da:	89 83 bc 0f 20 00    	mov    %eax,0x200fbc(%ebx)
  1011e0:	8b 45 08             	mov    0x8(%ebp),%eax
  1011e3:	83 f8 08             	cmp    $0x8,%eax
  1011e6:	75 3a                	jne    101222 <generic_keyboard_hook+0x5d>
  1011e8:	0f b6 83 b8 0f 20 00 	movzbl 0x200fb8(%ebx),%eax
  1011ef:	84 c0                	test   %al,%al
  1011f1:	74 12                	je     101205 <generic_keyboard_hook+0x40>
  1011f3:	83 ec 0c             	sub    $0xc,%esp
  1011f6:	8d 83 4a f0 ff ff    	lea    -0xfb6(%ebx),%eax
  1011fc:	50                   	push   %eax
  1011fd:	e8 4f 10 00 00       	call   102251 <printk>
  101202:	83 c4 10             	add    $0x10,%esp
  101205:	0f b6 83 b8 0f 20 00 	movzbl 0x200fb8(%ebx),%eax
  10120c:	84 c0                	test   %al,%al
  10120e:	74 52                	je     101262 <generic_keyboard_hook+0x9d>
  101210:	0f b6 83 b8 0f 20 00 	movzbl 0x200fb8(%ebx),%eax
  101217:	83 e8 01             	sub    $0x1,%eax
  10121a:	88 83 b8 0f 20 00    	mov    %al,0x200fb8(%ebx)
  101220:	eb 40                	jmp    101262 <generic_keyboard_hook+0x9d>
  101222:	8b 45 08             	mov    0x8(%ebp),%eax
  101225:	83 f8 0a             	cmp    $0xa,%eax
  101228:	74 3b                	je     101265 <generic_keyboard_hook+0xa0>
  10122a:	8b 93 bc 0f 20 00    	mov    0x200fbc(%ebx),%edx
  101230:	0f b6 83 b8 0f 20 00 	movzbl 0x200fb8(%ebx),%eax
  101237:	0f b6 c0             	movzbl %al,%eax
  10123a:	88 94 03 b8 0e 20 00 	mov    %dl,0x200eb8(%ebx,%eax,1)
  101241:	0f b6 83 b8 0f 20 00 	movzbl 0x200fb8(%ebx),%eax
  101248:	83 c0 01             	add    $0x1,%eax
  10124b:	88 83 b8 0f 20 00    	mov    %al,0x200fb8(%ebx)
  101251:	83 ec 0c             	sub    $0xc,%esp
  101254:	8d 45 08             	lea    0x8(%ebp),%eax
  101257:	50                   	push   %eax
  101258:	e8 f4 0f 00 00       	call   102251 <printk>
  10125d:	83 c4 10             	add    $0x10,%esp
  101260:	eb 04                	jmp    101266 <generic_keyboard_hook+0xa1>
  101262:	90                   	nop
  101263:	eb 01                	jmp    101266 <generic_keyboard_hook+0xa1>
  101265:	90                   	nop
  101266:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  101269:	c9                   	leave  
  10126a:	c3                   	ret    

0010126b <input>:
  10126b:	55                   	push   %ebp
  10126c:	89 e5                	mov    %esp,%ebp
  10126e:	e8 e9 22 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  101273:	05 f5 3e 00 00       	add    $0x3ef5,%eax
  101278:	c6 80 b8 0f 20 00 00 	movb   $0x0,0x200fb8(%eax)
  10127f:	c7 80 bc 0f 20 00 00 	movl   $0x0,0x200fbc(%eax)
  101286:	00 00 00 
  101289:	90                   	nop
  10128a:	8b 90 bc 0f 20 00    	mov    0x200fbc(%eax),%edx
  101290:	83 fa 0a             	cmp    $0xa,%edx
  101293:	75 f5                	jne    10128a <input+0x1f>
  101295:	0f b6 90 b8 0f 20 00 	movzbl 0x200fb8(%eax),%edx
  10129c:	0f b6 d2             	movzbl %dl,%edx
  10129f:	c6 84 10 b8 0e 20 00 	movb   $0x0,0x200eb8(%eax,%edx,1)
  1012a6:	00 
  1012a7:	8d 80 b8 0e 20 00    	lea    0x200eb8(%eax),%eax
  1012ad:	5d                   	pop    %ebp
  1012ae:	c3                   	ret    

001012af <set_keyboard_hook>:
  1012af:	55                   	push   %ebp
  1012b0:	89 e5                	mov    %esp,%ebp
  1012b2:	e8 a5 22 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1012b7:	05 b1 3e 00 00       	add    $0x3eb1,%eax
  1012bc:	8b 55 08             	mov    0x8(%ebp),%edx
  1012bf:	89 90 18 00 00 00    	mov    %edx,0x18(%eax)
  1012c5:	90                   	nop
  1012c6:	5d                   	pop    %ebp
  1012c7:	c3                   	ret    

001012c8 <init_keyboard>:
  1012c8:	55                   	push   %ebp
  1012c9:	89 e5                	mov    %esp,%ebp
  1012cb:	53                   	push   %ebx
  1012cc:	83 ec 04             	sub    $0x4,%esp
  1012cf:	e8 88 22 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1012d4:	05 94 3e 00 00       	add    $0x3e94,%eax
  1012d9:	83 ec 08             	sub    $0x8,%esp
  1012dc:	8d 90 13 c0 ff ff    	lea    -0x3fed(%eax),%edx
  1012e2:	52                   	push   %edx
  1012e3:	6a 21                	push   $0x21
  1012e5:	89 c3                	mov    %eax,%ebx
  1012e7:	e8 22 1b 00 00       	call   102e0e <register_interrupt_handler>
  1012ec:	83 c4 10             	add    $0x10,%esp
  1012ef:	90                   	nop
  1012f0:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1012f3:	c9                   	leave  
  1012f4:	c3                   	ret    

001012f5 <pci_mkid>:
  1012f5:	55                   	push   %ebp
  1012f6:	89 e5                	mov    %esp,%ebp
  1012f8:	53                   	push   %ebx
  1012f9:	83 ec 20             	sub    $0x20,%esp
  1012fc:	e8 5b 22 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  101301:	05 67 3e 00 00       	add    $0x3e67,%eax
  101306:	8b 5d 08             	mov    0x8(%ebp),%ebx
  101309:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  10130c:	8b 55 10             	mov    0x10(%ebp),%edx
  10130f:	8b 45 14             	mov    0x14(%ebp),%eax
  101312:	88 5d e8             	mov    %bl,-0x18(%ebp)
  101315:	88 4d e4             	mov    %cl,-0x1c(%ebp)
  101318:	88 55 e0             	mov    %dl,-0x20(%ebp)
  10131b:	88 45 dc             	mov    %al,-0x24(%ebp)
  10131e:	0f b6 45 e8          	movzbl -0x18(%ebp),%eax
  101322:	c1 e0 10             	shl    $0x10,%eax
  101325:	0d 00 00 00 80       	or     $0x80000000,%eax
  10132a:	89 c2                	mov    %eax,%edx
  10132c:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
  101330:	c1 e0 0b             	shl    $0xb,%eax
  101333:	0f b7 c0             	movzwl %ax,%eax
  101336:	09 c2                	or     %eax,%edx
  101338:	0f b6 45 e0          	movzbl -0x20(%ebp),%eax
  10133c:	c1 e0 08             	shl    $0x8,%eax
  10133f:	25 00 07 00 00       	and    $0x700,%eax
  101344:	09 c2                	or     %eax,%edx
  101346:	0f b6 45 dc          	movzbl -0x24(%ebp),%eax
  10134a:	09 d0                	or     %edx,%eax
  10134c:	89 45 f8             	mov    %eax,-0x8(%ebp)
  10134f:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101352:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  101355:	c9                   	leave  
  101356:	c3                   	ret    

00101357 <pci_read>:
  101357:	55                   	push   %ebp
  101358:	89 e5                	mov    %esp,%ebp
  10135a:	57                   	push   %edi
  10135b:	56                   	push   %esi
  10135c:	53                   	push   %ebx
  10135d:	83 ec 2c             	sub    $0x2c,%esp
  101360:	e8 fb 21 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  101365:	81 c3 03 3e 00 00    	add    $0x3e03,%ebx
  10136b:	8b 75 08             	mov    0x8(%ebp),%esi
  10136e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  101371:	8b 55 10             	mov    0x10(%ebp),%edx
  101374:	8b 7d 14             	mov    0x14(%ebp),%edi
  101377:	89 f0                	mov    %esi,%eax
  101379:	88 45 d4             	mov    %al,-0x2c(%ebp)
  10137c:	88 4d d0             	mov    %cl,-0x30(%ebp)
  10137f:	88 55 cc             	mov    %dl,-0x34(%ebp)
  101382:	89 f8                	mov    %edi,%eax
  101384:	88 45 c8             	mov    %al,-0x38(%ebp)
  101387:	0f b6 75 c8          	movzbl -0x38(%ebp),%esi
  10138b:	0f b6 4d cc          	movzbl -0x34(%ebp),%ecx
  10138f:	0f b6 55 d0          	movzbl -0x30(%ebp),%edx
  101393:	0f b6 45 d4          	movzbl -0x2c(%ebp),%eax
  101397:	56                   	push   %esi
  101398:	51                   	push   %ecx
  101399:	52                   	push   %edx
  10139a:	50                   	push   %eax
  10139b:	e8 55 ff ff ff       	call   1012f5 <pci_mkid>
  1013a0:	83 c4 10             	add    $0x10,%esp
  1013a3:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  1013a6:	83 ec 08             	sub    $0x8,%esp
  1013a9:	ff 75 e4             	push   -0x1c(%ebp)
  1013ac:	68 f8 0c 00 00       	push   $0xcf8
  1013b1:	e8 1e 1c 00 00       	call   102fd4 <port_outl>
  1013b6:	83 c4 10             	add    $0x10,%esp
  1013b9:	83 ec 0c             	sub    $0xc,%esp
  1013bc:	68 fc 0c 00 00       	push   $0xcfc
  1013c1:	e8 e8 1b 00 00       	call   102fae <port_inl>
  1013c6:	83 c4 10             	add    $0x10,%esp
  1013c9:	89 45 e0             	mov    %eax,-0x20(%ebp)
  1013cc:	8b 45 e0             	mov    -0x20(%ebp),%eax
  1013cf:	8d 65 f4             	lea    -0xc(%ebp),%esp
  1013d2:	5b                   	pop    %ebx
  1013d3:	5e                   	pop    %esi
  1013d4:	5f                   	pop    %edi
  1013d5:	5d                   	pop    %ebp
  1013d6:	c3                   	ret    

001013d7 <pci_has_func>:
  1013d7:	55                   	push   %ebp
  1013d8:	89 e5                	mov    %esp,%ebp
  1013da:	83 ec 18             	sub    $0x18,%esp
  1013dd:	e8 7a 21 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1013e2:	05 86 3d 00 00       	add    $0x3d86,%eax
  1013e7:	8b 55 08             	mov    0x8(%ebp),%edx
  1013ea:	8b 45 0c             	mov    0xc(%ebp),%eax
  1013ed:	88 55 f4             	mov    %dl,-0xc(%ebp)
  1013f0:	88 45 f0             	mov    %al,-0x10(%ebp)
  1013f3:	0f b6 55 f0          	movzbl -0x10(%ebp),%edx
  1013f7:	0f b6 45 f4          	movzbl -0xc(%ebp),%eax
  1013fb:	6a 0c                	push   $0xc
  1013fd:	6a 00                	push   $0x0
  1013ff:	52                   	push   %edx
  101400:	50                   	push   %eax
  101401:	e8 51 ff ff ff       	call   101357 <pci_read>
  101406:	83 c4 10             	add    $0x10,%esp
  101409:	25 00 00 00 80       	and    $0x80000000,%eax
  10140e:	c9                   	leave  
  10140f:	c3                   	ret    

00101410 <get_pci_dev>:
  101410:	55                   	push   %ebp
  101411:	89 e5                	mov    %esp,%ebp
  101413:	57                   	push   %edi
  101414:	56                   	push   %esi
  101415:	53                   	push   %ebx
  101416:	81 ec 9c 00 00 00    	sub    $0x9c,%esp
  10141c:	e8 3b 21 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  101421:	05 47 3d 00 00       	add    $0x3d47,%eax
  101426:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  101429:	8b 55 10             	mov    0x10(%ebp),%edx
  10142c:	8b 45 14             	mov    0x14(%ebp),%eax
  10142f:	88 8d 64 ff ff ff    	mov    %cl,-0x9c(%ebp)
  101435:	88 95 60 ff ff ff    	mov    %dl,-0xa0(%ebp)
  10143b:	88 85 5c ff ff ff    	mov    %al,-0xa4(%ebp)
  101441:	0f b6 85 64 ff ff ff 	movzbl -0x9c(%ebp),%eax
  101448:	88 85 6e ff ff ff    	mov    %al,-0x92(%ebp)
  10144e:	0f b6 85 60 ff ff ff 	movzbl -0xa0(%ebp),%eax
  101455:	88 85 6f ff ff ff    	mov    %al,-0x91(%ebp)
  10145b:	0f b6 85 5c ff ff ff 	movzbl -0xa4(%ebp),%eax
  101462:	88 85 70 ff ff ff    	mov    %al,-0x90(%ebp)
  101468:	c6 45 80 00          	movb   $0x0,-0x80(%ebp)
  10146c:	0f b6 8d 5c ff ff ff 	movzbl -0xa4(%ebp),%ecx
  101473:	0f b6 95 60 ff ff ff 	movzbl -0xa0(%ebp),%edx
  10147a:	0f b6 85 64 ff ff ff 	movzbl -0x9c(%ebp),%eax
  101481:	6a 00                	push   $0x0
  101483:	51                   	push   %ecx
  101484:	52                   	push   %edx
  101485:	50                   	push   %eax
  101486:	e8 cc fe ff ff       	call   101357 <pci_read>
  10148b:	83 c4 10             	add    $0x10,%esp
  10148e:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  101491:	8b 45 e4             	mov    -0x1c(%ebp),%eax
  101494:	66 89 85 74 ff ff ff 	mov    %ax,-0x8c(%ebp)
  10149b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
  10149e:	c1 e8 10             	shr    $0x10,%eax
  1014a1:	66 89 85 72 ff ff ff 	mov    %ax,-0x8e(%ebp)
  1014a8:	0f b6 8d 5c ff ff ff 	movzbl -0xa4(%ebp),%ecx
  1014af:	0f b6 95 60 ff ff ff 	movzbl -0xa0(%ebp),%edx
  1014b6:	0f b6 85 64 ff ff ff 	movzbl -0x9c(%ebp),%eax
  1014bd:	6a 04                	push   $0x4
  1014bf:	51                   	push   %ecx
  1014c0:	52                   	push   %edx
  1014c1:	50                   	push   %eax
  1014c2:	e8 90 fe ff ff       	call   101357 <pci_read>
  1014c7:	83 c4 10             	add    $0x10,%esp
  1014ca:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  1014cd:	8b 45 e4             	mov    -0x1c(%ebp),%eax
  1014d0:	66 89 85 78 ff ff ff 	mov    %ax,-0x88(%ebp)
  1014d7:	8b 45 e4             	mov    -0x1c(%ebp),%eax
  1014da:	c1 e8 10             	shr    $0x10,%eax
  1014dd:	66 89 85 76 ff ff ff 	mov    %ax,-0x8a(%ebp)
  1014e4:	0f b6 8d 5c ff ff ff 	movzbl -0xa4(%ebp),%ecx
  1014eb:	0f b6 95 60 ff ff ff 	movzbl -0xa0(%ebp),%edx
  1014f2:	0f b6 85 64 ff ff ff 	movzbl -0x9c(%ebp),%eax
  1014f9:	6a 08                	push   $0x8
  1014fb:	51                   	push   %ecx
  1014fc:	52                   	push   %edx
  1014fd:	50                   	push   %eax
  1014fe:	e8 54 fe ff ff       	call   101357 <pci_read>
  101503:	83 c4 10             	add    $0x10,%esp
  101506:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  101509:	8b 45 e4             	mov    -0x1c(%ebp),%eax
  10150c:	c1 e8 18             	shr    $0x18,%eax
  10150f:	88 85 7a ff ff ff    	mov    %al,-0x86(%ebp)
  101515:	8b 45 e4             	mov    -0x1c(%ebp),%eax
  101518:	c1 e8 10             	shr    $0x10,%eax
  10151b:	88 85 7b ff ff ff    	mov    %al,-0x85(%ebp)
  101521:	8b 45 e4             	mov    -0x1c(%ebp),%eax
  101524:	c1 e8 08             	shr    $0x8,%eax
  101527:	88 85 7c ff ff ff    	mov    %al,-0x84(%ebp)
  10152d:	8b 45 e4             	mov    -0x1c(%ebp),%eax
  101530:	88 85 7d ff ff ff    	mov    %al,-0x83(%ebp)
  101536:	0f b6 8d 5c ff ff ff 	movzbl -0xa4(%ebp),%ecx
  10153d:	0f b6 95 60 ff ff ff 	movzbl -0xa0(%ebp),%edx
  101544:	0f b6 85 64 ff ff ff 	movzbl -0x9c(%ebp),%eax
  10154b:	6a 0c                	push   $0xc
  10154d:	51                   	push   %ecx
  10154e:	52                   	push   %edx
  10154f:	50                   	push   %eax
  101550:	e8 02 fe ff ff       	call   101357 <pci_read>
  101555:	83 c4 10             	add    $0x10,%esp
  101558:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  10155b:	8b 45 e4             	mov    -0x1c(%ebp),%eax
  10155e:	c1 e8 10             	shr    $0x10,%eax
  101561:	88 85 7e ff ff ff    	mov    %al,-0x82(%ebp)
  101567:	8b 45 08             	mov    0x8(%ebp),%eax
  10156a:	89 c1                	mov    %eax,%ecx
  10156c:	8d 85 6e ff ff ff    	lea    -0x92(%ebp),%eax
  101572:	ba 76 00 00 00       	mov    $0x76,%edx
  101577:	8b 18                	mov    (%eax),%ebx
  101579:	89 19                	mov    %ebx,(%ecx)
  10157b:	8b 5c 10 fc          	mov    -0x4(%eax,%edx,1),%ebx
  10157f:	89 5c 11 fc          	mov    %ebx,-0x4(%ecx,%edx,1)
  101583:	8d 59 04             	lea    0x4(%ecx),%ebx
  101586:	83 e3 fc             	and    $0xfffffffc,%ebx
  101589:	29 d9                	sub    %ebx,%ecx
  10158b:	29 c8                	sub    %ecx,%eax
  10158d:	01 ca                	add    %ecx,%edx
  10158f:	83 e2 fc             	and    $0xfffffffc,%edx
  101592:	c1 ea 02             	shr    $0x2,%edx
  101595:	89 df                	mov    %ebx,%edi
  101597:	89 c6                	mov    %eax,%esi
  101599:	89 d1                	mov    %edx,%ecx
  10159b:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
  10159d:	8b 45 08             	mov    0x8(%ebp),%eax
  1015a0:	8d 65 f4             	lea    -0xc(%ebp),%esp
  1015a3:	5b                   	pop    %ebx
  1015a4:	5e                   	pop    %esi
  1015a5:	5f                   	pop    %edi
  1015a6:	5d                   	pop    %ebp
  1015a7:	c2 04 00             	ret    $0x4

001015aa <handle_bar>:
  1015aa:	55                   	push   %ebp
  1015ab:	89 e5                	mov    %esp,%ebp
  1015ad:	53                   	push   %ebx
  1015ae:	83 ec 24             	sub    $0x24,%esp
  1015b1:	e8 a6 1f 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1015b6:	05 b2 3b 00 00       	add    $0x3bb2,%eax
  1015bb:	8b 45 08             	mov    0x8(%ebp),%eax
  1015be:	0f b6 40 10          	movzbl 0x10(%eax),%eax
  1015c2:	83 e0 03             	and    $0x3,%eax
  1015c5:	88 45 f6             	mov    %al,-0xa(%ebp)
  1015c8:	80 7d f6 00          	cmpb   $0x0,-0xa(%ebp)
  1015cc:	75 71                	jne    10163f <handle_bar+0x95>
  1015ce:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
  1015d2:	eb 65                	jmp    101639 <handle_bar+0x8f>
  1015d4:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  1015d8:	83 c0 04             	add    $0x4,%eax
  1015db:	c1 e0 02             	shl    $0x2,%eax
  1015de:	0f b6 d8             	movzbl %al,%ebx
  1015e1:	8b 45 08             	mov    0x8(%ebp),%eax
  1015e4:	0f b6 40 02          	movzbl 0x2(%eax),%eax
  1015e8:	0f b6 c8             	movzbl %al,%ecx
  1015eb:	8b 45 08             	mov    0x8(%ebp),%eax
  1015ee:	0f b6 40 01          	movzbl 0x1(%eax),%eax
  1015f2:	0f b6 d0             	movzbl %al,%edx
  1015f5:	8b 45 08             	mov    0x8(%ebp),%eax
  1015f8:	0f b6 00             	movzbl (%eax),%eax
  1015fb:	0f b6 c0             	movzbl %al,%eax
  1015fe:	53                   	push   %ebx
  1015ff:	51                   	push   %ecx
  101600:	52                   	push   %edx
  101601:	50                   	push   %eax
  101602:	e8 50 fd ff ff       	call   101357 <pci_read>
  101607:	83 c4 10             	add    $0x10,%esp
  10160a:	89 45 f0             	mov    %eax,-0x10(%ebp)
  10160d:	8b 45 f0             	mov    -0x10(%ebp),%eax
  101610:	83 e0 01             	and    $0x1,%eax
  101613:	85 c0                	test   %eax,%eax
  101615:	0f 94 c0             	sete   %al
  101618:	0f b6 c0             	movzbl %al,%eax
  10161b:	89 45 e4             	mov    %eax,-0x1c(%ebp)
  10161e:	8b 45 e4             	mov    -0x1c(%ebp),%eax
  101621:	83 f8 01             	cmp    $0x1,%eax
  101624:	75 09                	jne    10162f <handle_bar+0x85>
  101626:	8b 45 f0             	mov    -0x10(%ebp),%eax
  101629:	83 e0 fc             	and    $0xfffffffc,%eax
  10162c:	89 45 ec             	mov    %eax,-0x14(%ebp)
  10162f:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  101633:	83 c0 01             	add    $0x1,%eax
  101636:	88 45 f7             	mov    %al,-0x9(%ebp)
  101639:	80 7d f7 05          	cmpb   $0x5,-0x9(%ebp)
  10163d:	76 95                	jbe    1015d4 <handle_bar+0x2a>
  10163f:	b8 00 00 00 00       	mov    $0x0,%eax
  101644:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  101647:	c9                   	leave  
  101648:	c3                   	ret    

00101649 <pci_get_name>:
  101649:	55                   	push   %ebp
  10164a:	89 e5                	mov    %esp,%ebp
  10164c:	53                   	push   %ebx
  10164d:	83 ec 14             	sub    $0x14,%esp
  101650:	e8 0b 1f 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  101655:	81 c3 13 3b 00 00    	add    $0x3b13,%ebx
  10165b:	8b 45 08             	mov    0x8(%ebp),%eax
  10165e:	0f b6 40 0c          	movzbl 0xc(%eax),%eax
  101662:	0f b6 c0             	movzbl %al,%eax
  101665:	83 f8 0c             	cmp    $0xc,%eax
  101668:	0f 87 7b 08 00 00    	ja     101ee9 <.L88>
  10166e:	c1 e0 02             	shl    $0x2,%eax
  101671:	8b 84 18 88 f2 ff ff 	mov    -0xd78(%eax,%ebx,1),%eax
  101678:	01 d8                	add    %ebx,%eax
  10167a:	ff e0                	jmp    *%eax

0010167c <.L27>:
  10167c:	8b 45 08             	mov    0x8(%ebp),%eax
  10167f:	8d 50 12             	lea    0x12(%eax),%edx
  101682:	83 ec 08             	sub    $0x8,%esp
  101685:	8d 83 4c f0 ff ff    	lea    -0xfb4(%ebx),%eax
  10168b:	50                   	push   %eax
  10168c:	52                   	push   %edx
  10168d:	e8 99 1b 00 00       	call   10322b <strcat>
  101692:	83 c4 10             	add    $0x10,%esp
  101695:	e9 50 08 00 00       	jmp    101eea <.L88+0x1>

0010169a <.L26>:
  10169a:	8b 45 08             	mov    0x8(%ebp),%eax
  10169d:	8d 50 12             	lea    0x12(%eax),%edx
  1016a0:	83 ec 08             	sub    $0x8,%esp
  1016a3:	8d 83 5b f0 ff ff    	lea    -0xfa5(%ebx),%eax
  1016a9:	50                   	push   %eax
  1016aa:	52                   	push   %edx
  1016ab:	e8 7b 1b 00 00       	call   10322b <strcat>
  1016b0:	83 c4 10             	add    $0x10,%esp

001016b3 <.L25>:
  1016b3:	8b 45 08             	mov    0x8(%ebp),%eax
  1016b6:	8d 50 12             	lea    0x12(%eax),%edx
  1016b9:	83 ec 08             	sub    $0x8,%esp
  1016bc:	8d 83 65 f0 ff ff    	lea    -0xf9b(%ebx),%eax
  1016c2:	50                   	push   %eax
  1016c3:	52                   	push   %edx
  1016c4:	e8 62 1b 00 00       	call   10322b <strcat>
  1016c9:	83 c4 10             	add    $0x10,%esp
  1016cc:	8b 45 08             	mov    0x8(%ebp),%eax
  1016cf:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
  1016d3:	0f b6 c0             	movzbl %al,%eax
  1016d6:	83 f8 08             	cmp    $0x8,%eax
  1016d9:	0f 87 19 01 00 00    	ja     1017f8 <.L30+0x1b>
  1016df:	c1 e0 02             	shl    $0x2,%eax
  1016e2:	8b 84 18 bc f2 ff ff 	mov    -0xd44(%eax,%ebx,1),%eax
  1016e9:	01 d8                	add    %ebx,%eax
  1016eb:	ff e0                	jmp    *%eax

001016ed <.L39>:
  1016ed:	8b 45 08             	mov    0x8(%ebp),%eax
  1016f0:	8d 50 12             	lea    0x12(%eax),%edx
  1016f3:	83 ec 08             	sub    $0x8,%esp
  1016f6:	8d 83 6f f0 ff ff    	lea    -0xf91(%ebx),%eax
  1016fc:	50                   	push   %eax
  1016fd:	52                   	push   %edx
  1016fe:	e8 28 1b 00 00       	call   10322b <strcat>
  101703:	83 c4 10             	add    $0x10,%esp
  101706:	e9 56 01 00 00       	jmp    101861 <.L30+0x84>

0010170b <.L38>:
  10170b:	8b 45 08             	mov    0x8(%ebp),%eax
  10170e:	8d 50 12             	lea    0x12(%eax),%edx
  101711:	83 ec 08             	sub    $0x8,%esp
  101714:	8d 83 78 f0 ff ff    	lea    -0xf88(%ebx),%eax
  10171a:	50                   	push   %eax
  10171b:	52                   	push   %edx
  10171c:	e8 0a 1b 00 00       	call   10322b <strcat>
  101721:	83 c4 10             	add    $0x10,%esp
  101724:	e9 38 01 00 00       	jmp    101861 <.L30+0x84>

00101729 <.L37>:
  101729:	8b 45 08             	mov    0x8(%ebp),%eax
  10172c:	8d 50 12             	lea    0x12(%eax),%edx
  10172f:	83 ec 08             	sub    $0x8,%esp
  101732:	8d 83 83 f0 ff ff    	lea    -0xf7d(%ebx),%eax
  101738:	50                   	push   %eax
  101739:	52                   	push   %edx
  10173a:	e8 ec 1a 00 00       	call   10322b <strcat>
  10173f:	83 c4 10             	add    $0x10,%esp
  101742:	e9 1a 01 00 00       	jmp    101861 <.L30+0x84>

00101747 <.L36>:
  101747:	8b 45 08             	mov    0x8(%ebp),%eax
  10174a:	8d 50 12             	lea    0x12(%eax),%edx
  10174d:	83 ec 08             	sub    $0x8,%esp
  101750:	8d 83 88 f0 ff ff    	lea    -0xf78(%ebx),%eax
  101756:	50                   	push   %eax
  101757:	52                   	push   %edx
  101758:	e8 ce 1a 00 00       	call   10322b <strcat>
  10175d:	83 c4 10             	add    $0x10,%esp
  101760:	e9 fc 00 00 00       	jmp    101861 <.L30+0x84>

00101765 <.L35>:
  101765:	8b 45 08             	mov    0x8(%ebp),%eax
  101768:	8d 50 12             	lea    0x12(%eax),%edx
  10176b:	83 ec 08             	sub    $0x8,%esp
  10176e:	8d 83 8c f0 ff ff    	lea    -0xf74(%ebx),%eax
  101774:	50                   	push   %eax
  101775:	52                   	push   %edx
  101776:	e8 b0 1a 00 00       	call   10322b <strcat>
  10177b:	83 c4 10             	add    $0x10,%esp
  10177e:	e9 de 00 00 00       	jmp    101861 <.L30+0x84>

00101783 <.L34>:
  101783:	8b 45 08             	mov    0x8(%ebp),%eax
  101786:	8d 50 12             	lea    0x12(%eax),%edx
  101789:	83 ec 08             	sub    $0x8,%esp
  10178c:	8d 83 91 f0 ff ff    	lea    -0xf6f(%ebx),%eax
  101792:	50                   	push   %eax
  101793:	52                   	push   %edx
  101794:	e8 92 1a 00 00       	call   10322b <strcat>
  101799:	83 c4 10             	add    $0x10,%esp
  10179c:	e9 c0 00 00 00       	jmp    101861 <.L30+0x84>

001017a1 <.L33>:
  1017a1:	8b 45 08             	mov    0x8(%ebp),%eax
  1017a4:	8d 50 12             	lea    0x12(%eax),%edx
  1017a7:	83 ec 08             	sub    $0x8,%esp
  1017aa:	8d 83 a5 f0 ff ff    	lea    -0xf5b(%ebx),%eax
  1017b0:	50                   	push   %eax
  1017b1:	52                   	push   %edx
  1017b2:	e8 74 1a 00 00       	call   10322b <strcat>
  1017b7:	83 c4 10             	add    $0x10,%esp
  1017ba:	e9 a2 00 00 00       	jmp    101861 <.L30+0x84>

001017bf <.L32>:
  1017bf:	8b 45 08             	mov    0x8(%ebp),%eax
  1017c2:	8d 50 12             	lea    0x12(%eax),%edx
  1017c5:	83 ec 08             	sub    $0x8,%esp
  1017c8:	8d 83 bf f0 ff ff    	lea    -0xf41(%ebx),%eax
  1017ce:	50                   	push   %eax
  1017cf:	52                   	push   %edx
  1017d0:	e8 56 1a 00 00       	call   10322b <strcat>
  1017d5:	83 c4 10             	add    $0x10,%esp
  1017d8:	e9 84 00 00 00       	jmp    101861 <.L30+0x84>

001017dd <.L30>:
  1017dd:	8b 45 08             	mov    0x8(%ebp),%eax
  1017e0:	8d 50 12             	lea    0x12(%eax),%edx
  1017e3:	83 ec 08             	sub    $0x8,%esp
  1017e6:	8d 83 ca f0 ff ff    	lea    -0xf36(%ebx),%eax
  1017ec:	50                   	push   %eax
  1017ed:	52                   	push   %edx
  1017ee:	e8 38 1a 00 00       	call   10322b <strcat>
  1017f3:	83 c4 10             	add    $0x10,%esp
  1017f6:	eb 69                	jmp    101861 <.L30+0x84>
  1017f8:	8b 45 08             	mov    0x8(%ebp),%eax
  1017fb:	8d 50 12             	lea    0x12(%eax),%edx
  1017fe:	83 ec 08             	sub    $0x8,%esp
  101801:	8d 83 d1 f0 ff ff    	lea    -0xf2f(%ebx),%eax
  101807:	50                   	push   %eax
  101808:	52                   	push   %edx
  101809:	e8 1d 1a 00 00       	call   10322b <strcat>
  10180e:	83 c4 10             	add    $0x10,%esp
  101811:	8b 45 08             	mov    0x8(%ebp),%eax
  101814:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
  101818:	0f b6 c0             	movzbl %al,%eax
  10181b:	83 ec 04             	sub    $0x4,%esp
  10181e:	6a 02                	push   $0x2
  101820:	8d 55 f6             	lea    -0xa(%ebp),%edx
  101823:	52                   	push   %edx
  101824:	50                   	push   %eax
  101825:	e8 d7 1b 00 00       	call   103401 <int_to_hex>
  10182a:	83 c4 10             	add    $0x10,%esp
  10182d:	8b 45 08             	mov    0x8(%ebp),%eax
  101830:	8d 50 12             	lea    0x12(%eax),%edx
  101833:	83 ec 08             	sub    $0x8,%esp
  101836:	8d 45 f6             	lea    -0xa(%ebp),%eax
  101839:	50                   	push   %eax
  10183a:	52                   	push   %edx
  10183b:	e8 eb 19 00 00       	call   10322b <strcat>
  101840:	83 c4 10             	add    $0x10,%esp
  101843:	8b 45 08             	mov    0x8(%ebp),%eax
  101846:	8d 50 12             	lea    0x12(%eax),%edx
  101849:	83 ec 08             	sub    $0x8,%esp
  10184c:	8d 83 dc f0 ff ff    	lea    -0xf24(%ebx),%eax
  101852:	50                   	push   %eax
  101853:	52                   	push   %edx
  101854:	e8 d2 19 00 00       	call   10322b <strcat>
  101859:	83 c4 10             	add    $0x10,%esp
  10185c:	e9 89 06 00 00       	jmp    101eea <.L88+0x1>
  101861:	e9 84 06 00 00       	jmp    101eea <.L88+0x1>

00101866 <.L24>:
  101866:	8b 45 08             	mov    0x8(%ebp),%eax
  101869:	8d 50 12             	lea    0x12(%eax),%edx
  10186c:	83 ec 08             	sub    $0x8,%esp
  10186f:	8d 83 de f0 ff ff    	lea    -0xf22(%ebx),%eax
  101875:	50                   	push   %eax
  101876:	52                   	push   %edx
  101877:	e8 af 19 00 00       	call   10322b <strcat>
  10187c:	83 c4 10             	add    $0x10,%esp
  10187f:	8b 45 08             	mov    0x8(%ebp),%eax
  101882:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
  101886:	0f b6 c0             	movzbl %al,%eax
  101889:	83 f8 02             	cmp    $0x2,%eax
  10188c:	74 4c                	je     1018da <.L24+0x74>
  10188e:	83 f8 02             	cmp    $0x2,%eax
  101891:	7f 62                	jg     1018f5 <.L24+0x8f>
  101893:	85 c0                	test   %eax,%eax
  101895:	74 07                	je     10189e <.L24+0x38>
  101897:	83 f8 01             	cmp    $0x1,%eax
  10189a:	74 20                	je     1018bc <.L24+0x56>
  10189c:	eb 57                	jmp    1018f5 <.L24+0x8f>
  10189e:	8b 45 08             	mov    0x8(%ebp),%eax
  1018a1:	8d 50 12             	lea    0x12(%eax),%edx
  1018a4:	83 ec 08             	sub    $0x8,%esp
  1018a7:	8d 83 e8 f0 ff ff    	lea    -0xf18(%ebx),%eax
  1018ad:	50                   	push   %eax
  1018ae:	52                   	push   %edx
  1018af:	e8 77 19 00 00       	call   10322b <strcat>
  1018b4:	83 c4 10             	add    $0x10,%esp
  1018b7:	e9 a2 00 00 00       	jmp    10195e <.L24+0xf8>
  1018bc:	8b 45 08             	mov    0x8(%ebp),%eax
  1018bf:	8d 50 12             	lea    0x12(%eax),%edx
  1018c2:	83 ec 08             	sub    $0x8,%esp
  1018c5:	8d 83 f7 f0 ff ff    	lea    -0xf09(%ebx),%eax
  1018cb:	50                   	push   %eax
  1018cc:	52                   	push   %edx
  1018cd:	e8 59 19 00 00       	call   10322b <strcat>
  1018d2:	83 c4 10             	add    $0x10,%esp
  1018d5:	e9 84 00 00 00       	jmp    10195e <.L24+0xf8>
  1018da:	8b 45 08             	mov    0x8(%ebp),%eax
  1018dd:	8d 50 12             	lea    0x12(%eax),%edx
  1018e0:	83 ec 08             	sub    $0x8,%esp
  1018e3:	8d 83 06 f1 ff ff    	lea    -0xefa(%ebx),%eax
  1018e9:	50                   	push   %eax
  1018ea:	52                   	push   %edx
  1018eb:	e8 3b 19 00 00       	call   10322b <strcat>
  1018f0:	83 c4 10             	add    $0x10,%esp
  1018f3:	eb 69                	jmp    10195e <.L24+0xf8>
  1018f5:	8b 45 08             	mov    0x8(%ebp),%eax
  1018f8:	8d 50 12             	lea    0x12(%eax),%edx
  1018fb:	83 ec 08             	sub    $0x8,%esp
  1018fe:	8d 83 d1 f0 ff ff    	lea    -0xf2f(%ebx),%eax
  101904:	50                   	push   %eax
  101905:	52                   	push   %edx
  101906:	e8 20 19 00 00       	call   10322b <strcat>
  10190b:	83 c4 10             	add    $0x10,%esp
  10190e:	8b 45 08             	mov    0x8(%ebp),%eax
  101911:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
  101915:	0f b6 c0             	movzbl %al,%eax
  101918:	83 ec 04             	sub    $0x4,%esp
  10191b:	6a 02                	push   $0x2
  10191d:	8d 55 f6             	lea    -0xa(%ebp),%edx
  101920:	52                   	push   %edx
  101921:	50                   	push   %eax
  101922:	e8 da 1a 00 00       	call   103401 <int_to_hex>
  101927:	83 c4 10             	add    $0x10,%esp
  10192a:	8b 45 08             	mov    0x8(%ebp),%eax
  10192d:	8d 50 12             	lea    0x12(%eax),%edx
  101930:	83 ec 08             	sub    $0x8,%esp
  101933:	8d 45 f6             	lea    -0xa(%ebp),%eax
  101936:	50                   	push   %eax
  101937:	52                   	push   %edx
  101938:	e8 ee 18 00 00       	call   10322b <strcat>
  10193d:	83 c4 10             	add    $0x10,%esp
  101940:	8b 45 08             	mov    0x8(%ebp),%eax
  101943:	8d 50 12             	lea    0x12(%eax),%edx
  101946:	83 ec 08             	sub    $0x8,%esp
  101949:	8d 83 dc f0 ff ff    	lea    -0xf24(%ebx),%eax
  10194f:	50                   	push   %eax
  101950:	52                   	push   %edx
  101951:	e8 d5 18 00 00       	call   10322b <strcat>
  101956:	83 c4 10             	add    $0x10,%esp
  101959:	e9 8c 05 00 00       	jmp    101eea <.L88+0x1>
  10195e:	e9 87 05 00 00       	jmp    101eea <.L88+0x1>

00101963 <.L23>:
  101963:	8b 45 08             	mov    0x8(%ebp),%eax
  101966:	8d 50 12             	lea    0x12(%eax),%edx
  101969:	83 ec 08             	sub    $0x8,%esp
  10196c:	8d 83 14 f1 ff ff    	lea    -0xeec(%ebx),%eax
  101972:	50                   	push   %eax
  101973:	52                   	push   %edx
  101974:	e8 b2 18 00 00       	call   10322b <strcat>
  101979:	83 c4 10             	add    $0x10,%esp
  10197c:	e9 69 05 00 00       	jmp    101eea <.L88+0x1>

00101981 <.L22>:
  101981:	8b 45 08             	mov    0x8(%ebp),%eax
  101984:	8d 50 12             	lea    0x12(%eax),%edx
  101987:	83 ec 08             	sub    $0x8,%esp
  10198a:	8d 83 21 f1 ff ff    	lea    -0xedf(%ebx),%eax
  101990:	50                   	push   %eax
  101991:	52                   	push   %edx
  101992:	e8 94 18 00 00       	call   10322b <strcat>
  101997:	83 c4 10             	add    $0x10,%esp
  10199a:	e9 4b 05 00 00       	jmp    101eea <.L88+0x1>

0010199f <.L21>:
  10199f:	8b 45 08             	mov    0x8(%ebp),%eax
  1019a2:	8d 50 12             	lea    0x12(%eax),%edx
  1019a5:	83 ec 08             	sub    $0x8,%esp
  1019a8:	8d 83 2a f1 ff ff    	lea    -0xed6(%ebx),%eax
  1019ae:	50                   	push   %eax
  1019af:	52                   	push   %edx
  1019b0:	e8 76 18 00 00       	call   10322b <strcat>
  1019b5:	83 c4 10             	add    $0x10,%esp
  1019b8:	8b 45 08             	mov    0x8(%ebp),%eax
  1019bb:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
  1019bf:	0f b6 c0             	movzbl %al,%eax
  1019c2:	83 f8 0a             	cmp    $0xa,%eax
  1019c5:	0f 87 55 01 00 00    	ja     101b20 <.L47+0x1b>
  1019cb:	c1 e0 02             	shl    $0x2,%eax
  1019ce:	8b 84 18 e0 f2 ff ff 	mov    -0xd20(%eax,%ebx,1),%eax
  1019d5:	01 d8                	add    %ebx,%eax
  1019d7:	ff e0                	jmp    *%eax

001019d9 <.L58>:
  1019d9:	8b 45 08             	mov    0x8(%ebp),%eax
  1019dc:	8d 50 12             	lea    0x12(%eax),%edx
  1019df:	83 ec 08             	sub    $0x8,%esp
  1019e2:	8d 83 33 f1 ff ff    	lea    -0xecd(%ebx),%eax
  1019e8:	50                   	push   %eax
  1019e9:	52                   	push   %edx
  1019ea:	e8 3c 18 00 00       	call   10322b <strcat>
  1019ef:	83 c4 10             	add    $0x10,%esp
  1019f2:	e9 92 01 00 00       	jmp    101b89 <.L47+0x84>

001019f7 <.L57>:
  1019f7:	8b 45 08             	mov    0x8(%ebp),%eax
  1019fa:	8d 50 12             	lea    0x12(%eax),%edx
  1019fd:	83 ec 08             	sub    $0x8,%esp
  101a00:	8d 83 38 f1 ff ff    	lea    -0xec8(%ebx),%eax
  101a06:	50                   	push   %eax
  101a07:	52                   	push   %edx
  101a08:	e8 1e 18 00 00       	call   10322b <strcat>
  101a0d:	83 c4 10             	add    $0x10,%esp
  101a10:	e9 74 01 00 00       	jmp    101b89 <.L47+0x84>

00101a15 <.L56>:
  101a15:	8b 45 08             	mov    0x8(%ebp),%eax
  101a18:	8d 50 12             	lea    0x12(%eax),%edx
  101a1b:	83 ec 08             	sub    $0x8,%esp
  101a1e:	8d 83 3c f1 ff ff    	lea    -0xec4(%ebx),%eax
  101a24:	50                   	push   %eax
  101a25:	52                   	push   %edx
  101a26:	e8 00 18 00 00       	call   10322b <strcat>
  101a2b:	83 c4 10             	add    $0x10,%esp
  101a2e:	e9 56 01 00 00       	jmp    101b89 <.L47+0x84>

00101a33 <.L55>:
  101a33:	8b 45 08             	mov    0x8(%ebp),%eax
  101a36:	8d 50 12             	lea    0x12(%eax),%edx
  101a39:	83 ec 08             	sub    $0x8,%esp
  101a3c:	8d 83 41 f1 ff ff    	lea    -0xebf(%ebx),%eax
  101a42:	50                   	push   %eax
  101a43:	52                   	push   %edx
  101a44:	e8 e2 17 00 00       	call   10322b <strcat>
  101a49:	83 c4 10             	add    $0x10,%esp
  101a4c:	e9 38 01 00 00       	jmp    101b89 <.L47+0x84>

00101a51 <.L54>:
  101a51:	8b 45 08             	mov    0x8(%ebp),%eax
  101a54:	8d 50 12             	lea    0x12(%eax),%edx
  101a57:	83 ec 08             	sub    $0x8,%esp
  101a5a:	8d 83 45 f1 ff ff    	lea    -0xebb(%ebx),%eax
  101a60:	50                   	push   %eax
  101a61:	52                   	push   %edx
  101a62:	e8 c4 17 00 00       	call   10322b <strcat>
  101a67:	83 c4 10             	add    $0x10,%esp
  101a6a:	e9 1a 01 00 00       	jmp    101b89 <.L47+0x84>

00101a6f <.L53>:
  101a6f:	8b 45 08             	mov    0x8(%ebp),%eax
  101a72:	8d 50 12             	lea    0x12(%eax),%edx
  101a75:	83 ec 08             	sub    $0x8,%esp
  101a78:	8d 83 50 f1 ff ff    	lea    -0xeb0(%ebx),%eax
  101a7e:	50                   	push   %eax
  101a7f:	52                   	push   %edx
  101a80:	e8 a6 17 00 00       	call   10322b <strcat>
  101a85:	83 c4 10             	add    $0x10,%esp
  101a88:	e9 fc 00 00 00       	jmp    101b89 <.L47+0x84>

00101a8d <.L52>:
  101a8d:	8b 45 08             	mov    0x8(%ebp),%eax
  101a90:	8d 50 12             	lea    0x12(%eax),%edx
  101a93:	83 ec 08             	sub    $0x8,%esp
  101a96:	8d 83 57 f1 ff ff    	lea    -0xea9(%ebx),%eax
  101a9c:	50                   	push   %eax
  101a9d:	52                   	push   %edx
  101a9e:	e8 88 17 00 00       	call   10322b <strcat>
  101aa3:	83 c4 10             	add    $0x10,%esp
  101aa6:	e9 de 00 00 00       	jmp    101b89 <.L47+0x84>

00101aab <.L51>:
  101aab:	8b 45 08             	mov    0x8(%ebp),%eax
  101aae:	8d 50 12             	lea    0x12(%eax),%edx
  101ab1:	83 ec 08             	sub    $0x8,%esp
  101ab4:	8d 83 5d f1 ff ff    	lea    -0xea3(%ebx),%eax
  101aba:	50                   	push   %eax
  101abb:	52                   	push   %edx
  101abc:	e8 6a 17 00 00       	call   10322b <strcat>
  101ac1:	83 c4 10             	add    $0x10,%esp
  101ac4:	e9 c0 00 00 00       	jmp    101b89 <.L47+0x84>

00101ac9 <.L50>:
  101ac9:	8b 45 08             	mov    0x8(%ebp),%eax
  101acc:	8d 50 12             	lea    0x12(%eax),%edx
  101acf:	83 ec 08             	sub    $0x8,%esp
  101ad2:	8d 83 65 f1 ff ff    	lea    -0xe9b(%ebx),%eax
  101ad8:	50                   	push   %eax
  101ad9:	52                   	push   %edx
  101ada:	e8 4c 17 00 00       	call   10322b <strcat>
  101adf:	83 c4 10             	add    $0x10,%esp
  101ae2:	e9 a2 00 00 00       	jmp    101b89 <.L47+0x84>

00101ae7 <.L49>:
  101ae7:	8b 45 08             	mov    0x8(%ebp),%eax
  101aea:	8d 50 12             	lea    0x12(%eax),%edx
  101aed:	83 ec 08             	sub    $0x8,%esp
  101af0:	8d 83 45 f1 ff ff    	lea    -0xebb(%ebx),%eax
  101af6:	50                   	push   %eax
  101af7:	52                   	push   %edx
  101af8:	e8 2e 17 00 00       	call   10322b <strcat>
  101afd:	83 c4 10             	add    $0x10,%esp
  101b00:	e9 84 00 00 00       	jmp    101b89 <.L47+0x84>

00101b05 <.L47>:
  101b05:	8b 45 08             	mov    0x8(%ebp),%eax
  101b08:	8d 50 12             	lea    0x12(%eax),%edx
  101b0b:	83 ec 08             	sub    $0x8,%esp
  101b0e:	8d 83 6d f1 ff ff    	lea    -0xe93(%ebx),%eax
  101b14:	50                   	push   %eax
  101b15:	52                   	push   %edx
  101b16:	e8 10 17 00 00       	call   10322b <strcat>
  101b1b:	83 c4 10             	add    $0x10,%esp
  101b1e:	eb 69                	jmp    101b89 <.L47+0x84>
  101b20:	8b 45 08             	mov    0x8(%ebp),%eax
  101b23:	8d 50 12             	lea    0x12(%eax),%edx
  101b26:	83 ec 08             	sub    $0x8,%esp
  101b29:	8d 83 d1 f0 ff ff    	lea    -0xf2f(%ebx),%eax
  101b2f:	50                   	push   %eax
  101b30:	52                   	push   %edx
  101b31:	e8 f5 16 00 00       	call   10322b <strcat>
  101b36:	83 c4 10             	add    $0x10,%esp
  101b39:	8b 45 08             	mov    0x8(%ebp),%eax
  101b3c:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
  101b40:	0f b6 c0             	movzbl %al,%eax
  101b43:	83 ec 04             	sub    $0x4,%esp
  101b46:	6a 02                	push   $0x2
  101b48:	8d 55 f6             	lea    -0xa(%ebp),%edx
  101b4b:	52                   	push   %edx
  101b4c:	50                   	push   %eax
  101b4d:	e8 af 18 00 00       	call   103401 <int_to_hex>
  101b52:	83 c4 10             	add    $0x10,%esp
  101b55:	8b 45 08             	mov    0x8(%ebp),%eax
  101b58:	8d 50 12             	lea    0x12(%eax),%edx
  101b5b:	83 ec 08             	sub    $0x8,%esp
  101b5e:	8d 45 f6             	lea    -0xa(%ebp),%eax
  101b61:	50                   	push   %eax
  101b62:	52                   	push   %edx
  101b63:	e8 c3 16 00 00       	call   10322b <strcat>
  101b68:	83 c4 10             	add    $0x10,%esp
  101b6b:	8b 45 08             	mov    0x8(%ebp),%eax
  101b6e:	8d 50 12             	lea    0x12(%eax),%edx
  101b71:	83 ec 08             	sub    $0x8,%esp
  101b74:	8d 83 dc f0 ff ff    	lea    -0xf24(%ebx),%eax
  101b7a:	50                   	push   %eax
  101b7b:	52                   	push   %edx
  101b7c:	e8 aa 16 00 00       	call   10322b <strcat>
  101b81:	83 c4 10             	add    $0x10,%esp
  101b84:	e9 61 03 00 00       	jmp    101eea <.L88+0x1>
  101b89:	e9 5c 03 00 00       	jmp    101eea <.L88+0x1>

00101b8e <.L20>:
  101b8e:	8b 45 08             	mov    0x8(%ebp),%eax
  101b91:	8d 50 12             	lea    0x12(%eax),%edx
  101b94:	83 ec 08             	sub    $0x8,%esp
  101b97:	8d 83 7f f1 ff ff    	lea    -0xe81(%ebx),%eax
  101b9d:	50                   	push   %eax
  101b9e:	52                   	push   %edx
  101b9f:	e8 87 16 00 00       	call   10322b <strcat>
  101ba4:	83 c4 10             	add    $0x10,%esp
  101ba7:	e9 3e 03 00 00       	jmp    101eea <.L88+0x1>

00101bac <.L19>:
  101bac:	8b 45 08             	mov    0x8(%ebp),%eax
  101baf:	8d 50 12             	lea    0x12(%eax),%edx
  101bb2:	83 ec 08             	sub    $0x8,%esp
  101bb5:	8d 83 96 f1 ff ff    	lea    -0xe6a(%ebx),%eax
  101bbb:	50                   	push   %eax
  101bbc:	52                   	push   %edx
  101bbd:	e8 69 16 00 00       	call   10322b <strcat>
  101bc2:	83 c4 10             	add    $0x10,%esp
  101bc5:	8b 45 08             	mov    0x8(%ebp),%eax
  101bc8:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
  101bcc:	0f b6 c0             	movzbl %al,%eax
  101bcf:	83 f8 06             	cmp    $0x6,%eax
  101bd2:	0f 87 dd 00 00 00    	ja     101cb5 <.L61+0x1b>
  101bd8:	c1 e0 02             	shl    $0x2,%eax
  101bdb:	8b 84 18 0c f3 ff ff 	mov    -0xcf4(%eax,%ebx,1),%eax
  101be2:	01 d8                	add    %ebx,%eax
  101be4:	ff e0                	jmp    *%eax

00101be6 <.L68>:
  101be6:	8b 45 08             	mov    0x8(%ebp),%eax
  101be9:	8d 50 12             	lea    0x12(%eax),%edx
  101bec:	83 ec 08             	sub    $0x8,%esp
  101bef:	8d 83 af f1 ff ff    	lea    -0xe51(%ebx),%eax
  101bf5:	50                   	push   %eax
  101bf6:	52                   	push   %edx
  101bf7:	e8 2f 16 00 00       	call   10322b <strcat>
  101bfc:	83 c4 10             	add    $0x10,%esp
  101bff:	e9 16 01 00 00       	jmp    101d1a <.L61+0x80>

00101c04 <.L67>:
  101c04:	8b 45 08             	mov    0x8(%ebp),%eax
  101c07:	8d 50 12             	lea    0x12(%eax),%edx
  101c0a:	83 ec 08             	sub    $0x8,%esp
  101c0d:	8d 83 b3 f1 ff ff    	lea    -0xe4d(%ebx),%eax
  101c13:	50                   	push   %eax
  101c14:	52                   	push   %edx
  101c15:	e8 11 16 00 00       	call   10322b <strcat>
  101c1a:	83 c4 10             	add    $0x10,%esp
  101c1d:	e9 f8 00 00 00       	jmp    101d1a <.L61+0x80>

00101c22 <.L66>:
  101c22:	8b 45 08             	mov    0x8(%ebp),%eax
  101c25:	8d 50 12             	lea    0x12(%eax),%edx
  101c28:	83 ec 08             	sub    $0x8,%esp
  101c2b:	8d 83 b7 f1 ff ff    	lea    -0xe49(%ebx),%eax
  101c31:	50                   	push   %eax
  101c32:	52                   	push   %edx
  101c33:	e8 f3 15 00 00       	call   10322b <strcat>
  101c38:	83 c4 10             	add    $0x10,%esp
  101c3b:	e9 da 00 00 00       	jmp    101d1a <.L61+0x80>

00101c40 <.L65>:
  101c40:	8b 45 08             	mov    0x8(%ebp),%eax
  101c43:	8d 50 12             	lea    0x12(%eax),%edx
  101c46:	83 ec 08             	sub    $0x8,%esp
  101c49:	8d 83 bd f1 ff ff    	lea    -0xe43(%ebx),%eax
  101c4f:	50                   	push   %eax
  101c50:	52                   	push   %edx
  101c51:	e8 d5 15 00 00       	call   10322b <strcat>
  101c56:	83 c4 10             	add    $0x10,%esp
  101c59:	e9 bc 00 00 00       	jmp    101d1a <.L61+0x80>

00101c5e <.L64>:
  101c5e:	8b 45 08             	mov    0x8(%ebp),%eax
  101c61:	8d 50 12             	lea    0x12(%eax),%edx
  101c64:	83 ec 08             	sub    $0x8,%esp
  101c67:	8d 83 c1 f1 ff ff    	lea    -0xe3f(%ebx),%eax
  101c6d:	50                   	push   %eax
  101c6e:	52                   	push   %edx
  101c6f:	e8 b7 15 00 00       	call   10322b <strcat>
  101c74:	83 c4 10             	add    $0x10,%esp
  101c77:	e9 9e 00 00 00       	jmp    101d1a <.L61+0x80>

00101c7c <.L63>:
  101c7c:	8b 45 08             	mov    0x8(%ebp),%eax
  101c7f:	8d 50 12             	lea    0x12(%eax),%edx
  101c82:	83 ec 08             	sub    $0x8,%esp
  101c85:	8d 83 ce f1 ff ff    	lea    -0xe32(%ebx),%eax
  101c8b:	50                   	push   %eax
  101c8c:	52                   	push   %edx
  101c8d:	e8 99 15 00 00       	call   10322b <strcat>
  101c92:	83 c4 10             	add    $0x10,%esp
  101c95:	e9 80 00 00 00       	jmp    101d1a <.L61+0x80>

00101c9a <.L61>:
  101c9a:	8b 45 08             	mov    0x8(%ebp),%eax
  101c9d:	8d 50 12             	lea    0x12(%eax),%edx
  101ca0:	83 ec 08             	sub    $0x8,%esp
  101ca3:	8d 83 d6 f1 ff ff    	lea    -0xe2a(%ebx),%eax
  101ca9:	50                   	push   %eax
  101caa:	52                   	push   %edx
  101cab:	e8 7b 15 00 00       	call   10322b <strcat>
  101cb0:	83 c4 10             	add    $0x10,%esp
  101cb3:	eb 65                	jmp    101d1a <.L61+0x80>
  101cb5:	8b 45 08             	mov    0x8(%ebp),%eax
  101cb8:	8d 50 12             	lea    0x12(%eax),%edx
  101cbb:	83 ec 08             	sub    $0x8,%esp
  101cbe:	8d 83 d1 f0 ff ff    	lea    -0xf2f(%ebx),%eax
  101cc4:	50                   	push   %eax
  101cc5:	52                   	push   %edx
  101cc6:	e8 60 15 00 00       	call   10322b <strcat>
  101ccb:	83 c4 10             	add    $0x10,%esp
  101cce:	8b 45 08             	mov    0x8(%ebp),%eax
  101cd1:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
  101cd5:	0f b6 c0             	movzbl %al,%eax
  101cd8:	83 ec 04             	sub    $0x4,%esp
  101cdb:	6a 02                	push   $0x2
  101cdd:	8d 55 f4             	lea    -0xc(%ebp),%edx
  101ce0:	52                   	push   %edx
  101ce1:	50                   	push   %eax
  101ce2:	e8 1a 17 00 00       	call   103401 <int_to_hex>
  101ce7:	83 c4 10             	add    $0x10,%esp
  101cea:	8b 45 08             	mov    0x8(%ebp),%eax
  101ced:	8d 50 12             	lea    0x12(%eax),%edx
  101cf0:	83 ec 08             	sub    $0x8,%esp
  101cf3:	8d 45 f4             	lea    -0xc(%ebp),%eax
  101cf6:	50                   	push   %eax
  101cf7:	52                   	push   %edx
  101cf8:	e8 2e 15 00 00       	call   10322b <strcat>
  101cfd:	83 c4 10             	add    $0x10,%esp
  101d00:	8b 45 08             	mov    0x8(%ebp),%eax
  101d03:	8d 50 12             	lea    0x12(%eax),%edx
  101d06:	83 ec 08             	sub    $0x8,%esp
  101d09:	8d 83 dc f0 ff ff    	lea    -0xf24(%ebx),%eax
  101d0f:	50                   	push   %eax
  101d10:	52                   	push   %edx
  101d11:	e8 15 15 00 00       	call   10322b <strcat>
  101d16:	83 c4 10             	add    $0x10,%esp
  101d19:	90                   	nop
  101d1a:	e9 cb 01 00 00       	jmp    101eea <.L88+0x1>

00101d1f <.L17>:
  101d1f:	8b 45 08             	mov    0x8(%ebp),%eax
  101d22:	8d 50 12             	lea    0x12(%eax),%edx
  101d25:	83 ec 08             	sub    $0x8,%esp
  101d28:	8d 83 dc f1 ff ff    	lea    -0xe24(%ebx),%eax
  101d2e:	50                   	push   %eax
  101d2f:	52                   	push   %edx
  101d30:	e8 f6 14 00 00       	call   10322b <strcat>
  101d35:	83 c4 10             	add    $0x10,%esp
  101d38:	8b 45 08             	mov    0x8(%ebp),%eax
  101d3b:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
  101d3f:	0f b6 c0             	movzbl %al,%eax
  101d42:	83 f8 09             	cmp    $0x9,%eax
  101d45:	0f 87 37 01 00 00    	ja     101e82 <.L71+0x1b>
  101d4b:	c1 e0 02             	shl    $0x2,%eax
  101d4e:	8b 84 18 28 f3 ff ff 	mov    -0xcd8(%eax,%ebx,1),%eax
  101d55:	01 d8                	add    %ebx,%eax
  101d57:	ff e0                	jmp    *%eax

00101d59 <.L81>:
  101d59:	8b 45 08             	mov    0x8(%ebp),%eax
  101d5c:	8d 50 12             	lea    0x12(%eax),%edx
  101d5f:	83 ec 08             	sub    $0x8,%esp
  101d62:	8d 83 e9 f1 ff ff    	lea    -0xe17(%ebx),%eax
  101d68:	50                   	push   %eax
  101d69:	52                   	push   %edx
  101d6a:	e8 bc 14 00 00       	call   10322b <strcat>
  101d6f:	83 c4 10             	add    $0x10,%esp
  101d72:	e9 70 01 00 00       	jmp    101ee7 <.L71+0x80>

00101d77 <.L80>:
  101d77:	8b 45 08             	mov    0x8(%ebp),%eax
  101d7a:	8d 50 12             	lea    0x12(%eax),%edx
  101d7d:	83 ec 08             	sub    $0x8,%esp
  101d80:	8d 83 fe f1 ff ff    	lea    -0xe02(%ebx),%eax
  101d86:	50                   	push   %eax
  101d87:	52                   	push   %edx
  101d88:	e8 9e 14 00 00       	call   10322b <strcat>
  101d8d:	83 c4 10             	add    $0x10,%esp
  101d90:	e9 52 01 00 00       	jmp    101ee7 <.L71+0x80>

00101d95 <.L79>:
  101d95:	8b 45 08             	mov    0x8(%ebp),%eax
  101d98:	8d 50 12             	lea    0x12(%eax),%edx
  101d9b:	83 ec 08             	sub    $0x8,%esp
  101d9e:	8d 83 09 f2 ff ff    	lea    -0xdf7(%ebx),%eax
  101da4:	50                   	push   %eax
  101da5:	52                   	push   %edx
  101da6:	e8 80 14 00 00       	call   10322b <strcat>
  101dab:	83 c4 10             	add    $0x10,%esp
  101dae:	e9 34 01 00 00       	jmp    101ee7 <.L71+0x80>

00101db3 <.L78>:
  101db3:	8b 45 08             	mov    0x8(%ebp),%eax
  101db6:	8d 50 12             	lea    0x12(%eax),%edx
  101db9:	83 ec 08             	sub    $0x8,%esp
  101dbc:	8d 83 0d f2 ff ff    	lea    -0xdf3(%ebx),%eax
  101dc2:	50                   	push   %eax
  101dc3:	52                   	push   %edx
  101dc4:	e8 62 14 00 00       	call   10322b <strcat>
  101dc9:	83 c4 10             	add    $0x10,%esp
  101dcc:	e9 16 01 00 00       	jmp    101ee7 <.L71+0x80>

00101dd1 <.L77>:
  101dd1:	8b 45 08             	mov    0x8(%ebp),%eax
  101dd4:	8d 50 12             	lea    0x12(%eax),%edx
  101dd7:	83 ec 08             	sub    $0x8,%esp
  101dda:	8d 83 11 f2 ff ff    	lea    -0xdef(%ebx),%eax
  101de0:	50                   	push   %eax
  101de1:	52                   	push   %edx
  101de2:	e8 44 14 00 00       	call   10322b <strcat>
  101de7:	83 c4 10             	add    $0x10,%esp
  101dea:	e9 f8 00 00 00       	jmp    101ee7 <.L71+0x80>

00101def <.L76>:
  101def:	8b 45 08             	mov    0x8(%ebp),%eax
  101df2:	8d 50 12             	lea    0x12(%eax),%edx
  101df5:	83 ec 08             	sub    $0x8,%esp
  101df8:	8d 83 17 f2 ff ff    	lea    -0xde9(%ebx),%eax
  101dfe:	50                   	push   %eax
  101dff:	52                   	push   %edx
  101e00:	e8 26 14 00 00       	call   10322b <strcat>
  101e05:	83 c4 10             	add    $0x10,%esp
  101e08:	e9 da 00 00 00       	jmp    101ee7 <.L71+0x80>

00101e0d <.L75>:
  101e0d:	8b 45 08             	mov    0x8(%ebp),%eax
  101e10:	8d 50 12             	lea    0x12(%eax),%edx
  101e13:	83 ec 08             	sub    $0x8,%esp
  101e16:	8d 83 1d f2 ff ff    	lea    -0xde3(%ebx),%eax
  101e1c:	50                   	push   %eax
  101e1d:	52                   	push   %edx
  101e1e:	e8 08 14 00 00       	call   10322b <strcat>
  101e23:	83 c4 10             	add    $0x10,%esp
  101e26:	e9 bc 00 00 00       	jmp    101ee7 <.L71+0x80>

00101e2b <.L74>:
  101e2b:	8b 45 08             	mov    0x8(%ebp),%eax
  101e2e:	8d 50 12             	lea    0x12(%eax),%edx
  101e31:	83 ec 08             	sub    $0x8,%esp
  101e34:	8d 83 33 f2 ff ff    	lea    -0xdcd(%ebx),%eax
  101e3a:	50                   	push   %eax
  101e3b:	52                   	push   %edx
  101e3c:	e8 ea 13 00 00       	call   10322b <strcat>
  101e41:	83 c4 10             	add    $0x10,%esp
  101e44:	e9 9e 00 00 00       	jmp    101ee7 <.L71+0x80>

00101e49 <.L73>:
  101e49:	8b 45 08             	mov    0x8(%ebp),%eax
  101e4c:	8d 50 12             	lea    0x12(%eax),%edx
  101e4f:	83 ec 08             	sub    $0x8,%esp
  101e52:	8d 83 42 f2 ff ff    	lea    -0xdbe(%ebx),%eax
  101e58:	50                   	push   %eax
  101e59:	52                   	push   %edx
  101e5a:	e8 cc 13 00 00       	call   10322b <strcat>
  101e5f:	83 c4 10             	add    $0x10,%esp
  101e62:	e9 80 00 00 00       	jmp    101ee7 <.L71+0x80>

00101e67 <.L71>:
  101e67:	8b 45 08             	mov    0x8(%ebp),%eax
  101e6a:	8d 50 12             	lea    0x12(%eax),%edx
  101e6d:	83 ec 08             	sub    $0x8,%esp
  101e70:	8d 83 5f f2 ff ff    	lea    -0xda1(%ebx),%eax
  101e76:	50                   	push   %eax
  101e77:	52                   	push   %edx
  101e78:	e8 ae 13 00 00       	call   10322b <strcat>
  101e7d:	83 c4 10             	add    $0x10,%esp
  101e80:	eb 65                	jmp    101ee7 <.L71+0x80>
  101e82:	8b 45 08             	mov    0x8(%ebp),%eax
  101e85:	8d 50 12             	lea    0x12(%eax),%edx
  101e88:	83 ec 08             	sub    $0x8,%esp
  101e8b:	8d 83 d1 f0 ff ff    	lea    -0xf2f(%ebx),%eax
  101e91:	50                   	push   %eax
  101e92:	52                   	push   %edx
  101e93:	e8 93 13 00 00       	call   10322b <strcat>
  101e98:	83 c4 10             	add    $0x10,%esp
  101e9b:	8b 45 08             	mov    0x8(%ebp),%eax
  101e9e:	0f b6 40 0d          	movzbl 0xd(%eax),%eax
  101ea2:	0f b6 c0             	movzbl %al,%eax
  101ea5:	83 ec 04             	sub    $0x4,%esp
  101ea8:	6a 02                	push   $0x2
  101eaa:	8d 55 f6             	lea    -0xa(%ebp),%edx
  101ead:	52                   	push   %edx
  101eae:	50                   	push   %eax
  101eaf:	e8 4d 15 00 00       	call   103401 <int_to_hex>
  101eb4:	83 c4 10             	add    $0x10,%esp
  101eb7:	8b 45 08             	mov    0x8(%ebp),%eax
  101eba:	8d 50 12             	lea    0x12(%eax),%edx
  101ebd:	83 ec 08             	sub    $0x8,%esp
  101ec0:	8d 45 f6             	lea    -0xa(%ebp),%eax
  101ec3:	50                   	push   %eax
  101ec4:	52                   	push   %edx
  101ec5:	e8 61 13 00 00       	call   10322b <strcat>
  101eca:	83 c4 10             	add    $0x10,%esp
  101ecd:	8b 45 08             	mov    0x8(%ebp),%eax
  101ed0:	8d 50 12             	lea    0x12(%eax),%edx
  101ed3:	83 ec 08             	sub    $0x8,%esp
  101ed6:	8d 83 dc f0 ff ff    	lea    -0xf24(%ebx),%eax
  101edc:	50                   	push   %eax
  101edd:	52                   	push   %edx
  101ede:	e8 48 13 00 00       	call   10322b <strcat>
  101ee3:	83 c4 10             	add    $0x10,%esp
  101ee6:	90                   	nop
  101ee7:	eb 01                	jmp    101eea <.L88+0x1>

00101ee9 <.L88>:
  101ee9:	90                   	nop
  101eea:	8b 45 08             	mov    0x8(%ebp),%eax
  101eed:	0f b7 40 06          	movzwl 0x6(%eax),%eax
  101ef1:	0f b7 c0             	movzwl %ax,%eax
  101ef4:	3d 22 10 00 00       	cmp    $0x1022,%eax
  101ef9:	74 22                	je     101f1d <.L88+0x34>
  101efb:	3d 86 80 00 00       	cmp    $0x8086,%eax
  101f00:	75 63                	jne    101f65 <.L88+0x7c>
  101f02:	8b 45 08             	mov    0x8(%ebp),%eax
  101f05:	8d 50 12             	lea    0x12(%eax),%edx
  101f08:	83 ec 08             	sub    $0x8,%esp
  101f0b:	8d 83 71 f2 ff ff    	lea    -0xd8f(%ebx),%eax
  101f11:	50                   	push   %eax
  101f12:	52                   	push   %edx
  101f13:	e8 13 13 00 00       	call   10322b <strcat>
  101f18:	83 c4 10             	add    $0x10,%esp
  101f1b:	eb 49                	jmp    101f66 <.L88+0x7d>
  101f1d:	8b 45 08             	mov    0x8(%ebp),%eax
  101f20:	8d 50 12             	lea    0x12(%eax),%edx
  101f23:	83 ec 08             	sub    $0x8,%esp
  101f26:	8d 83 78 f2 ff ff    	lea    -0xd88(%ebx),%eax
  101f2c:	50                   	push   %eax
  101f2d:	52                   	push   %edx
  101f2e:	e8 f8 12 00 00       	call   10322b <strcat>
  101f33:	83 c4 10             	add    $0x10,%esp
  101f36:	8b 45 08             	mov    0x8(%ebp),%eax
  101f39:	0f b7 40 04          	movzwl 0x4(%eax),%eax
  101f3d:	0f b7 c0             	movzwl %ax,%eax
  101f40:	3d 00 20 00 00       	cmp    $0x2000,%eax
  101f45:	75 1b                	jne    101f62 <.L88+0x79>
  101f47:	8b 45 08             	mov    0x8(%ebp),%eax
  101f4a:	8d 50 12             	lea    0x12(%eax),%edx
  101f4d:	83 ec 08             	sub    $0x8,%esp
  101f50:	8d 83 7e f2 ff ff    	lea    -0xd82(%ebx),%eax
  101f56:	50                   	push   %eax
  101f57:	52                   	push   %edx
  101f58:	e8 ce 12 00 00       	call   10322b <strcat>
  101f5d:	83 c4 10             	add    $0x10,%esp
  101f60:	eb 01                	jmp    101f63 <.L88+0x7a>
  101f62:	90                   	nop
  101f63:	eb 01                	jmp    101f66 <.L88+0x7d>
  101f65:	90                   	nop
  101f66:	90                   	nop
  101f67:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  101f6a:	c9                   	leave  
  101f6b:	c3                   	ret    

00101f6c <pci_probe>:
  101f6c:	55                   	push   %ebp
  101f6d:	89 e5                	mov    %esp,%ebp
  101f6f:	56                   	push   %esi
  101f70:	53                   	push   %ebx
  101f71:	81 ec 90 00 00 00    	sub    $0x90,%esp
  101f77:	e8 e4 15 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  101f7c:	81 c3 ec 31 00 00    	add    $0x31ec,%ebx
  101f82:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  101f89:	e9 de 01 00 00       	jmp    10216c <pci_probe+0x200>
  101f8e:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
  101f95:	e9 c4 01 00 00       	jmp    10215e <pci_probe+0x1f2>
  101f9a:	8b 45 f0             	mov    -0x10(%ebp),%eax
  101f9d:	0f b6 d0             	movzbl %al,%edx
  101fa0:	8b 45 f4             	mov    -0xc(%ebp),%eax
  101fa3:	0f b6 c0             	movzbl %al,%eax
  101fa6:	83 ec 08             	sub    $0x8,%esp
  101fa9:	52                   	push   %edx
  101faa:	50                   	push   %eax
  101fab:	e8 27 f4 ff ff       	call   1013d7 <pci_has_func>
  101fb0:	83 c4 10             	add    $0x10,%esp
  101fb3:	85 c0                	test   %eax,%eax
  101fb5:	74 07                	je     101fbe <pci_probe+0x52>
  101fb7:	b8 08 00 00 00       	mov    $0x8,%eax
  101fbc:	eb 05                	jmp    101fc3 <pci_probe+0x57>
  101fbe:	b8 01 00 00 00       	mov    $0x1,%eax
  101fc3:	88 45 eb             	mov    %al,-0x15(%ebp)
  101fc6:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%ebp)
  101fcd:	e9 78 01 00 00       	jmp    10214a <pci_probe+0x1de>
  101fd2:	8b 45 ec             	mov    -0x14(%ebp),%eax
  101fd5:	0f b6 f0             	movzbl %al,%esi
  101fd8:	8b 45 f0             	mov    -0x10(%ebp),%eax
  101fdb:	0f b6 c8             	movzbl %al,%ecx
  101fde:	8b 45 f4             	mov    -0xc(%ebp),%eax
  101fe1:	0f b6 d0             	movzbl %al,%edx
  101fe4:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
  101fea:	56                   	push   %esi
  101feb:	51                   	push   %ecx
  101fec:	52                   	push   %edx
  101fed:	50                   	push   %eax
  101fee:	e8 1d f4 ff ff       	call   101410 <get_pci_dev>
  101ff3:	83 c4 0c             	add    $0xc,%esp
  101ff6:	0f b7 85 7a ff ff ff 	movzwl -0x86(%ebp),%eax
  101ffd:	66 83 f8 ff          	cmp    $0xffff,%ax
  102001:	0f 84 52 01 00 00    	je     102159 <pci_probe+0x1ed>
  102007:	83 ec 0c             	sub    $0xc,%esp
  10200a:	8d 83 50 f3 ff ff    	lea    -0xcb0(%ebx),%eax
  102010:	50                   	push   %eax
  102011:	e8 3b 02 00 00       	call   102251 <printk>
  102016:	83 c4 10             	add    $0x10,%esp
  102019:	8b 45 f4             	mov    -0xc(%ebp),%eax
  10201c:	83 ec 0c             	sub    $0xc,%esp
  10201f:	50                   	push   %eax
  102020:	e8 7e 03 00 00       	call   1023a3 <print_int>
  102025:	83 c4 10             	add    $0x10,%esp
  102028:	83 ec 0c             	sub    $0xc,%esp
  10202b:	8d 83 55 f3 ff ff    	lea    -0xcab(%ebx),%eax
  102031:	50                   	push   %eax
  102032:	e8 1a 02 00 00       	call   102251 <printk>
  102037:	83 c4 10             	add    $0x10,%esp
  10203a:	8b 45 f0             	mov    -0x10(%ebp),%eax
  10203d:	83 ec 0c             	sub    $0xc,%esp
  102040:	50                   	push   %eax
  102041:	e8 5d 03 00 00       	call   1023a3 <print_int>
  102046:	83 c4 10             	add    $0x10,%esp
  102049:	83 ec 0c             	sub    $0xc,%esp
  10204c:	8d 83 57 f3 ff ff    	lea    -0xca9(%ebx),%eax
  102052:	50                   	push   %eax
  102053:	e8 f9 01 00 00       	call   102251 <printk>
  102058:	83 c4 10             	add    $0x10,%esp
  10205b:	8b 45 ec             	mov    -0x14(%ebp),%eax
  10205e:	83 ec 0c             	sub    $0xc,%esp
  102061:	50                   	push   %eax
  102062:	e8 3c 03 00 00       	call   1023a3 <print_int>
  102067:	83 c4 10             	add    $0x10,%esp
  10206a:	83 ec 0c             	sub    $0xc,%esp
  10206d:	8d 83 59 f3 ff ff    	lea    -0xca7(%ebx),%eax
  102073:	50                   	push   %eax
  102074:	e8 d8 01 00 00       	call   102251 <printk>
  102079:	83 c4 10             	add    $0x10,%esp
  10207c:	0f b7 85 7a ff ff ff 	movzwl -0x86(%ebp),%eax
  102083:	0f b7 c0             	movzwl %ax,%eax
  102086:	83 ec 08             	sub    $0x8,%esp
  102089:	6a 04                	push   $0x4
  10208b:	50                   	push   %eax
  10208c:	e8 b1 12 00 00       	call   103342 <print_hex>
  102091:	83 c4 10             	add    $0x10,%esp
  102094:	83 ec 0c             	sub    $0xc,%esp
  102097:	8d 83 55 f3 ff ff    	lea    -0xcab(%ebx),%eax
  10209d:	50                   	push   %eax
  10209e:	e8 ae 01 00 00       	call   102251 <printk>
  1020a3:	83 c4 10             	add    $0x10,%esp
  1020a6:	0f b7 85 78 ff ff ff 	movzwl -0x88(%ebp),%eax
  1020ad:	0f b7 c0             	movzwl %ax,%eax
  1020b0:	83 ec 08             	sub    $0x8,%esp
  1020b3:	6a 04                	push   $0x4
  1020b5:	50                   	push   %eax
  1020b6:	e8 87 12 00 00       	call   103342 <print_hex>
  1020bb:	83 c4 10             	add    $0x10,%esp
  1020be:	83 ec 0c             	sub    $0xc,%esp
  1020c1:	8d 83 59 f3 ff ff    	lea    -0xca7(%ebx),%eax
  1020c7:	50                   	push   %eax
  1020c8:	e8 84 01 00 00       	call   102251 <printk>
  1020cd:	83 c4 10             	add    $0x10,%esp
  1020d0:	83 ec 0c             	sub    $0xc,%esp
  1020d3:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
  1020d9:	50                   	push   %eax
  1020da:	e8 6a f5 ff ff       	call   101649 <pci_get_name>
  1020df:	83 c4 10             	add    $0x10,%esp
  1020e2:	83 ec 0c             	sub    $0xc,%esp
  1020e5:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
  1020eb:	83 c0 12             	add    $0x12,%eax
  1020ee:	50                   	push   %eax
  1020ef:	e8 ac 11 00 00       	call   1032a0 <strend>
  1020f4:	83 c4 10             	add    $0x10,%esp
  1020f7:	83 ec 0c             	sub    $0xc,%esp
  1020fa:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
  102100:	83 c0 12             	add    $0x12,%eax
  102103:	50                   	push   %eax
  102104:	e8 48 01 00 00       	call   102251 <printk>
  102109:	83 c4 10             	add    $0x10,%esp
  10210c:	83 ec 0c             	sub    $0xc,%esp
  10210f:	8d 85 74 ff ff ff    	lea    -0x8c(%ebp),%eax
  102115:	50                   	push   %eax
  102116:	e8 8f f4 ff ff       	call   1015aa <handle_bar>
  10211b:	83 c4 10             	add    $0x10,%esp
  10211e:	84 c0                	test   %al,%al
  102120:	75 12                	jne    102134 <pci_probe+0x1c8>
  102122:	83 ec 0c             	sub    $0xc,%esp
  102125:	8d 83 5b f3 ff ff    	lea    -0xca5(%ebx),%eax
  10212b:	50                   	push   %eax
  10212c:	e8 20 01 00 00       	call   102251 <printk>
  102131:	83 c4 10             	add    $0x10,%esp
  102134:	83 ec 0c             	sub    $0xc,%esp
  102137:	8d 83 61 f3 ff ff    	lea    -0xc9f(%ebx),%eax
  10213d:	50                   	push   %eax
  10213e:	e8 0e 01 00 00       	call   102251 <printk>
  102143:	83 c4 10             	add    $0x10,%esp
  102146:	83 45 ec 01          	addl   $0x1,-0x14(%ebp)
  10214a:	0f b6 45 eb          	movzbl -0x15(%ebp),%eax
  10214e:	39 45 ec             	cmp    %eax,-0x14(%ebp)
  102151:	0f 8c 7b fe ff ff    	jl     101fd2 <pci_probe+0x66>
  102157:	eb 01                	jmp    10215a <pci_probe+0x1ee>
  102159:	90                   	nop
  10215a:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
  10215e:	83 7d f0 1f          	cmpl   $0x1f,-0x10(%ebp)
  102162:	0f 8e 32 fe ff ff    	jle    101f9a <pci_probe+0x2e>
  102168:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
  10216c:	81 7d f4 ff 00 00 00 	cmpl   $0xff,-0xc(%ebp)
  102173:	0f 8e 15 fe ff ff    	jle    101f8e <pci_probe+0x22>
  102179:	90                   	nop
  10217a:	90                   	nop
  10217b:	8d 65 f8             	lea    -0x8(%ebp),%esp
  10217e:	5b                   	pop    %ebx
  10217f:	5e                   	pop    %esi
  102180:	5d                   	pop    %ebp
  102181:	c3                   	ret    

00102182 <init_pci>:
  102182:	55                   	push   %ebp
  102183:	89 e5                	mov    %esp,%ebp
  102185:	83 ec 08             	sub    $0x8,%esp
  102188:	e8 cf 13 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  10218d:	05 db 2f 00 00       	add    $0x2fdb,%eax
  102192:	e8 d5 fd ff ff       	call   101f6c <pci_probe>
  102197:	90                   	nop
  102198:	c9                   	leave  
  102199:	c3                   	ret    

0010219a <clear_screen>:
  10219a:	55                   	push   %ebp
  10219b:	89 e5                	mov    %esp,%ebp
  10219d:	83 ec 18             	sub    $0x18,%esp
  1021a0:	e8 b7 13 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1021a5:	05 c3 2f 00 00       	add    $0x2fc3,%eax
  1021aa:	c7 45 f0 00 80 0b 00 	movl   $0xb8000,-0x10(%ebp)
  1021b1:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  1021b8:	eb 1d                	jmp    1021d7 <clear_screen+0x3d>
  1021ba:	8b 55 f4             	mov    -0xc(%ebp),%edx
  1021bd:	8b 45 f0             	mov    -0x10(%ebp),%eax
  1021c0:	01 d0                	add    %edx,%eax
  1021c2:	c6 00 20             	movb   $0x20,(%eax)
  1021c5:	8b 45 f4             	mov    -0xc(%ebp),%eax
  1021c8:	8d 50 01             	lea    0x1(%eax),%edx
  1021cb:	8b 45 f0             	mov    -0x10(%ebp),%eax
  1021ce:	01 d0                	add    %edx,%eax
  1021d0:	c6 00 00             	movb   $0x0,(%eax)
  1021d3:	83 45 f4 02          	addl   $0x2,-0xc(%ebp)
  1021d7:	81 7d f4 9f 0f 00 00 	cmpl   $0xf9f,-0xc(%ebp)
  1021de:	7e da                	jle    1021ba <clear_screen+0x20>
  1021e0:	83 ec 0c             	sub    $0xc,%esp
  1021e3:	6a 00                	push   $0x0
  1021e5:	e8 e9 02 00 00       	call   1024d3 <set_cursor_offset>
  1021ea:	83 c4 10             	add    $0x10,%esp
  1021ed:	90                   	nop
  1021ee:	c9                   	leave  
  1021ef:	c3                   	ret    

001021f0 <vga_scroll>:
  1021f0:	55                   	push   %ebp
  1021f1:	89 e5                	mov    %esp,%ebp
  1021f3:	83 ec 18             	sub    $0x18,%esp
  1021f6:	e8 61 13 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1021fb:	05 6d 2f 00 00       	add    $0x2f6d,%eax
  102200:	c7 45 f0 00 80 0b 00 	movl   $0xb8000,-0x10(%ebp)
  102207:	66 c7 45 ee a0 00    	movw   $0xa0,-0x12(%ebp)
  10220d:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  102214:	eb 21                	jmp    102237 <vga_scroll+0x47>
  102216:	0f b7 55 ee          	movzwl -0x12(%ebp),%edx
  10221a:	8b 45 f4             	mov    -0xc(%ebp),%eax
  10221d:	01 d0                	add    %edx,%eax
  10221f:	89 c2                	mov    %eax,%edx
  102221:	8b 45 f0             	mov    -0x10(%ebp),%eax
  102224:	01 d0                	add    %edx,%eax
  102226:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  102229:	8b 55 f0             	mov    -0x10(%ebp),%edx
  10222c:	01 ca                	add    %ecx,%edx
  10222e:	0f b6 00             	movzbl (%eax),%eax
  102231:	88 02                	mov    %al,(%edx)
  102233:	83 45 f4 01          	addl   $0x1,-0xc(%ebp)
  102237:	81 7d f4 9f 0f 00 00 	cmpl   $0xf9f,-0xc(%ebp)
  10223e:	7e d6                	jle    102216 <vga_scroll+0x26>
  102240:	83 ec 08             	sub    $0x8,%esp
  102243:	6a 00                	push   $0x0
  102245:	6a 18                	push   $0x18
  102247:	e8 09 03 00 00       	call   102555 <cal_offset>
  10224c:	83 c4 10             	add    $0x10,%esp
  10224f:	c9                   	leave  
  102250:	c3                   	ret    

00102251 <printk>:
  102251:	55                   	push   %ebp
  102252:	89 e5                	mov    %esp,%ebp
  102254:	56                   	push   %esi
  102255:	53                   	push   %ebx
  102256:	83 ec 10             	sub    $0x10,%esp
  102259:	e8 02 13 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  10225e:	81 c3 0a 2f 00 00    	add    $0x2f0a,%ebx
  102264:	c7 45 ec 00 80 0b 00 	movl   $0xb8000,-0x14(%ebp)
  10226b:	e8 f1 01 00 00       	call   102461 <get_cursor_offset>
  102270:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
  102274:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
  10227b:	e9 f8 00 00 00       	jmp    102378 <printk+0x127>
  102280:	8b 55 f0             	mov    -0x10(%ebp),%edx
  102283:	8b 45 08             	mov    0x8(%ebp),%eax
  102286:	01 d0                	add    %edx,%eax
  102288:	0f b6 00             	movzbl (%eax),%eax
  10228b:	3c 0a                	cmp    $0xa,%al
  10228d:	75 2d                	jne    1022bc <printk+0x6b>
  10228f:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
  102293:	83 ec 0c             	sub    $0xc,%esp
  102296:	50                   	push   %eax
  102297:	e8 f1 02 00 00       	call   10258d <cal_row>
  10229c:	83 c4 10             	add    $0x10,%esp
  10229f:	83 c0 01             	add    $0x1,%eax
  1022a2:	0f b7 c0             	movzwl %ax,%eax
  1022a5:	83 ec 08             	sub    $0x8,%esp
  1022a8:	6a 00                	push   $0x0
  1022aa:	50                   	push   %eax
  1022ab:	e8 a5 02 00 00       	call   102555 <cal_offset>
  1022b0:	83 c4 10             	add    $0x10,%esp
  1022b3:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
  1022b7:	e9 a7 00 00 00       	jmp    102363 <printk+0x112>
  1022bc:	8b 55 f0             	mov    -0x10(%ebp),%edx
  1022bf:	8b 45 08             	mov    0x8(%ebp),%eax
  1022c2:	01 d0                	add    %edx,%eax
  1022c4:	0f b6 00             	movzbl (%eax),%eax
  1022c7:	3c 08                	cmp    $0x8,%al
  1022c9:	75 60                	jne    10232b <printk+0xda>
  1022cb:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
  1022cf:	8d 50 fe             	lea    -0x2(%eax),%edx
  1022d2:	8b 45 ec             	mov    -0x14(%ebp),%eax
  1022d5:	01 d0                	add    %edx,%eax
  1022d7:	c6 00 20             	movb   $0x20,(%eax)
  1022da:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
  1022de:	8d 50 ff             	lea    -0x1(%eax),%edx
  1022e1:	8b 45 ec             	mov    -0x14(%ebp),%eax
  1022e4:	01 c2                	add    %eax,%edx
  1022e6:	0f b6 83 fc ff ff ff 	movzbl -0x4(%ebx),%eax
  1022ed:	88 02                	mov    %al,(%edx)
  1022ef:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
  1022f3:	83 ec 0c             	sub    $0xc,%esp
  1022f6:	50                   	push   %eax
  1022f7:	e8 be 02 00 00       	call   1025ba <cal_col>
  1022fc:	83 c4 10             	add    $0x10,%esp
  1022ff:	83 e8 01             	sub    $0x1,%eax
  102302:	0f b7 f0             	movzwl %ax,%esi
  102305:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
  102309:	83 ec 0c             	sub    $0xc,%esp
  10230c:	50                   	push   %eax
  10230d:	e8 7b 02 00 00       	call   10258d <cal_row>
  102312:	83 c4 10             	add    $0x10,%esp
  102315:	0f b7 c0             	movzwl %ax,%eax
  102318:	83 ec 08             	sub    $0x8,%esp
  10231b:	56                   	push   %esi
  10231c:	50                   	push   %eax
  10231d:	e8 33 02 00 00       	call   102555 <cal_offset>
  102322:	83 c4 10             	add    $0x10,%esp
  102325:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
  102329:	eb 38                	jmp    102363 <printk+0x112>
  10232b:	8b 55 f0             	mov    -0x10(%ebp),%edx
  10232e:	8b 45 08             	mov    0x8(%ebp),%eax
  102331:	01 d0                	add    %edx,%eax
  102333:	0f b6 10             	movzbl (%eax),%edx
  102336:	0f b7 4d f6          	movzwl -0xa(%ebp),%ecx
  10233a:	8b 45 ec             	mov    -0x14(%ebp),%eax
  10233d:	01 c8                	add    %ecx,%eax
  10233f:	88 10                	mov    %dl,(%eax)
  102341:	66 83 45 f6 01       	addw   $0x1,-0xa(%ebp)
  102346:	0f b7 55 f6          	movzwl -0xa(%ebp),%edx
  10234a:	8b 45 ec             	mov    -0x14(%ebp),%eax
  10234d:	01 c2                	add    %eax,%edx
  10234f:	0f b6 83 fc ff ff ff 	movzbl -0x4(%ebx),%eax
  102356:	88 02                	mov    %al,(%edx)
  102358:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
  10235c:	83 c0 01             	add    $0x1,%eax
  10235f:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
  102363:	66 81 7d f6 9f 0f    	cmpw   $0xf9f,-0xa(%ebp)
  102369:	76 09                	jbe    102374 <printk+0x123>
  10236b:	e8 80 fe ff ff       	call   1021f0 <vga_scroll>
  102370:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
  102374:	83 45 f0 01          	addl   $0x1,-0x10(%ebp)
  102378:	8b 55 f0             	mov    -0x10(%ebp),%edx
  10237b:	8b 45 08             	mov    0x8(%ebp),%eax
  10237e:	01 d0                	add    %edx,%eax
  102380:	0f b6 00             	movzbl (%eax),%eax
  102383:	84 c0                	test   %al,%al
  102385:	0f 85 f5 fe ff ff    	jne    102280 <printk+0x2f>
  10238b:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
  10238f:	83 ec 0c             	sub    $0xc,%esp
  102392:	50                   	push   %eax
  102393:	e8 3b 01 00 00       	call   1024d3 <set_cursor_offset>
  102398:	83 c4 10             	add    $0x10,%esp
  10239b:	90                   	nop
  10239c:	8d 65 f8             	lea    -0x8(%ebp),%esp
  10239f:	5b                   	pop    %ebx
  1023a0:	5e                   	pop    %esi
  1023a1:	5d                   	pop    %ebp
  1023a2:	c3                   	ret    

001023a3 <print_int>:
  1023a3:	55                   	push   %ebp
  1023a4:	89 e5                	mov    %esp,%ebp
  1023a6:	53                   	push   %ebx
  1023a7:	83 ec 14             	sub    $0x14,%esp
  1023aa:	e8 ad 11 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1023af:	05 b9 2d 00 00       	add    $0x2db9,%eax
  1023b4:	83 ec 08             	sub    $0x8,%esp
  1023b7:	8d 55 eb             	lea    -0x15(%ebp),%edx
  1023ba:	52                   	push   %edx
  1023bb:	ff 75 08             	push   0x8(%ebp)
  1023be:	89 c3                	mov    %eax,%ebx
  1023c0:	e8 0a 0d 00 00       	call   1030cf <int_to_ascii>
  1023c5:	83 c4 10             	add    $0x10,%esp
  1023c8:	83 ec 0c             	sub    $0xc,%esp
  1023cb:	8d 45 eb             	lea    -0x15(%ebp),%eax
  1023ce:	50                   	push   %eax
  1023cf:	e8 7d fe ff ff       	call   102251 <printk>
  1023d4:	83 c4 10             	add    $0x10,%esp
  1023d7:	90                   	nop
  1023d8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1023db:	c9                   	leave  
  1023dc:	c3                   	ret    

001023dd <print_bin>:
  1023dd:	55                   	push   %ebp
  1023de:	89 e5                	mov    %esp,%ebp
  1023e0:	53                   	push   %ebx
  1023e1:	83 ec 34             	sub    $0x34,%esp
  1023e4:	e8 73 11 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1023e9:	05 7f 2d 00 00       	add    $0x2d7f,%eax
  1023ee:	83 ec 08             	sub    $0x8,%esp
  1023f1:	8d 55 d7             	lea    -0x29(%ebp),%edx
  1023f4:	52                   	push   %edx
  1023f5:	ff 75 08             	push   0x8(%ebp)
  1023f8:	89 c3                	mov    %eax,%ebx
  1023fa:	e8 90 0d 00 00       	call   10318f <int_to_bin>
  1023ff:	83 c4 10             	add    $0x10,%esp
  102402:	83 ec 0c             	sub    $0xc,%esp
  102405:	8d 45 d7             	lea    -0x29(%ebp),%eax
  102408:	50                   	push   %eax
  102409:	e8 43 fe ff ff       	call   102251 <printk>
  10240e:	83 c4 10             	add    $0x10,%esp
  102411:	90                   	nop
  102412:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  102415:	c9                   	leave  
  102416:	c3                   	ret    

00102417 <printkc>:
  102417:	55                   	push   %ebp
  102418:	89 e5                	mov    %esp,%ebp
  10241a:	53                   	push   %ebx
  10241b:	83 ec 24             	sub    $0x24,%esp
  10241e:	e8 3d 11 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  102423:	81 c3 45 2d 00 00    	add    $0x2d45,%ebx
  102429:	8b 45 0c             	mov    0xc(%ebp),%eax
  10242c:	88 45 e4             	mov    %al,-0x1c(%ebp)
  10242f:	0f b6 83 fc ff ff ff 	movzbl -0x4(%ebx),%eax
  102436:	88 45 f7             	mov    %al,-0x9(%ebp)
  102439:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
  10243d:	88 83 fc ff ff ff    	mov    %al,-0x4(%ebx)
  102443:	83 ec 0c             	sub    $0xc,%esp
  102446:	ff 75 08             	push   0x8(%ebp)
  102449:	e8 03 fe ff ff       	call   102251 <printk>
  10244e:	83 c4 10             	add    $0x10,%esp
  102451:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  102455:	88 83 fc ff ff ff    	mov    %al,-0x4(%ebx)
  10245b:	90                   	nop
  10245c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  10245f:	c9                   	leave  
  102460:	c3                   	ret    

00102461 <get_cursor_offset>:
  102461:	55                   	push   %ebp
  102462:	89 e5                	mov    %esp,%ebp
  102464:	53                   	push   %ebx
  102465:	83 ec 14             	sub    $0x14,%esp
  102468:	e8 f3 10 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  10246d:	81 c3 fb 2c 00 00    	add    $0x2cfb,%ebx
  102473:	83 ec 08             	sub    $0x8,%esp
  102476:	6a 0e                	push   $0xe
  102478:	68 d4 03 00 00       	push   $0x3d4
  10247d:	e8 ad 0a 00 00       	call   102f2f <port_outb>
  102482:	83 c4 10             	add    $0x10,%esp
  102485:	83 ec 0c             	sub    $0xc,%esp
  102488:	68 d5 03 00 00       	push   $0x3d5
  10248d:	e8 76 0a 00 00       	call   102f08 <port_inb>
  102492:	83 c4 10             	add    $0x10,%esp
  102495:	0f b6 c0             	movzbl %al,%eax
  102498:	c1 e0 08             	shl    $0x8,%eax
  10249b:	66 89 45 f6          	mov    %ax,-0xa(%ebp)
  10249f:	83 ec 08             	sub    $0x8,%esp
  1024a2:	6a 0f                	push   $0xf
  1024a4:	68 d4 03 00 00       	push   $0x3d4
  1024a9:	e8 81 0a 00 00       	call   102f2f <port_outb>
  1024ae:	83 c4 10             	add    $0x10,%esp
  1024b1:	83 ec 0c             	sub    $0xc,%esp
  1024b4:	68 d5 03 00 00       	push   $0x3d5
  1024b9:	e8 4a 0a 00 00       	call   102f08 <port_inb>
  1024be:	83 c4 10             	add    $0x10,%esp
  1024c1:	0f b6 c0             	movzbl %al,%eax
  1024c4:	66 09 45 f6          	or     %ax,-0xa(%ebp)
  1024c8:	0f b7 45 f6          	movzwl -0xa(%ebp),%eax
  1024cc:	01 c0                	add    %eax,%eax
  1024ce:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1024d1:	c9                   	leave  
  1024d2:	c3                   	ret    

001024d3 <set_cursor_offset>:
  1024d3:	55                   	push   %ebp
  1024d4:	89 e5                	mov    %esp,%ebp
  1024d6:	53                   	push   %ebx
  1024d7:	83 ec 14             	sub    $0x14,%esp
  1024da:	e8 81 10 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  1024df:	81 c3 89 2c 00 00    	add    $0x2c89,%ebx
  1024e5:	8b 45 08             	mov    0x8(%ebp),%eax
  1024e8:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
  1024ec:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
  1024f0:	66 d1 e8             	shr    %ax
  1024f3:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
  1024f7:	83 ec 08             	sub    $0x8,%esp
  1024fa:	6a 0e                	push   $0xe
  1024fc:	68 d4 03 00 00       	push   $0x3d4
  102501:	e8 29 0a 00 00       	call   102f2f <port_outb>
  102506:	83 c4 10             	add    $0x10,%esp
  102509:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
  10250d:	66 c1 e8 08          	shr    $0x8,%ax
  102511:	0f b6 c0             	movzbl %al,%eax
  102514:	83 ec 08             	sub    $0x8,%esp
  102517:	50                   	push   %eax
  102518:	68 d5 03 00 00       	push   $0x3d5
  10251d:	e8 0d 0a 00 00       	call   102f2f <port_outb>
  102522:	83 c4 10             	add    $0x10,%esp
  102525:	83 ec 08             	sub    $0x8,%esp
  102528:	6a 0f                	push   $0xf
  10252a:	68 d4 03 00 00       	push   $0x3d4
  10252f:	e8 fb 09 00 00       	call   102f2f <port_outb>
  102534:	83 c4 10             	add    $0x10,%esp
  102537:	0f b7 45 f4          	movzwl -0xc(%ebp),%eax
  10253b:	0f b6 c0             	movzbl %al,%eax
  10253e:	83 ec 08             	sub    $0x8,%esp
  102541:	50                   	push   %eax
  102542:	68 d5 03 00 00       	push   $0x3d5
  102547:	e8 e3 09 00 00       	call   102f2f <port_outb>
  10254c:	83 c4 10             	add    $0x10,%esp
  10254f:	90                   	nop
  102550:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  102553:	c9                   	leave  
  102554:	c3                   	ret    

00102555 <cal_offset>:
  102555:	55                   	push   %ebp
  102556:	89 e5                	mov    %esp,%ebp
  102558:	83 ec 08             	sub    $0x8,%esp
  10255b:	e8 fc 0f 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102560:	05 08 2c 00 00       	add    $0x2c08,%eax
  102565:	8b 55 08             	mov    0x8(%ebp),%edx
  102568:	8b 45 0c             	mov    0xc(%ebp),%eax
  10256b:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
  10256f:	66 89 45 f8          	mov    %ax,-0x8(%ebp)
  102573:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
  102577:	89 d0                	mov    %edx,%eax
  102579:	c1 e0 02             	shl    $0x2,%eax
  10257c:	01 d0                	add    %edx,%eax
  10257e:	c1 e0 04             	shl    $0x4,%eax
  102581:	89 c2                	mov    %eax,%edx
  102583:	0f b7 45 f8          	movzwl -0x8(%ebp),%eax
  102587:	01 d0                	add    %edx,%eax
  102589:	01 c0                	add    %eax,%eax
  10258b:	c9                   	leave  
  10258c:	c3                   	ret    

0010258d <cal_row>:
  10258d:	55                   	push   %ebp
  10258e:	89 e5                	mov    %esp,%ebp
  102590:	83 ec 04             	sub    $0x4,%esp
  102593:	e8 c4 0f 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102598:	05 d0 2b 00 00       	add    $0x2bd0,%eax
  10259d:	8b 45 08             	mov    0x8(%ebp),%eax
  1025a0:	66 89 45 fc          	mov    %ax,-0x4(%ebp)
  1025a4:	0f b7 45 fc          	movzwl -0x4(%ebp),%eax
  1025a8:	0f b7 c0             	movzwl %ax,%eax
  1025ab:	69 c0 cd cc 00 00    	imul   $0xcccd,%eax,%eax
  1025b1:	c1 e8 10             	shr    $0x10,%eax
  1025b4:	66 c1 e8 07          	shr    $0x7,%ax
  1025b8:	c9                   	leave  
  1025b9:	c3                   	ret    

001025ba <cal_col>:
  1025ba:	55                   	push   %ebp
  1025bb:	89 e5                	mov    %esp,%ebp
  1025bd:	53                   	push   %ebx
  1025be:	83 ec 04             	sub    $0x4,%esp
  1025c1:	e8 96 0f 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1025c6:	05 a2 2b 00 00       	add    $0x2ba2,%eax
  1025cb:	8b 45 08             	mov    0x8(%ebp),%eax
  1025ce:	66 89 45 f8          	mov    %ax,-0x8(%ebp)
  1025d2:	0f b7 45 f8          	movzwl -0x8(%ebp),%eax
  1025d6:	66 d1 e8             	shr    %ax
  1025d9:	89 c3                	mov    %eax,%ebx
  1025db:	0f b7 45 f8          	movzwl -0x8(%ebp),%eax
  1025df:	50                   	push   %eax
  1025e0:	e8 a8 ff ff ff       	call   10258d <cal_row>
  1025e5:	83 c4 04             	add    $0x4,%esp
  1025e8:	89 c2                	mov    %eax,%edx
  1025ea:	89 d0                	mov    %edx,%eax
  1025ec:	c1 e0 02             	shl    $0x2,%eax
  1025ef:	01 d0                	add    %edx,%eax
  1025f1:	c1 e0 04             	shl    $0x4,%eax
  1025f4:	f7 d8                	neg    %eax
  1025f6:	01 d8                	add    %ebx,%eax
  1025f8:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1025fb:	c9                   	leave  
  1025fc:	c3                   	ret    

001025fd <init_gdt>:
  1025fd:	55                   	push   %ebp
  1025fe:	89 e5                	mov    %esp,%ebp
  102600:	83 ec 08             	sub    $0x8,%esp
  102603:	e8 54 0f 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102608:	05 60 2b 00 00       	add    $0x2b60,%eax
  10260d:	66 c7 80 00 10 20 00 	movw   $0x28,0x201000(%eax)
  102614:	28 00 
  102616:	8d 90 d8 0f 20 00    	lea    0x200fd8(%eax),%edx
  10261c:	89 90 02 10 20 00    	mov    %edx,0x201002(%eax)
  102622:	83 ec 0c             	sub    $0xc,%esp
  102625:	6a 00                	push   $0x0
  102627:	6a 00                	push   $0x0
  102629:	6a 00                	push   $0x0
  10262b:	6a 00                	push   $0x0
  10262d:	6a 00                	push   $0x0
  10262f:	e8 77 00 00 00       	call   1026ab <gdt_set_gate>
  102634:	83 c4 20             	add    $0x20,%esp
  102637:	83 ec 0c             	sub    $0xc,%esp
  10263a:	68 cf 00 00 00       	push   $0xcf
  10263f:	68 9a 00 00 00       	push   $0x9a
  102644:	6a ff                	push   $0xffffffff
  102646:	6a 00                	push   $0x0
  102648:	6a 01                	push   $0x1
  10264a:	e8 5c 00 00 00       	call   1026ab <gdt_set_gate>
  10264f:	83 c4 20             	add    $0x20,%esp
  102652:	83 ec 0c             	sub    $0xc,%esp
  102655:	68 cf 00 00 00       	push   $0xcf
  10265a:	68 92 00 00 00       	push   $0x92
  10265f:	6a ff                	push   $0xffffffff
  102661:	6a 00                	push   $0x0
  102663:	6a 02                	push   $0x2
  102665:	e8 41 00 00 00       	call   1026ab <gdt_set_gate>
  10266a:	83 c4 20             	add    $0x20,%esp
  10266d:	83 ec 0c             	sub    $0xc,%esp
  102670:	68 cf 00 00 00       	push   $0xcf
  102675:	68 fa 00 00 00       	push   $0xfa
  10267a:	6a ff                	push   $0xffffffff
  10267c:	6a 00                	push   $0x0
  10267e:	6a 03                	push   $0x3
  102680:	e8 26 00 00 00       	call   1026ab <gdt_set_gate>
  102685:	83 c4 20             	add    $0x20,%esp
  102688:	83 ec 0c             	sub    $0xc,%esp
  10268b:	68 cf 00 00 00       	push   $0xcf
  102690:	68 f2 00 00 00       	push   $0xf2
  102695:	6a ff                	push   $0xffffffff
  102697:	6a 00                	push   $0x0
  102699:	6a 04                	push   $0x4
  10269b:	e8 0b 00 00 00       	call   1026ab <gdt_set_gate>
  1026a0:	83 c4 20             	add    $0x20,%esp
  1026a3:	e8 b7 00 00 00       	call   10275f <flush_gdt>
  1026a8:	90                   	nop
  1026a9:	c9                   	leave  
  1026aa:	c3                   	ret    

001026ab <gdt_set_gate>:
  1026ab:	55                   	push   %ebp
  1026ac:	89 e5                	mov    %esp,%ebp
  1026ae:	53                   	push   %ebx
  1026af:	83 ec 0c             	sub    $0xc,%esp
  1026b2:	e8 a5 0e 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1026b7:	05 b1 2a 00 00       	add    $0x2ab1,%eax
  1026bc:	8b 5d 08             	mov    0x8(%ebp),%ebx
  1026bf:	8b 4d 14             	mov    0x14(%ebp),%ecx
  1026c2:	8b 55 18             	mov    0x18(%ebp),%edx
  1026c5:	88 5d f8             	mov    %bl,-0x8(%ebp)
  1026c8:	88 4d f4             	mov    %cl,-0xc(%ebp)
  1026cb:	88 55 f0             	mov    %dl,-0x10(%ebp)
  1026ce:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
  1026d2:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  1026d5:	66 89 8c d0 da 0f 20 	mov    %cx,0x200fda(%eax,%edx,8)
  1026dc:	00 
  1026dd:	8b 55 0c             	mov    0xc(%ebp),%edx
  1026e0:	89 d1                	mov    %edx,%ecx
  1026e2:	c1 e9 10             	shr    $0x10,%ecx
  1026e5:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
  1026e9:	88 8c d0 dc 0f 20 00 	mov    %cl,0x200fdc(%eax,%edx,8)
  1026f0:	8b 55 0c             	mov    0xc(%ebp),%edx
  1026f3:	c1 ea 18             	shr    $0x18,%edx
  1026f6:	89 d1                	mov    %edx,%ecx
  1026f8:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
  1026fc:	88 8c d0 df 0f 20 00 	mov    %cl,0x200fdf(%eax,%edx,8)
  102703:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
  102707:	8b 4d 10             	mov    0x10(%ebp),%ecx
  10270a:	66 89 8c d0 d8 0f 20 	mov    %cx,0x200fd8(%eax,%edx,8)
  102711:	00 
  102712:	8b 55 10             	mov    0x10(%ebp),%edx
  102715:	c1 ea 10             	shr    $0x10,%edx
  102718:	89 d1                	mov    %edx,%ecx
  10271a:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
  10271e:	83 e1 0f             	and    $0xf,%ecx
  102721:	88 8c d0 de 0f 20 00 	mov    %cl,0x200fde(%eax,%edx,8)
  102728:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
  10272c:	0f b6 94 d0 de 0f 20 	movzbl 0x200fde(%eax,%edx,8),%edx
  102733:	00 
  102734:	89 d1                	mov    %edx,%ecx
  102736:	0f b6 55 f0          	movzbl -0x10(%ebp),%edx
  10273a:	83 e2 f0             	and    $0xfffffff0,%edx
  10273d:	09 d1                	or     %edx,%ecx
  10273f:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
  102743:	88 8c d0 de 0f 20 00 	mov    %cl,0x200fde(%eax,%edx,8)
  10274a:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
  10274e:	0f b6 4d f4          	movzbl -0xc(%ebp),%ecx
  102752:	88 8c d0 dd 0f 20 00 	mov    %cl,0x200fdd(%eax,%edx,8)
  102759:	90                   	nop
  10275a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  10275d:	c9                   	leave  
  10275e:	c3                   	ret    

0010275f <flush_gdt>:
  10275f:	55                   	push   %ebp
  102760:	89 e5                	mov    %esp,%ebp
  102762:	e8 f5 0d 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102767:	05 01 2a 00 00       	add    $0x2a01,%eax
  10276c:	0f 01 90 00 10 20 00 	lgdtl  0x201000(%eax)
  102773:	66 b8 10 00          	mov    $0x10,%ax
  102777:	8e d8                	mov    %eax,%ds
  102779:	8e c0                	mov    %eax,%es
  10277b:	8e e0                	mov    %eax,%fs
  10277d:	8e e8                	mov    %eax,%gs
  10277f:	ea 86 27 10 00 08 00 	ljmp   $0x8,$0x102786

00102786 <next>:
  102786:	90                   	nop
  102787:	5d                   	pop    %ebp
  102788:	c3                   	ret    

00102789 <init_idt>:
  102789:	55                   	push   %ebp
  10278a:	89 e5                	mov    %esp,%ebp
  10278c:	53                   	push   %ebx
  10278d:	83 ec 04             	sub    $0x4,%esp
  102790:	e8 cb 0d 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  102795:	81 c3 d3 29 00 00    	add    $0x29d3,%ebx
  10279b:	66 c7 83 18 18 20 00 	movw   $0x7ff,0x201818(%ebx)
  1027a2:	ff 07 
  1027a4:	8d 83 18 10 20 00    	lea    0x201018(%ebx),%eax
  1027aa:	89 83 1a 18 20 00    	mov    %eax,0x20181a(%ebx)
  1027b0:	83 ec 04             	sub    $0x4,%esp
  1027b3:	68 00 08 00 00       	push   $0x800
  1027b8:	6a 00                	push   $0x0
  1027ba:	8d 83 18 10 20 00    	lea    0x201018(%ebx),%eax
  1027c0:	50                   	push   %eax
  1027c1:	e8 ce 08 00 00       	call   103094 <memset>
  1027c6:	83 c4 10             	add    $0x10,%esp
  1027c9:	c7 c0 6a 00 10 00    	mov    $0x10006a,%eax
  1027cf:	68 8e 00 00 00       	push   $0x8e
  1027d4:	6a 08                	push   $0x8
  1027d6:	50                   	push   %eax
  1027d7:	6a 00                	push   $0x0
  1027d9:	e8 32 05 00 00       	call   102d10 <idt_set_gate>
  1027de:	83 c4 10             	add    $0x10,%esp
  1027e1:	c7 c0 71 00 10 00    	mov    $0x100071,%eax
  1027e7:	68 8e 00 00 00       	push   $0x8e
  1027ec:	6a 08                	push   $0x8
  1027ee:	50                   	push   %eax
  1027ef:	6a 01                	push   $0x1
  1027f1:	e8 1a 05 00 00       	call   102d10 <idt_set_gate>
  1027f6:	83 c4 10             	add    $0x10,%esp
  1027f9:	c7 c0 78 00 10 00    	mov    $0x100078,%eax
  1027ff:	68 8e 00 00 00       	push   $0x8e
  102804:	6a 08                	push   $0x8
  102806:	50                   	push   %eax
  102807:	6a 02                	push   $0x2
  102809:	e8 02 05 00 00       	call   102d10 <idt_set_gate>
  10280e:	83 c4 10             	add    $0x10,%esp
  102811:	c7 c0 7f 00 10 00    	mov    $0x10007f,%eax
  102817:	68 8e 00 00 00       	push   $0x8e
  10281c:	6a 08                	push   $0x8
  10281e:	50                   	push   %eax
  10281f:	6a 03                	push   $0x3
  102821:	e8 ea 04 00 00       	call   102d10 <idt_set_gate>
  102826:	83 c4 10             	add    $0x10,%esp
  102829:	c7 c0 86 00 10 00    	mov    $0x100086,%eax
  10282f:	68 8e 00 00 00       	push   $0x8e
  102834:	6a 08                	push   $0x8
  102836:	50                   	push   %eax
  102837:	6a 04                	push   $0x4
  102839:	e8 d2 04 00 00       	call   102d10 <idt_set_gate>
  10283e:	83 c4 10             	add    $0x10,%esp
  102841:	c7 c0 8d 00 10 00    	mov    $0x10008d,%eax
  102847:	68 8e 00 00 00       	push   $0x8e
  10284c:	6a 08                	push   $0x8
  10284e:	50                   	push   %eax
  10284f:	6a 05                	push   $0x5
  102851:	e8 ba 04 00 00       	call   102d10 <idt_set_gate>
  102856:	83 c4 10             	add    $0x10,%esp
  102859:	c7 c0 94 00 10 00    	mov    $0x100094,%eax
  10285f:	68 8e 00 00 00       	push   $0x8e
  102864:	6a 08                	push   $0x8
  102866:	50                   	push   %eax
  102867:	6a 06                	push   $0x6
  102869:	e8 a2 04 00 00       	call   102d10 <idt_set_gate>
  10286e:	83 c4 10             	add    $0x10,%esp
  102871:	c7 c0 9b 00 10 00    	mov    $0x10009b,%eax
  102877:	68 8e 00 00 00       	push   $0x8e
  10287c:	6a 08                	push   $0x8
  10287e:	50                   	push   %eax
  10287f:	6a 07                	push   $0x7
  102881:	e8 8a 04 00 00       	call   102d10 <idt_set_gate>
  102886:	83 c4 10             	add    $0x10,%esp
  102889:	c7 c0 a5 00 10 00    	mov    $0x1000a5,%eax
  10288f:	68 8e 00 00 00       	push   $0x8e
  102894:	6a 08                	push   $0x8
  102896:	50                   	push   %eax
  102897:	6a 08                	push   $0x8
  102899:	e8 72 04 00 00       	call   102d10 <idt_set_gate>
  10289e:	83 c4 10             	add    $0x10,%esp
  1028a1:	c7 c0 ad 00 10 00    	mov    $0x1000ad,%eax
  1028a7:	68 8e 00 00 00       	push   $0x8e
  1028ac:	6a 08                	push   $0x8
  1028ae:	50                   	push   %eax
  1028af:	6a 09                	push   $0x9
  1028b1:	e8 5a 04 00 00       	call   102d10 <idt_set_gate>
  1028b6:	83 c4 10             	add    $0x10,%esp
  1028b9:	c7 c0 b7 00 10 00    	mov    $0x1000b7,%eax
  1028bf:	68 8e 00 00 00       	push   $0x8e
  1028c4:	6a 08                	push   $0x8
  1028c6:	50                   	push   %eax
  1028c7:	6a 0a                	push   $0xa
  1028c9:	e8 42 04 00 00       	call   102d10 <idt_set_gate>
  1028ce:	83 c4 10             	add    $0x10,%esp
  1028d1:	c7 c0 bf 00 10 00    	mov    $0x1000bf,%eax
  1028d7:	68 8e 00 00 00       	push   $0x8e
  1028dc:	6a 08                	push   $0x8
  1028de:	50                   	push   %eax
  1028df:	6a 0b                	push   $0xb
  1028e1:	e8 2a 04 00 00       	call   102d10 <idt_set_gate>
  1028e6:	83 c4 10             	add    $0x10,%esp
  1028e9:	c7 c0 c7 00 10 00    	mov    $0x1000c7,%eax
  1028ef:	68 8e 00 00 00       	push   $0x8e
  1028f4:	6a 08                	push   $0x8
  1028f6:	50                   	push   %eax
  1028f7:	6a 0c                	push   $0xc
  1028f9:	e8 12 04 00 00       	call   102d10 <idt_set_gate>
  1028fe:	83 c4 10             	add    $0x10,%esp
  102901:	c7 c0 cf 00 10 00    	mov    $0x1000cf,%eax
  102907:	68 8e 00 00 00       	push   $0x8e
  10290c:	6a 08                	push   $0x8
  10290e:	50                   	push   %eax
  10290f:	6a 0d                	push   $0xd
  102911:	e8 fa 03 00 00       	call   102d10 <idt_set_gate>
  102916:	83 c4 10             	add    $0x10,%esp
  102919:	c7 c0 d7 00 10 00    	mov    $0x1000d7,%eax
  10291f:	68 8e 00 00 00       	push   $0x8e
  102924:	6a 08                	push   $0x8
  102926:	50                   	push   %eax
  102927:	6a 0e                	push   $0xe
  102929:	e8 e2 03 00 00       	call   102d10 <idt_set_gate>
  10292e:	83 c4 10             	add    $0x10,%esp
  102931:	c7 c0 df 00 10 00    	mov    $0x1000df,%eax
  102937:	68 8e 00 00 00       	push   $0x8e
  10293c:	6a 08                	push   $0x8
  10293e:	50                   	push   %eax
  10293f:	6a 0f                	push   $0xf
  102941:	e8 ca 03 00 00       	call   102d10 <idt_set_gate>
  102946:	83 c4 10             	add    $0x10,%esp
  102949:	c7 c0 e9 00 10 00    	mov    $0x1000e9,%eax
  10294f:	68 8e 00 00 00       	push   $0x8e
  102954:	6a 08                	push   $0x8
  102956:	50                   	push   %eax
  102957:	6a 10                	push   $0x10
  102959:	e8 b2 03 00 00       	call   102d10 <idt_set_gate>
  10295e:	83 c4 10             	add    $0x10,%esp
  102961:	c7 c0 f3 00 10 00    	mov    $0x1000f3,%eax
  102967:	68 8e 00 00 00       	push   $0x8e
  10296c:	6a 08                	push   $0x8
  10296e:	50                   	push   %eax
  10296f:	6a 11                	push   $0x11
  102971:	e8 9a 03 00 00       	call   102d10 <idt_set_gate>
  102976:	83 c4 10             	add    $0x10,%esp
  102979:	c7 c0 fd 00 10 00    	mov    $0x1000fd,%eax
  10297f:	68 8e 00 00 00       	push   $0x8e
  102984:	6a 08                	push   $0x8
  102986:	50                   	push   %eax
  102987:	6a 12                	push   $0x12
  102989:	e8 82 03 00 00       	call   102d10 <idt_set_gate>
  10298e:	83 c4 10             	add    $0x10,%esp
  102991:	c7 c0 07 01 10 00    	mov    $0x100107,%eax
  102997:	68 8e 00 00 00       	push   $0x8e
  10299c:	6a 08                	push   $0x8
  10299e:	50                   	push   %eax
  10299f:	6a 13                	push   $0x13
  1029a1:	e8 6a 03 00 00       	call   102d10 <idt_set_gate>
  1029a6:	83 c4 10             	add    $0x10,%esp
  1029a9:	c7 c0 11 01 10 00    	mov    $0x100111,%eax
  1029af:	68 8e 00 00 00       	push   $0x8e
  1029b4:	6a 08                	push   $0x8
  1029b6:	50                   	push   %eax
  1029b7:	6a 14                	push   $0x14
  1029b9:	e8 52 03 00 00       	call   102d10 <idt_set_gate>
  1029be:	83 c4 10             	add    $0x10,%esp
  1029c1:	c7 c0 1b 01 10 00    	mov    $0x10011b,%eax
  1029c7:	68 8e 00 00 00       	push   $0x8e
  1029cc:	6a 08                	push   $0x8
  1029ce:	50                   	push   %eax
  1029cf:	6a 15                	push   $0x15
  1029d1:	e8 3a 03 00 00       	call   102d10 <idt_set_gate>
  1029d6:	83 c4 10             	add    $0x10,%esp
  1029d9:	c7 c0 25 01 10 00    	mov    $0x100125,%eax
  1029df:	68 8e 00 00 00       	push   $0x8e
  1029e4:	6a 08                	push   $0x8
  1029e6:	50                   	push   %eax
  1029e7:	6a 16                	push   $0x16
  1029e9:	e8 22 03 00 00       	call   102d10 <idt_set_gate>
  1029ee:	83 c4 10             	add    $0x10,%esp
  1029f1:	c7 c0 2f 01 10 00    	mov    $0x10012f,%eax
  1029f7:	68 8e 00 00 00       	push   $0x8e
  1029fc:	6a 08                	push   $0x8
  1029fe:	50                   	push   %eax
  1029ff:	6a 17                	push   $0x17
  102a01:	e8 0a 03 00 00       	call   102d10 <idt_set_gate>
  102a06:	83 c4 10             	add    $0x10,%esp
  102a09:	c7 c0 39 01 10 00    	mov    $0x100139,%eax
  102a0f:	68 8e 00 00 00       	push   $0x8e
  102a14:	6a 08                	push   $0x8
  102a16:	50                   	push   %eax
  102a17:	6a 18                	push   $0x18
  102a19:	e8 f2 02 00 00       	call   102d10 <idt_set_gate>
  102a1e:	83 c4 10             	add    $0x10,%esp
  102a21:	c7 c0 43 01 10 00    	mov    $0x100143,%eax
  102a27:	68 8e 00 00 00       	push   $0x8e
  102a2c:	6a 08                	push   $0x8
  102a2e:	50                   	push   %eax
  102a2f:	6a 19                	push   $0x19
  102a31:	e8 da 02 00 00       	call   102d10 <idt_set_gate>
  102a36:	83 c4 10             	add    $0x10,%esp
  102a39:	c7 c0 4d 01 10 00    	mov    $0x10014d,%eax
  102a3f:	68 8e 00 00 00       	push   $0x8e
  102a44:	6a 08                	push   $0x8
  102a46:	50                   	push   %eax
  102a47:	6a 1a                	push   $0x1a
  102a49:	e8 c2 02 00 00       	call   102d10 <idt_set_gate>
  102a4e:	83 c4 10             	add    $0x10,%esp
  102a51:	c7 c0 57 01 10 00    	mov    $0x100157,%eax
  102a57:	68 8e 00 00 00       	push   $0x8e
  102a5c:	6a 08                	push   $0x8
  102a5e:	50                   	push   %eax
  102a5f:	6a 1b                	push   $0x1b
  102a61:	e8 aa 02 00 00       	call   102d10 <idt_set_gate>
  102a66:	83 c4 10             	add    $0x10,%esp
  102a69:	c7 c0 61 01 10 00    	mov    $0x100161,%eax
  102a6f:	68 8e 00 00 00       	push   $0x8e
  102a74:	6a 08                	push   $0x8
  102a76:	50                   	push   %eax
  102a77:	6a 1c                	push   $0x1c
  102a79:	e8 92 02 00 00       	call   102d10 <idt_set_gate>
  102a7e:	83 c4 10             	add    $0x10,%esp
  102a81:	c7 c0 6b 01 10 00    	mov    $0x10016b,%eax
  102a87:	68 8e 00 00 00       	push   $0x8e
  102a8c:	6a 08                	push   $0x8
  102a8e:	50                   	push   %eax
  102a8f:	6a 1d                	push   $0x1d
  102a91:	e8 7a 02 00 00       	call   102d10 <idt_set_gate>
  102a96:	83 c4 10             	add    $0x10,%esp
  102a99:	c7 c0 75 01 10 00    	mov    $0x100175,%eax
  102a9f:	68 8e 00 00 00       	push   $0x8e
  102aa4:	6a 08                	push   $0x8
  102aa6:	50                   	push   %eax
  102aa7:	6a 1e                	push   $0x1e
  102aa9:	e8 62 02 00 00       	call   102d10 <idt_set_gate>
  102aae:	83 c4 10             	add    $0x10,%esp
  102ab1:	c7 c0 75 01 10 00    	mov    $0x100175,%eax
  102ab7:	68 8e 00 00 00       	push   $0x8e
  102abc:	6a 08                	push   $0x8
  102abe:	50                   	push   %eax
  102abf:	6a 1f                	push   $0x1f
  102ac1:	e8 4a 02 00 00       	call   102d10 <idt_set_gate>
  102ac6:	83 c4 10             	add    $0x10,%esp
  102ac9:	83 ec 08             	sub    $0x8,%esp
  102acc:	6a 11                	push   $0x11
  102ace:	6a 20                	push   $0x20
  102ad0:	e8 5a 04 00 00       	call   102f2f <port_outb>
  102ad5:	83 c4 10             	add    $0x10,%esp
  102ad8:	83 ec 08             	sub    $0x8,%esp
  102adb:	6a 11                	push   $0x11
  102add:	68 a0 00 00 00       	push   $0xa0
  102ae2:	e8 48 04 00 00       	call   102f2f <port_outb>
  102ae7:	83 c4 10             	add    $0x10,%esp
  102aea:	83 ec 08             	sub    $0x8,%esp
  102aed:	6a 20                	push   $0x20
  102aef:	6a 21                	push   $0x21
  102af1:	e8 39 04 00 00       	call   102f2f <port_outb>
  102af6:	83 c4 10             	add    $0x10,%esp
  102af9:	83 ec 08             	sub    $0x8,%esp
  102afc:	6a 28                	push   $0x28
  102afe:	68 a1 00 00 00       	push   $0xa1
  102b03:	e8 27 04 00 00       	call   102f2f <port_outb>
  102b08:	83 c4 10             	add    $0x10,%esp
  102b0b:	83 ec 08             	sub    $0x8,%esp
  102b0e:	6a 04                	push   $0x4
  102b10:	6a 21                	push   $0x21
  102b12:	e8 18 04 00 00       	call   102f2f <port_outb>
  102b17:	83 c4 10             	add    $0x10,%esp
  102b1a:	83 ec 08             	sub    $0x8,%esp
  102b1d:	6a 02                	push   $0x2
  102b1f:	68 a1 00 00 00       	push   $0xa1
  102b24:	e8 06 04 00 00       	call   102f2f <port_outb>
  102b29:	83 c4 10             	add    $0x10,%esp
  102b2c:	83 ec 08             	sub    $0x8,%esp
  102b2f:	6a 01                	push   $0x1
  102b31:	6a 21                	push   $0x21
  102b33:	e8 f7 03 00 00       	call   102f2f <port_outb>
  102b38:	83 c4 10             	add    $0x10,%esp
  102b3b:	83 ec 08             	sub    $0x8,%esp
  102b3e:	6a 01                	push   $0x1
  102b40:	68 a1 00 00 00       	push   $0xa1
  102b45:	e8 e5 03 00 00       	call   102f2f <port_outb>
  102b4a:	83 c4 10             	add    $0x10,%esp
  102b4d:	83 ec 08             	sub    $0x8,%esp
  102b50:	6a 00                	push   $0x0
  102b52:	6a 21                	push   $0x21
  102b54:	e8 d6 03 00 00       	call   102f2f <port_outb>
  102b59:	83 c4 10             	add    $0x10,%esp
  102b5c:	83 ec 08             	sub    $0x8,%esp
  102b5f:	6a 00                	push   $0x0
  102b61:	68 a1 00 00 00       	push   $0xa1
  102b66:	e8 c4 03 00 00       	call   102f2f <port_outb>
  102b6b:	83 c4 10             	add    $0x10,%esp
  102b6e:	c7 c0 89 01 10 00    	mov    $0x100189,%eax
  102b74:	68 8e 00 00 00       	push   $0x8e
  102b79:	6a 08                	push   $0x8
  102b7b:	50                   	push   %eax
  102b7c:	6a 20                	push   $0x20
  102b7e:	e8 8d 01 00 00       	call   102d10 <idt_set_gate>
  102b83:	83 c4 10             	add    $0x10,%esp
  102b86:	c7 c0 93 01 10 00    	mov    $0x100193,%eax
  102b8c:	68 8e 00 00 00       	push   $0x8e
  102b91:	6a 08                	push   $0x8
  102b93:	50                   	push   %eax
  102b94:	6a 21                	push   $0x21
  102b96:	e8 75 01 00 00       	call   102d10 <idt_set_gate>
  102b9b:	83 c4 10             	add    $0x10,%esp
  102b9e:	c7 c0 9d 01 10 00    	mov    $0x10019d,%eax
  102ba4:	68 8e 00 00 00       	push   $0x8e
  102ba9:	6a 08                	push   $0x8
  102bab:	50                   	push   %eax
  102bac:	6a 22                	push   $0x22
  102bae:	e8 5d 01 00 00       	call   102d10 <idt_set_gate>
  102bb3:	83 c4 10             	add    $0x10,%esp
  102bb6:	c7 c0 a7 01 10 00    	mov    $0x1001a7,%eax
  102bbc:	68 8e 00 00 00       	push   $0x8e
  102bc1:	6a 08                	push   $0x8
  102bc3:	50                   	push   %eax
  102bc4:	6a 23                	push   $0x23
  102bc6:	e8 45 01 00 00       	call   102d10 <idt_set_gate>
  102bcb:	83 c4 10             	add    $0x10,%esp
  102bce:	c7 c0 b1 01 10 00    	mov    $0x1001b1,%eax
  102bd4:	68 8e 00 00 00       	push   $0x8e
  102bd9:	6a 08                	push   $0x8
  102bdb:	50                   	push   %eax
  102bdc:	6a 24                	push   $0x24
  102bde:	e8 2d 01 00 00       	call   102d10 <idt_set_gate>
  102be3:	83 c4 10             	add    $0x10,%esp
  102be6:	c7 c0 bb 01 10 00    	mov    $0x1001bb,%eax
  102bec:	68 8e 00 00 00       	push   $0x8e
  102bf1:	6a 08                	push   $0x8
  102bf3:	50                   	push   %eax
  102bf4:	6a 25                	push   $0x25
  102bf6:	e8 15 01 00 00       	call   102d10 <idt_set_gate>
  102bfb:	83 c4 10             	add    $0x10,%esp
  102bfe:	c7 c0 c5 01 10 00    	mov    $0x1001c5,%eax
  102c04:	68 8e 00 00 00       	push   $0x8e
  102c09:	6a 08                	push   $0x8
  102c0b:	50                   	push   %eax
  102c0c:	6a 26                	push   $0x26
  102c0e:	e8 fd 00 00 00       	call   102d10 <idt_set_gate>
  102c13:	83 c4 10             	add    $0x10,%esp
  102c16:	c7 c0 cf 01 10 00    	mov    $0x1001cf,%eax
  102c1c:	68 8e 00 00 00       	push   $0x8e
  102c21:	6a 08                	push   $0x8
  102c23:	50                   	push   %eax
  102c24:	6a 27                	push   $0x27
  102c26:	e8 e5 00 00 00       	call   102d10 <idt_set_gate>
  102c2b:	83 c4 10             	add    $0x10,%esp
  102c2e:	c7 c0 d9 01 10 00    	mov    $0x1001d9,%eax
  102c34:	68 8e 00 00 00       	push   $0x8e
  102c39:	6a 08                	push   $0x8
  102c3b:	50                   	push   %eax
  102c3c:	6a 28                	push   $0x28
  102c3e:	e8 cd 00 00 00       	call   102d10 <idt_set_gate>
  102c43:	83 c4 10             	add    $0x10,%esp
  102c46:	c7 c0 e3 01 10 00    	mov    $0x1001e3,%eax
  102c4c:	68 8e 00 00 00       	push   $0x8e
  102c51:	6a 08                	push   $0x8
  102c53:	50                   	push   %eax
  102c54:	6a 29                	push   $0x29
  102c56:	e8 b5 00 00 00       	call   102d10 <idt_set_gate>
  102c5b:	83 c4 10             	add    $0x10,%esp
  102c5e:	c7 c0 ed 01 10 00    	mov    $0x1001ed,%eax
  102c64:	68 8e 00 00 00       	push   $0x8e
  102c69:	6a 08                	push   $0x8
  102c6b:	50                   	push   %eax
  102c6c:	6a 2a                	push   $0x2a
  102c6e:	e8 9d 00 00 00       	call   102d10 <idt_set_gate>
  102c73:	83 c4 10             	add    $0x10,%esp
  102c76:	c7 c0 f7 01 10 00    	mov    $0x1001f7,%eax
  102c7c:	68 8e 00 00 00       	push   $0x8e
  102c81:	6a 08                	push   $0x8
  102c83:	50                   	push   %eax
  102c84:	6a 2b                	push   $0x2b
  102c86:	e8 85 00 00 00       	call   102d10 <idt_set_gate>
  102c8b:	83 c4 10             	add    $0x10,%esp
  102c8e:	c7 c0 01 02 10 00    	mov    $0x100201,%eax
  102c94:	68 8e 00 00 00       	push   $0x8e
  102c99:	6a 08                	push   $0x8
  102c9b:	50                   	push   %eax
  102c9c:	6a 2c                	push   $0x2c
  102c9e:	e8 6d 00 00 00       	call   102d10 <idt_set_gate>
  102ca3:	83 c4 10             	add    $0x10,%esp
  102ca6:	c7 c0 0b 02 10 00    	mov    $0x10020b,%eax
  102cac:	68 8e 00 00 00       	push   $0x8e
  102cb1:	6a 08                	push   $0x8
  102cb3:	50                   	push   %eax
  102cb4:	6a 2d                	push   $0x2d
  102cb6:	e8 55 00 00 00       	call   102d10 <idt_set_gate>
  102cbb:	83 c4 10             	add    $0x10,%esp
  102cbe:	c7 c0 15 02 10 00    	mov    $0x100215,%eax
  102cc4:	68 8e 00 00 00       	push   $0x8e
  102cc9:	6a 08                	push   $0x8
  102ccb:	50                   	push   %eax
  102ccc:	6a 2e                	push   $0x2e
  102cce:	e8 3d 00 00 00       	call   102d10 <idt_set_gate>
  102cd3:	83 c4 10             	add    $0x10,%esp
  102cd6:	c7 c0 1f 02 10 00    	mov    $0x10021f,%eax
  102cdc:	68 8e 00 00 00       	push   $0x8e
  102ce1:	6a 08                	push   $0x8
  102ce3:	50                   	push   %eax
  102ce4:	6a 2f                	push   $0x2f
  102ce6:	e8 25 00 00 00       	call   102d10 <idt_set_gate>
  102ceb:	83 c4 10             	add    $0x10,%esp
  102cee:	e8 06 00 00 00       	call   102cf9 <flush_idt>
  102cf3:	90                   	nop
  102cf4:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  102cf7:	c9                   	leave  
  102cf8:	c3                   	ret    

00102cf9 <flush_idt>:
  102cf9:	55                   	push   %ebp
  102cfa:	89 e5                	mov    %esp,%ebp
  102cfc:	e8 5b 08 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102d01:	05 67 24 00 00       	add    $0x2467,%eax
  102d06:	0f 01 98 18 18 20 00 	lidtl  0x201818(%eax)
  102d0d:	90                   	nop
  102d0e:	5d                   	pop    %ebp
  102d0f:	c3                   	ret    

00102d10 <idt_set_gate>:
  102d10:	55                   	push   %ebp
  102d11:	89 e5                	mov    %esp,%ebp
  102d13:	53                   	push   %ebx
  102d14:	83 ec 0c             	sub    $0xc,%esp
  102d17:	e8 40 08 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102d1c:	05 4c 24 00 00       	add    $0x244c,%eax
  102d21:	8b 5d 08             	mov    0x8(%ebp),%ebx
  102d24:	8b 55 10             	mov    0x10(%ebp),%edx
  102d27:	8b 4d 14             	mov    0x14(%ebp),%ecx
  102d2a:	88 5d f8             	mov    %bl,-0x8(%ebp)
  102d2d:	66 89 55 f4          	mov    %dx,-0xc(%ebp)
  102d31:	89 ca                	mov    %ecx,%edx
  102d33:	88 55 f0             	mov    %dl,-0x10(%ebp)
  102d36:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
  102d3a:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  102d3d:	66 89 8c d0 18 10 20 	mov    %cx,0x201018(%eax,%edx,8)
  102d44:	00 
  102d45:	8b 55 0c             	mov    0xc(%ebp),%edx
  102d48:	89 d1                	mov    %edx,%ecx
  102d4a:	c1 e9 10             	shr    $0x10,%ecx
  102d4d:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
  102d51:	66 89 8c d0 1e 10 20 	mov    %cx,0x20101e(%eax,%edx,8)
  102d58:	00 
  102d59:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
  102d5d:	0f b7 4d f4          	movzwl -0xc(%ebp),%ecx
  102d61:	66 89 8c d0 1a 10 20 	mov    %cx,0x20101a(%eax,%edx,8)
  102d68:	00 
  102d69:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
  102d6d:	c6 84 d0 1c 10 20 00 	movb   $0x0,0x20101c(%eax,%edx,8)
  102d74:	00 
  102d75:	0f b6 55 f8          	movzbl -0x8(%ebp),%edx
  102d79:	0f b6 4d f0          	movzbl -0x10(%ebp),%ecx
  102d7d:	88 8c d0 1d 10 20 00 	mov    %cl,0x20101d(%eax,%edx,8)
  102d84:	90                   	nop
  102d85:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  102d88:	c9                   	leave  
  102d89:	c3                   	ret    

00102d8a <isr_handler>:
  102d8a:	55                   	push   %ebp
  102d8b:	89 e5                	mov    %esp,%ebp
  102d8d:	53                   	push   %ebx
  102d8e:	83 ec 14             	sub    $0x14,%esp
  102d91:	e8 ca 07 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  102d96:	81 c3 d2 23 00 00    	add    $0x23d2,%ebx
  102d9c:	83 ec 0c             	sub    $0xc,%esp
  102d9f:	8d 83 9f f4 ff ff    	lea    -0xb61(%ebx),%eax
  102da5:	50                   	push   %eax
  102da6:	e8 a6 f4 ff ff       	call   102251 <printk>
  102dab:	83 c4 10             	add    $0x10,%esp
  102dae:	8b 45 2c             	mov    0x2c(%ebp),%eax
  102db1:	89 c2                	mov    %eax,%edx
  102db3:	83 ec 08             	sub    $0x8,%esp
  102db6:	8d 45 f5             	lea    -0xb(%ebp),%eax
  102db9:	50                   	push   %eax
  102dba:	52                   	push   %edx
  102dbb:	e8 0f 03 00 00       	call   1030cf <int_to_ascii>
  102dc0:	83 c4 10             	add    $0x10,%esp
  102dc3:	83 ec 0c             	sub    $0xc,%esp
  102dc6:	8d 45 f5             	lea    -0xb(%ebp),%eax
  102dc9:	50                   	push   %eax
  102dca:	e8 82 f4 ff ff       	call   102251 <printk>
  102dcf:	83 c4 10             	add    $0x10,%esp
  102dd2:	83 ec 0c             	sub    $0xc,%esp
  102dd5:	8d 83 b4 f4 ff ff    	lea    -0xb4c(%ebx),%eax
  102ddb:	50                   	push   %eax
  102ddc:	e8 70 f4 ff ff       	call   102251 <printk>
  102de1:	83 c4 10             	add    $0x10,%esp
  102de4:	8b 45 2c             	mov    0x2c(%ebp),%eax
  102de7:	8b 84 83 38 00 00 00 	mov    0x38(%ebx,%eax,4),%eax
  102dee:	83 ec 0c             	sub    $0xc,%esp
  102df1:	50                   	push   %eax
  102df2:	e8 5a f4 ff ff       	call   102251 <printk>
  102df7:	83 c4 10             	add    $0x10,%esp
  102dfa:	83 ec 0c             	sub    $0xc,%esp
  102dfd:	8d 83 b4 f4 ff ff    	lea    -0xb4c(%ebx),%eax
  102e03:	50                   	push   %eax
  102e04:	e8 48 f4 ff ff       	call   102251 <printk>
  102e09:	83 c4 10             	add    $0x10,%esp
  102e0c:	eb fe                	jmp    102e0c <isr_handler+0x82>

00102e0e <register_interrupt_handler>:
  102e0e:	55                   	push   %ebp
  102e0f:	89 e5                	mov    %esp,%ebp
  102e11:	83 ec 04             	sub    $0x4,%esp
  102e14:	e8 43 07 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102e19:	05 4f 23 00 00       	add    $0x234f,%eax
  102e1e:	8b 55 08             	mov    0x8(%ebp),%edx
  102e21:	88 55 fc             	mov    %dl,-0x4(%ebp)
  102e24:	0f b6 55 fc          	movzbl -0x4(%ebp),%edx
  102e28:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  102e2b:	89 8c 90 38 18 20 00 	mov    %ecx,0x201838(%eax,%edx,4)
  102e32:	90                   	nop
  102e33:	c9                   	leave  
  102e34:	c3                   	ret    

00102e35 <irq_ack>:
  102e35:	55                   	push   %ebp
  102e36:	89 e5                	mov    %esp,%ebp
  102e38:	53                   	push   %ebx
  102e39:	83 ec 14             	sub    $0x14,%esp
  102e3c:	e8 1f 07 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  102e41:	81 c3 27 23 00 00    	add    $0x2327,%ebx
  102e47:	8b 45 08             	mov    0x8(%ebp),%eax
  102e4a:	88 45 f4             	mov    %al,-0xc(%ebp)
  102e4d:	80 7d f4 27          	cmpb   $0x27,-0xc(%ebp)
  102e51:	76 12                	jbe    102e65 <irq_ack+0x30>
  102e53:	83 ec 08             	sub    $0x8,%esp
  102e56:	6a 20                	push   $0x20
  102e58:	68 a0 00 00 00       	push   $0xa0
  102e5d:	e8 cd 00 00 00       	call   102f2f <port_outb>
  102e62:	83 c4 10             	add    $0x10,%esp
  102e65:	83 ec 08             	sub    $0x8,%esp
  102e68:	6a 20                	push   $0x20
  102e6a:	6a 20                	push   $0x20
  102e6c:	e8 be 00 00 00       	call   102f2f <port_outb>
  102e71:	83 c4 10             	add    $0x10,%esp
  102e74:	90                   	nop
  102e75:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  102e78:	c9                   	leave  
  102e79:	c3                   	ret    

00102e7a <irq_handler>:
  102e7a:	55                   	push   %ebp
  102e7b:	89 e5                	mov    %esp,%ebp
  102e7d:	53                   	push   %ebx
  102e7e:	83 ec 14             	sub    $0x14,%esp
  102e81:	e8 da 06 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  102e86:	81 c3 e2 22 00 00    	add    $0x22e2,%ebx
  102e8c:	8b 45 2c             	mov    0x2c(%ebp),%eax
  102e8f:	0f b6 c0             	movzbl %al,%eax
  102e92:	83 ec 0c             	sub    $0xc,%esp
  102e95:	50                   	push   %eax
  102e96:	e8 9a ff ff ff       	call   102e35 <irq_ack>
  102e9b:	83 c4 10             	add    $0x10,%esp
  102e9e:	8b 45 2c             	mov    0x2c(%ebp),%eax
  102ea1:	8b 84 83 38 18 20 00 	mov    0x201838(%ebx,%eax,4),%eax
  102ea8:	85 c0                	test   %eax,%eax
  102eaa:	74 56                	je     102f02 <irq_handler+0x88>
  102eac:	8b 45 2c             	mov    0x2c(%ebp),%eax
  102eaf:	8b 84 83 38 18 20 00 	mov    0x201838(%ebx,%eax,4),%eax
  102eb6:	89 45 f4             	mov    %eax,-0xc(%ebp)
  102eb9:	8b 45 2c             	mov    0x2c(%ebp),%eax
  102ebc:	83 f8 20             	cmp    $0x20,%eax
  102ebf:	76 09                	jbe    102eca <irq_handler+0x50>
  102ec1:	8b 45 2c             	mov    0x2c(%ebp),%eax
  102ec4:	83 e8 20             	sub    $0x20,%eax
  102ec7:	89 45 2c             	mov    %eax,0x2c(%ebp)
  102eca:	ff 75 44             	push   0x44(%ebp)
  102ecd:	ff 75 40             	push   0x40(%ebp)
  102ed0:	ff 75 3c             	push   0x3c(%ebp)
  102ed3:	ff 75 38             	push   0x38(%ebp)
  102ed6:	ff 75 34             	push   0x34(%ebp)
  102ed9:	ff 75 30             	push   0x30(%ebp)
  102edc:	ff 75 2c             	push   0x2c(%ebp)
  102edf:	ff 75 28             	push   0x28(%ebp)
  102ee2:	ff 75 24             	push   0x24(%ebp)
  102ee5:	ff 75 20             	push   0x20(%ebp)
  102ee8:	ff 75 1c             	push   0x1c(%ebp)
  102eeb:	ff 75 18             	push   0x18(%ebp)
  102eee:	ff 75 14             	push   0x14(%ebp)
  102ef1:	ff 75 10             	push   0x10(%ebp)
  102ef4:	ff 75 0c             	push   0xc(%ebp)
  102ef7:	ff 75 08             	push   0x8(%ebp)
  102efa:	8b 45 f4             	mov    -0xc(%ebp),%eax
  102efd:	ff d0                	call   *%eax
  102eff:	83 c4 40             	add    $0x40,%esp
  102f02:	90                   	nop
  102f03:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  102f06:	c9                   	leave  
  102f07:	c3                   	ret    

00102f08 <port_inb>:
  102f08:	55                   	push   %ebp
  102f09:	89 e5                	mov    %esp,%ebp
  102f0b:	83 ec 14             	sub    $0x14,%esp
  102f0e:	e8 49 06 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102f13:	05 55 22 00 00       	add    $0x2255,%eax
  102f18:	8b 45 08             	mov    0x8(%ebp),%eax
  102f1b:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
  102f1f:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
  102f23:	89 c2                	mov    %eax,%edx
  102f25:	ec                   	in     (%dx),%al
  102f26:	88 45 ff             	mov    %al,-0x1(%ebp)
  102f29:	0f b6 45 ff          	movzbl -0x1(%ebp),%eax
  102f2d:	c9                   	leave  
  102f2e:	c3                   	ret    

00102f2f <port_outb>:
  102f2f:	55                   	push   %ebp
  102f30:	89 e5                	mov    %esp,%ebp
  102f32:	83 ec 08             	sub    $0x8,%esp
  102f35:	e8 22 06 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102f3a:	05 2e 22 00 00       	add    $0x222e,%eax
  102f3f:	8b 45 08             	mov    0x8(%ebp),%eax
  102f42:	8b 55 0c             	mov    0xc(%ebp),%edx
  102f45:	66 89 45 fc          	mov    %ax,-0x4(%ebp)
  102f49:	89 d0                	mov    %edx,%eax
  102f4b:	88 45 f8             	mov    %al,-0x8(%ebp)
  102f4e:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
  102f52:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
  102f56:	ee                   	out    %al,(%dx)
  102f57:	90                   	nop
  102f58:	c9                   	leave  
  102f59:	c3                   	ret    

00102f5a <port_inw>:
  102f5a:	55                   	push   %ebp
  102f5b:	89 e5                	mov    %esp,%ebp
  102f5d:	83 ec 14             	sub    $0x14,%esp
  102f60:	e8 f7 05 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102f65:	05 03 22 00 00       	add    $0x2203,%eax
  102f6a:	8b 45 08             	mov    0x8(%ebp),%eax
  102f6d:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
  102f71:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
  102f75:	89 c2                	mov    %eax,%edx
  102f77:	66 ed                	in     (%dx),%ax
  102f79:	66 89 45 fe          	mov    %ax,-0x2(%ebp)
  102f7d:	0f b7 45 fe          	movzwl -0x2(%ebp),%eax
  102f81:	c9                   	leave  
  102f82:	c3                   	ret    

00102f83 <port_outw>:
  102f83:	55                   	push   %ebp
  102f84:	89 e5                	mov    %esp,%ebp
  102f86:	83 ec 08             	sub    $0x8,%esp
  102f89:	e8 ce 05 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102f8e:	05 da 21 00 00       	add    $0x21da,%eax
  102f93:	8b 55 08             	mov    0x8(%ebp),%edx
  102f96:	8b 45 0c             	mov    0xc(%ebp),%eax
  102f99:	66 89 55 fc          	mov    %dx,-0x4(%ebp)
  102f9d:	66 89 45 f8          	mov    %ax,-0x8(%ebp)
  102fa1:	0f b7 45 f8          	movzwl -0x8(%ebp),%eax
  102fa5:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
  102fa9:	66 ef                	out    %ax,(%dx)
  102fab:	90                   	nop
  102fac:	c9                   	leave  
  102fad:	c3                   	ret    

00102fae <port_inl>:
  102fae:	55                   	push   %ebp
  102faf:	89 e5                	mov    %esp,%ebp
  102fb1:	83 ec 14             	sub    $0x14,%esp
  102fb4:	e8 a3 05 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102fb9:	05 af 21 00 00       	add    $0x21af,%eax
  102fbe:	8b 45 08             	mov    0x8(%ebp),%eax
  102fc1:	66 89 45 ec          	mov    %ax,-0x14(%ebp)
  102fc5:	0f b7 45 ec          	movzwl -0x14(%ebp),%eax
  102fc9:	89 c2                	mov    %eax,%edx
  102fcb:	ed                   	in     (%dx),%eax
  102fcc:	89 45 fc             	mov    %eax,-0x4(%ebp)
  102fcf:	8b 45 fc             	mov    -0x4(%ebp),%eax
  102fd2:	c9                   	leave  
  102fd3:	c3                   	ret    

00102fd4 <port_outl>:
  102fd4:	55                   	push   %ebp
  102fd5:	89 e5                	mov    %esp,%ebp
  102fd7:	83 ec 04             	sub    $0x4,%esp
  102fda:	e8 7d 05 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102fdf:	05 89 21 00 00       	add    $0x2189,%eax
  102fe4:	8b 45 08             	mov    0x8(%ebp),%eax
  102fe7:	66 89 45 fc          	mov    %ax,-0x4(%ebp)
  102feb:	8b 45 0c             	mov    0xc(%ebp),%eax
  102fee:	0f b7 55 fc          	movzwl -0x4(%ebp),%edx
  102ff2:	ef                   	out    %eax,(%dx)
  102ff3:	90                   	nop
  102ff4:	c9                   	leave  
  102ff5:	c3                   	ret    

00102ff6 <timer_callback>:
  102ff6:	55                   	push   %ebp
  102ff7:	89 e5                	mov    %esp,%ebp
  102ff9:	e8 5e 05 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  102ffe:	05 6a 21 00 00       	add    $0x216a,%eax
  103003:	90                   	nop
  103004:	5d                   	pop    %ebp
  103005:	c3                   	ret    

00103006 <init_timer>:
  103006:	55                   	push   %ebp
  103007:	89 e5                	mov    %esp,%ebp
  103009:	53                   	push   %ebx
  10300a:	83 ec 14             	sub    $0x14,%esp
  10300d:	e8 4e 05 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  103012:	81 c3 56 21 00 00    	add    $0x2156,%ebx
  103018:	83 ec 08             	sub    $0x8,%esp
  10301b:	8d 83 8e de ff ff    	lea    -0x2172(%ebx),%eax
  103021:	50                   	push   %eax
  103022:	6a 20                	push   $0x20
  103024:	e8 e5 fd ff ff       	call   102e0e <register_interrupt_handler>
  103029:	83 c4 10             	add    $0x10,%esp
  10302c:	83 ec 08             	sub    $0x8,%esp
  10302f:	6a 36                	push   $0x36
  103031:	6a 43                	push   $0x43
  103033:	e8 f7 fe ff ff       	call   102f2f <port_outb>
  103038:	83 c4 10             	add    $0x10,%esp
  10303b:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
  10303f:	75 0a                	jne    10304b <init_timer+0x45>
  103041:	c6 45 f7 ff          	movb   $0xff,-0x9(%ebp)
  103045:	c6 45 f6 ff          	movb   $0xff,-0xa(%ebp)
  103049:	eb 1f                	jmp    10306a <init_timer+0x64>
  10304b:	b8 dc 34 12 00       	mov    $0x1234dc,%eax
  103050:	ba 00 00 00 00       	mov    $0x0,%edx
  103055:	f7 75 08             	divl   0x8(%ebp)
  103058:	89 45 f0             	mov    %eax,-0x10(%ebp)
  10305b:	8b 45 f0             	mov    -0x10(%ebp),%eax
  10305e:	88 45 f7             	mov    %al,-0x9(%ebp)
  103061:	8b 45 f0             	mov    -0x10(%ebp),%eax
  103064:	c1 e8 08             	shr    $0x8,%eax
  103067:	88 45 f6             	mov    %al,-0xa(%ebp)
  10306a:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  10306e:	83 ec 08             	sub    $0x8,%esp
  103071:	50                   	push   %eax
  103072:	6a 40                	push   $0x40
  103074:	e8 b6 fe ff ff       	call   102f2f <port_outb>
  103079:	83 c4 10             	add    $0x10,%esp
  10307c:	0f b6 45 f6          	movzbl -0xa(%ebp),%eax
  103080:	83 ec 08             	sub    $0x8,%esp
  103083:	50                   	push   %eax
  103084:	6a 40                	push   $0x40
  103086:	e8 a4 fe ff ff       	call   102f2f <port_outb>
  10308b:	83 c4 10             	add    $0x10,%esp
  10308e:	90                   	nop
  10308f:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  103092:	c9                   	leave  
  103093:	c3                   	ret    

00103094 <memset>:
  103094:	55                   	push   %ebp
  103095:	89 e5                	mov    %esp,%ebp
  103097:	83 ec 14             	sub    $0x14,%esp
  10309a:	e8 bd 04 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  10309f:	05 c9 20 00 00       	add    $0x20c9,%eax
  1030a4:	8b 45 0c             	mov    0xc(%ebp),%eax
  1030a7:	88 45 ec             	mov    %al,-0x14(%ebp)
  1030aa:	8b 45 08             	mov    0x8(%ebp),%eax
  1030ad:	89 45 fc             	mov    %eax,-0x4(%ebp)
  1030b0:	eb 13                	jmp    1030c5 <memset+0x31>
  1030b2:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1030b5:	8d 50 01             	lea    0x1(%eax),%edx
  1030b8:	89 55 fc             	mov    %edx,-0x4(%ebp)
  1030bb:	0f b6 55 ec          	movzbl -0x14(%ebp),%edx
  1030bf:	88 10                	mov    %dl,(%eax)
  1030c1:	83 6d 10 01          	subl   $0x1,0x10(%ebp)
  1030c5:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
  1030c9:	75 e7                	jne    1030b2 <memset+0x1e>
  1030cb:	90                   	nop
  1030cc:	90                   	nop
  1030cd:	c9                   	leave  
  1030ce:	c3                   	ret    

001030cf <int_to_ascii>:
  1030cf:	55                   	push   %ebp
  1030d0:	89 e5                	mov    %esp,%ebp
  1030d2:	53                   	push   %ebx
  1030d3:	83 ec 14             	sub    $0x14,%esp
  1030d6:	e8 81 04 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1030db:	05 8d 20 00 00       	add    $0x208d,%eax
  1030e0:	8b 45 08             	mov    0x8(%ebp),%eax
  1030e3:	89 45 f0             	mov    %eax,-0x10(%ebp)
  1030e6:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
  1030ea:	79 03                	jns    1030ef <int_to_ascii+0x20>
  1030ec:	f7 5d 08             	negl   0x8(%ebp)
  1030ef:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  1030f6:	8b 4d 08             	mov    0x8(%ebp),%ecx
  1030f9:	ba 67 66 66 66       	mov    $0x66666667,%edx
  1030fe:	89 c8                	mov    %ecx,%eax
  103100:	f7 ea                	imul   %edx
  103102:	89 d0                	mov    %edx,%eax
  103104:	c1 f8 02             	sar    $0x2,%eax
  103107:	89 cb                	mov    %ecx,%ebx
  103109:	c1 fb 1f             	sar    $0x1f,%ebx
  10310c:	29 d8                	sub    %ebx,%eax
  10310e:	89 c2                	mov    %eax,%edx
  103110:	89 d0                	mov    %edx,%eax
  103112:	c1 e0 02             	shl    $0x2,%eax
  103115:	01 d0                	add    %edx,%eax
  103117:	01 c0                	add    %eax,%eax
  103119:	29 c1                	sub    %eax,%ecx
  10311b:	89 ca                	mov    %ecx,%edx
  10311d:	89 d0                	mov    %edx,%eax
  10311f:	8d 48 30             	lea    0x30(%eax),%ecx
  103122:	8b 45 f4             	mov    -0xc(%ebp),%eax
  103125:	8d 50 01             	lea    0x1(%eax),%edx
  103128:	89 55 f4             	mov    %edx,-0xc(%ebp)
  10312b:	89 c2                	mov    %eax,%edx
  10312d:	8b 45 0c             	mov    0xc(%ebp),%eax
  103130:	01 d0                	add    %edx,%eax
  103132:	89 ca                	mov    %ecx,%edx
  103134:	88 10                	mov    %dl,(%eax)
  103136:	8b 4d 08             	mov    0x8(%ebp),%ecx
  103139:	ba 67 66 66 66       	mov    $0x66666667,%edx
  10313e:	89 c8                	mov    %ecx,%eax
  103140:	f7 ea                	imul   %edx
  103142:	89 d0                	mov    %edx,%eax
  103144:	c1 f8 02             	sar    $0x2,%eax
  103147:	c1 f9 1f             	sar    $0x1f,%ecx
  10314a:	89 ca                	mov    %ecx,%edx
  10314c:	29 d0                	sub    %edx,%eax
  10314e:	89 45 08             	mov    %eax,0x8(%ebp)
  103151:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
  103155:	7f 9f                	jg     1030f6 <int_to_ascii+0x27>
  103157:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
  10315b:	79 13                	jns    103170 <int_to_ascii+0xa1>
  10315d:	8b 45 f4             	mov    -0xc(%ebp),%eax
  103160:	8d 50 01             	lea    0x1(%eax),%edx
  103163:	89 55 f4             	mov    %edx,-0xc(%ebp)
  103166:	89 c2                	mov    %eax,%edx
  103168:	8b 45 0c             	mov    0xc(%ebp),%eax
  10316b:	01 d0                	add    %edx,%eax
  10316d:	c6 00 2d             	movb   $0x2d,(%eax)
  103170:	8b 55 f4             	mov    -0xc(%ebp),%edx
  103173:	8b 45 0c             	mov    0xc(%ebp),%eax
  103176:	01 d0                	add    %edx,%eax
  103178:	c6 00 00             	movb   $0x0,(%eax)
  10317b:	83 ec 0c             	sub    $0xc,%esp
  10317e:	ff 75 0c             	push   0xc(%ebp)
  103181:	e8 3d 01 00 00       	call   1032c3 <str_reverse>
  103186:	83 c4 10             	add    $0x10,%esp
  103189:	90                   	nop
  10318a:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  10318d:	c9                   	leave  
  10318e:	c3                   	ret    

0010318f <int_to_bin>:
  10318f:	55                   	push   %ebp
  103190:	89 e5                	mov    %esp,%ebp
  103192:	83 ec 18             	sub    $0x18,%esp
  103195:	e8 c2 03 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  10319a:	05 ce 1f 00 00       	add    $0x1fce,%eax
  10319f:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
  1031a3:	eb 32                	jmp    1031d7 <int_to_bin+0x48>
  1031a5:	8b 45 08             	mov    0x8(%ebp),%eax
  1031a8:	83 e0 01             	and    $0x1,%eax
  1031ab:	85 c0                	test   %eax,%eax
  1031ad:	74 07                	je     1031b6 <int_to_bin+0x27>
  1031af:	b9 31 00 00 00       	mov    $0x31,%ecx
  1031b4:	eb 05                	jmp    1031bb <int_to_bin+0x2c>
  1031b6:	b9 30 00 00 00       	mov    $0x30,%ecx
  1031bb:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  1031bf:	8d 50 01             	lea    0x1(%eax),%edx
  1031c2:	88 55 f7             	mov    %dl,-0x9(%ebp)
  1031c5:	0f b6 d0             	movzbl %al,%edx
  1031c8:	8b 45 0c             	mov    0xc(%ebp),%eax
  1031cb:	01 d0                	add    %edx,%eax
  1031cd:	88 08                	mov    %cl,(%eax)
  1031cf:	8b 45 08             	mov    0x8(%ebp),%eax
  1031d2:	d1 e8                	shr    %eax
  1031d4:	89 45 08             	mov    %eax,0x8(%ebp)
  1031d7:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
  1031db:	75 c8                	jne    1031a5 <int_to_bin+0x16>
  1031dd:	0f b6 55 f7          	movzbl -0x9(%ebp),%edx
  1031e1:	8b 45 0c             	mov    0xc(%ebp),%eax
  1031e4:	01 d0                	add    %edx,%eax
  1031e6:	c6 00 00             	movb   $0x0,(%eax)
  1031e9:	83 ec 0c             	sub    $0xc,%esp
  1031ec:	ff 75 0c             	push   0xc(%ebp)
  1031ef:	e8 cf 00 00 00       	call   1032c3 <str_reverse>
  1031f4:	83 c4 10             	add    $0x10,%esp
  1031f7:	90                   	nop
  1031f8:	c9                   	leave  
  1031f9:	c3                   	ret    

001031fa <strlen>:
  1031fa:	55                   	push   %ebp
  1031fb:	89 e5                	mov    %esp,%ebp
  1031fd:	83 ec 10             	sub    $0x10,%esp
  103200:	e8 57 03 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  103205:	05 63 1f 00 00       	add    $0x1f63,%eax
  10320a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  103211:	eb 04                	jmp    103217 <strlen+0x1d>
  103213:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  103217:	8b 55 08             	mov    0x8(%ebp),%edx
  10321a:	8b 45 fc             	mov    -0x4(%ebp),%eax
  10321d:	01 d0                	add    %edx,%eax
  10321f:	0f b6 00             	movzbl (%eax),%eax
  103222:	84 c0                	test   %al,%al
  103224:	75 ed                	jne    103213 <strlen+0x19>
  103226:	8b 45 fc             	mov    -0x4(%ebp),%eax
  103229:	c9                   	leave  
  10322a:	c3                   	ret    

0010322b <strcat>:
  10322b:	55                   	push   %ebp
  10322c:	89 e5                	mov    %esp,%ebp
  10322e:	83 ec 10             	sub    $0x10,%esp
  103231:	e8 26 03 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  103236:	05 32 1f 00 00       	add    $0x1f32,%eax
  10323b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  103242:	ff 75 08             	push   0x8(%ebp)
  103245:	e8 b0 ff ff ff       	call   1031fa <strlen>
  10324a:	83 c4 04             	add    $0x4,%esp
  10324d:	89 45 f8             	mov    %eax,-0x8(%ebp)
  103250:	ff 75 0c             	push   0xc(%ebp)
  103253:	e8 a2 ff ff ff       	call   1031fa <strlen>
  103258:	83 c4 04             	add    $0x4,%esp
  10325b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  10325e:	eb 1e                	jmp    10327e <strcat+0x53>
  103260:	8b 55 0c             	mov    0xc(%ebp),%edx
  103263:	8b 45 fc             	mov    -0x4(%ebp),%eax
  103266:	01 d0                	add    %edx,%eax
  103268:	8b 4d f8             	mov    -0x8(%ebp),%ecx
  10326b:	8b 55 fc             	mov    -0x4(%ebp),%edx
  10326e:	01 d1                	add    %edx,%ecx
  103270:	8b 55 08             	mov    0x8(%ebp),%edx
  103273:	01 ca                	add    %ecx,%edx
  103275:	0f b6 00             	movzbl (%eax),%eax
  103278:	88 02                	mov    %al,(%edx)
  10327a:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  10327e:	8b 55 0c             	mov    0xc(%ebp),%edx
  103281:	8b 45 fc             	mov    -0x4(%ebp),%eax
  103284:	01 d0                	add    %edx,%eax
  103286:	0f b6 00             	movzbl (%eax),%eax
  103289:	84 c0                	test   %al,%al
  10328b:	75 d3                	jne    103260 <strcat+0x35>
  10328d:	8b 55 f8             	mov    -0x8(%ebp),%edx
  103290:	8b 45 fc             	mov    -0x4(%ebp),%eax
  103293:	01 c2                	add    %eax,%edx
  103295:	8b 45 08             	mov    0x8(%ebp),%eax
  103298:	01 d0                	add    %edx,%eax
  10329a:	c6 00 00             	movb   $0x0,(%eax)
  10329d:	90                   	nop
  10329e:	c9                   	leave  
  10329f:	c3                   	ret    

001032a0 <strend>:
  1032a0:	55                   	push   %ebp
  1032a1:	89 e5                	mov    %esp,%ebp
  1032a3:	e8 b4 02 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1032a8:	05 c0 1e 00 00       	add    $0x1ec0,%eax
  1032ad:	ff 75 08             	push   0x8(%ebp)
  1032b0:	e8 45 ff ff ff       	call   1031fa <strlen>
  1032b5:	83 c4 04             	add    $0x4,%esp
  1032b8:	8b 55 08             	mov    0x8(%ebp),%edx
  1032bb:	01 d0                	add    %edx,%eax
  1032bd:	c6 00 00             	movb   $0x0,(%eax)
  1032c0:	90                   	nop
  1032c1:	c9                   	leave  
  1032c2:	c3                   	ret    

001032c3 <str_reverse>:
  1032c3:	55                   	push   %ebp
  1032c4:	89 e5                	mov    %esp,%ebp
  1032c6:	83 ec 10             	sub    $0x10,%esp
  1032c9:	e8 8e 02 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1032ce:	05 9a 1e 00 00       	add    $0x1e9a,%eax
  1032d3:	ff 75 08             	push   0x8(%ebp)
  1032d6:	e8 1f ff ff ff       	call   1031fa <strlen>
  1032db:	83 c4 04             	add    $0x4,%esp
  1032de:	89 45 f4             	mov    %eax,-0xc(%ebp)
  1032e1:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  1032e8:	8b 45 f4             	mov    -0xc(%ebp),%eax
  1032eb:	83 e8 01             	sub    $0x1,%eax
  1032ee:	89 45 f8             	mov    %eax,-0x8(%ebp)
  1032f1:	eb 41                	jmp    103334 <str_reverse+0x71>
  1032f3:	8b 55 08             	mov    0x8(%ebp),%edx
  1032f6:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1032f9:	01 d0                	add    %edx,%eax
  1032fb:	0f b6 00             	movzbl (%eax),%eax
  1032fe:	88 45 f3             	mov    %al,-0xd(%ebp)
  103301:	8b 55 08             	mov    0x8(%ebp),%edx
  103304:	8b 45 f8             	mov    -0x8(%ebp),%eax
  103307:	01 d0                	add    %edx,%eax
  103309:	8b 4d 08             	mov    0x8(%ebp),%ecx
  10330c:	8b 55 fc             	mov    -0x4(%ebp),%edx
  10330f:	01 ca                	add    %ecx,%edx
  103311:	0f b6 00             	movzbl (%eax),%eax
  103314:	88 02                	mov    %al,(%edx)
  103316:	8b 55 08             	mov    0x8(%ebp),%edx
  103319:	8b 45 f8             	mov    -0x8(%ebp),%eax
  10331c:	01 c2                	add    %eax,%edx
  10331e:	0f b6 45 f3          	movzbl -0xd(%ebp),%eax
  103322:	88 02                	mov    %al,(%edx)
  103324:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  103328:	8b 45 f4             	mov    -0xc(%ebp),%eax
  10332b:	2b 45 fc             	sub    -0x4(%ebp),%eax
  10332e:	83 e8 01             	sub    $0x1,%eax
  103331:	89 45 f8             	mov    %eax,-0x8(%ebp)
  103334:	8b 45 f4             	mov    -0xc(%ebp),%eax
  103337:	d1 e8                	shr    %eax
  103339:	39 45 fc             	cmp    %eax,-0x4(%ebp)
  10333c:	72 b5                	jb     1032f3 <str_reverse+0x30>
  10333e:	90                   	nop
  10333f:	90                   	nop
  103340:	c9                   	leave  
  103341:	c3                   	ret    

00103342 <print_hex>:
  103342:	55                   	push   %ebp
  103343:	89 e5                	mov    %esp,%ebp
  103345:	56                   	push   %esi
  103346:	53                   	push   %ebx
  103347:	83 ec 20             	sub    $0x20,%esp
  10334a:	e8 11 02 00 00       	call   103560 <__x86.get_pc_thunk.bx>
  10334f:	81 c3 19 1e 00 00    	add    $0x1e19,%ebx
  103355:	8b 45 0c             	mov    0xc(%ebp),%eax
  103358:	88 45 e4             	mov    %al,-0x1c(%ebp)
  10335b:	89 e0                	mov    %esp,%eax
  10335d:	89 c6                	mov    %eax,%esi
  10335f:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
  103363:	0f b6 d0             	movzbl %al,%edx
  103366:	83 ea 01             	sub    $0x1,%edx
  103369:	89 55 f4             	mov    %edx,-0xc(%ebp)
  10336c:	0f b6 c0             	movzbl %al,%eax
  10336f:	ba 10 00 00 00       	mov    $0x10,%edx
  103374:	83 ea 01             	sub    $0x1,%edx
  103377:	01 d0                	add    %edx,%eax
  103379:	b9 10 00 00 00       	mov    $0x10,%ecx
  10337e:	ba 00 00 00 00       	mov    $0x0,%edx
  103383:	f7 f1                	div    %ecx
  103385:	6b c0 10             	imul   $0x10,%eax,%eax
  103388:	89 c1                	mov    %eax,%ecx
  10338a:	81 e1 00 f0 ff ff    	and    $0xfffff000,%ecx
  103390:	89 e2                	mov    %esp,%edx
  103392:	29 ca                	sub    %ecx,%edx
  103394:	39 d4                	cmp    %edx,%esp
  103396:	74 10                	je     1033a8 <print_hex+0x66>
  103398:	81 ec 00 10 00 00    	sub    $0x1000,%esp
  10339e:	83 8c 24 fc 0f 00 00 	orl    $0x0,0xffc(%esp)
  1033a5:	00 
  1033a6:	eb ec                	jmp    103394 <print_hex+0x52>
  1033a8:	89 c2                	mov    %eax,%edx
  1033aa:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
  1033b0:	29 d4                	sub    %edx,%esp
  1033b2:	89 c2                	mov    %eax,%edx
  1033b4:	81 e2 ff 0f 00 00    	and    $0xfff,%edx
  1033ba:	85 d2                	test   %edx,%edx
  1033bc:	74 0d                	je     1033cb <print_hex+0x89>
  1033be:	25 ff 0f 00 00       	and    $0xfff,%eax
  1033c3:	83 e8 04             	sub    $0x4,%eax
  1033c6:	01 e0                	add    %esp,%eax
  1033c8:	83 08 00             	orl    $0x0,(%eax)
  1033cb:	89 e0                	mov    %esp,%eax
  1033cd:	83 c0 00             	add    $0x0,%eax
  1033d0:	89 45 f0             	mov    %eax,-0x10(%ebp)
  1033d3:	0f b6 45 e4          	movzbl -0x1c(%ebp),%eax
  1033d7:	83 ec 04             	sub    $0x4,%esp
  1033da:	50                   	push   %eax
  1033db:	ff 75 f0             	push   -0x10(%ebp)
  1033de:	ff 75 08             	push   0x8(%ebp)
  1033e1:	e8 1b 00 00 00       	call   103401 <int_to_hex>
  1033e6:	83 c4 10             	add    $0x10,%esp
  1033e9:	83 ec 0c             	sub    $0xc,%esp
  1033ec:	ff 75 f0             	push   -0x10(%ebp)
  1033ef:	e8 5d ee ff ff       	call   102251 <printk>
  1033f4:	83 c4 10             	add    $0x10,%esp
  1033f7:	89 f4                	mov    %esi,%esp
  1033f9:	90                   	nop
  1033fa:	8d 65 f8             	lea    -0x8(%ebp),%esp
  1033fd:	5b                   	pop    %ebx
  1033fe:	5e                   	pop    %esi
  1033ff:	5d                   	pop    %ebp
  103400:	c3                   	ret    

00103401 <int_to_hex>:
  103401:	55                   	push   %ebp
  103402:	89 e5                	mov    %esp,%ebp
  103404:	53                   	push   %ebx
  103405:	83 ec 14             	sub    $0x14,%esp
  103408:	e8 57 01 00 00       	call   103564 <__x86.get_pc_thunk.dx>
  10340d:	81 c2 5b 1d 00 00    	add    $0x1d5b,%edx
  103413:	8b 45 10             	mov    0x10(%ebp),%eax
  103416:	88 45 e8             	mov    %al,-0x18(%ebp)
  103419:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
  103420:	c6 45 f7 00          	movb   $0x0,-0x9(%ebp)
  103424:	eb 16                	jmp    10343c <int_to_hex+0x3b>
  103426:	0f b6 4d f7          	movzbl -0x9(%ebp),%ecx
  10342a:	8b 45 0c             	mov    0xc(%ebp),%eax
  10342d:	01 c8                	add    %ecx,%eax
  10342f:	c6 00 30             	movb   $0x30,(%eax)
  103432:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  103436:	83 c0 01             	add    $0x1,%eax
  103439:	88 45 f7             	mov    %al,-0x9(%ebp)
  10343c:	0f b6 45 f7          	movzbl -0x9(%ebp),%eax
  103440:	3a 45 e8             	cmp    -0x18(%ebp),%al
  103443:	72 e1                	jb     103426 <int_to_hex+0x25>
  103445:	eb 2b                	jmp    103472 <int_to_hex+0x71>
  103447:	8b 45 08             	mov    0x8(%ebp),%eax
  10344a:	83 e0 0f             	and    $0xf,%eax
  10344d:	89 c3                	mov    %eax,%ebx
  10344f:	8b 45 f8             	mov    -0x8(%ebp),%eax
  103452:	8d 48 01             	lea    0x1(%eax),%ecx
  103455:	89 4d f8             	mov    %ecx,-0x8(%ebp)
  103458:	89 c1                	mov    %eax,%ecx
  10345a:	8b 45 0c             	mov    0xc(%ebp),%eax
  10345d:	01 c1                	add    %eax,%ecx
  10345f:	0f b6 84 1a b6 f4 ff 	movzbl -0xb4a(%edx,%ebx,1),%eax
  103466:	ff 
  103467:	88 01                	mov    %al,(%ecx)
  103469:	8b 45 08             	mov    0x8(%ebp),%eax
  10346c:	c1 e8 04             	shr    $0x4,%eax
  10346f:	89 45 08             	mov    %eax,0x8(%ebp)
  103472:	83 7d 08 00          	cmpl   $0x0,0x8(%ebp)
  103476:	75 cf                	jne    103447 <int_to_hex+0x46>
  103478:	0f b6 55 e8          	movzbl -0x18(%ebp),%edx
  10347c:	8b 45 0c             	mov    0xc(%ebp),%eax
  10347f:	01 d0                	add    %edx,%eax
  103481:	c6 00 00             	movb   $0x0,(%eax)
  103484:	ff 75 0c             	push   0xc(%ebp)
  103487:	e8 37 fe ff ff       	call   1032c3 <str_reverse>
  10348c:	83 c4 04             	add    $0x4,%esp
  10348f:	90                   	nop
  103490:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  103493:	c9                   	leave  
  103494:	c3                   	ret    

00103495 <backspace>:
  103495:	55                   	push   %ebp
  103496:	89 e5                	mov    %esp,%ebp
  103498:	83 ec 10             	sub    $0x10,%esp
  10349b:	e8 bc 00 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1034a0:	05 c8 1c 00 00       	add    $0x1cc8,%eax
  1034a5:	ff 75 08             	push   0x8(%ebp)
  1034a8:	e8 4d fd ff ff       	call   1031fa <strlen>
  1034ad:	83 c4 04             	add    $0x4,%esp
  1034b0:	89 45 fc             	mov    %eax,-0x4(%ebp)
  1034b3:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1034b6:	8d 50 ff             	lea    -0x1(%eax),%edx
  1034b9:	8b 45 08             	mov    0x8(%ebp),%eax
  1034bc:	01 d0                	add    %edx,%eax
  1034be:	c6 00 00             	movb   $0x0,(%eax)
  1034c1:	90                   	nop
  1034c2:	c9                   	leave  
  1034c3:	c3                   	ret    

001034c4 <append>:
  1034c4:	55                   	push   %ebp
  1034c5:	89 e5                	mov    %esp,%ebp
  1034c7:	83 ec 14             	sub    $0x14,%esp
  1034ca:	e8 8d 00 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  1034cf:	05 99 1c 00 00       	add    $0x1c99,%eax
  1034d4:	8b 45 0c             	mov    0xc(%ebp),%eax
  1034d7:	88 45 ec             	mov    %al,-0x14(%ebp)
  1034da:	ff 75 08             	push   0x8(%ebp)
  1034dd:	e8 18 fd ff ff       	call   1031fa <strlen>
  1034e2:	83 c4 04             	add    $0x4,%esp
  1034e5:	89 45 fc             	mov    %eax,-0x4(%ebp)
  1034e8:	8b 55 fc             	mov    -0x4(%ebp),%edx
  1034eb:	8b 45 08             	mov    0x8(%ebp),%eax
  1034ee:	01 c2                	add    %eax,%edx
  1034f0:	0f b6 45 ec          	movzbl -0x14(%ebp),%eax
  1034f4:	88 02                	mov    %al,(%edx)
  1034f6:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1034f9:	8d 50 01             	lea    0x1(%eax),%edx
  1034fc:	8b 45 08             	mov    0x8(%ebp),%eax
  1034ff:	01 d0                	add    %edx,%eax
  103501:	c6 00 00             	movb   $0x0,(%eax)
  103504:	90                   	nop
  103505:	c9                   	leave  
  103506:	c3                   	ret    

00103507 <strcmp>:
  103507:	55                   	push   %ebp
  103508:	89 e5                	mov    %esp,%ebp
  10350a:	83 ec 10             	sub    $0x10,%esp
  10350d:	e8 4a 00 00 00       	call   10355c <__x86.get_pc_thunk.ax>
  103512:	05 56 1c 00 00       	add    $0x1c56,%eax
  103517:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  10351e:	eb 1a                	jmp    10353a <strcmp+0x33>
  103520:	8b 55 08             	mov    0x8(%ebp),%edx
  103523:	8b 45 fc             	mov    -0x4(%ebp),%eax
  103526:	01 d0                	add    %edx,%eax
  103528:	0f b6 00             	movzbl (%eax),%eax
  10352b:	84 c0                	test   %al,%al
  10352d:	75 07                	jne    103536 <strcmp+0x2f>
  10352f:	b8 00 00 00 00       	mov    $0x0,%eax
  103534:	eb 24                	jmp    10355a <strcmp+0x53>
  103536:	83 45 fc 01          	addl   $0x1,-0x4(%ebp)
  10353a:	8b 55 08             	mov    0x8(%ebp),%edx
  10353d:	8b 45 fc             	mov    -0x4(%ebp),%eax
  103540:	01 d0                	add    %edx,%eax
  103542:	0f b6 10             	movzbl (%eax),%edx
  103545:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  103548:	8b 45 fc             	mov    -0x4(%ebp),%eax
  10354b:	01 c8                	add    %ecx,%eax
  10354d:	0f b6 00             	movzbl (%eax),%eax
  103550:	38 c2                	cmp    %al,%dl
  103552:	74 cc                	je     103520 <strcmp+0x19>
  103554:	8b 45 08             	mov    0x8(%ebp),%eax
  103557:	2b 45 0c             	sub    0xc(%ebp),%eax
  10355a:	c9                   	leave  
  10355b:	c3                   	ret    

Disassembly of section .text.__x86.get_pc_thunk.ax:

0010355c <__x86.get_pc_thunk.ax>:
  10355c:	8b 04 24             	mov    (%esp),%eax
  10355f:	c3                   	ret    

Disassembly of section .text.__x86.get_pc_thunk.bx:

00103560 <__x86.get_pc_thunk.bx>:
  103560:	8b 1c 24             	mov    (%esp),%ebx
  103563:	c3                   	ret    

Disassembly of section .text.__x86.get_pc_thunk.dx:

00103564 <__x86.get_pc_thunk.dx>:
  103564:	8b 14 24             	mov    (%esp),%edx
  103567:	c3                   	ret    

Disassembly of section .rodata:

00104000 <.rodata>:
  104000:	48                   	dec    %eax
  104001:	20 4f 48             	and    %cl,0x48(%edi)
  104004:	20 4f 20             	and    %cl,0x20(%edi)
  104007:	48                   	dec    %eax
  104008:	00 4b 65             	add    %cl,0x65(%ebx)
  10400b:	72 6e                	jb     10407b <__x86.get_pc_thunk.dx+0xb17>
  10400d:	65 6c                	gs insb (%dx),%es:(%edi)
  10400f:	20 53 74             	and    %dl,0x74(%ebx)
  104012:	61                   	popa   
  104013:	63 6b 3a             	arpl   %bp,0x3a(%ebx)
  104016:	20 30                	and    %dh,(%eax)
  104018:	78 00                	js     10401a <__x86.get_pc_thunk.dx+0xab6>
  10401a:	0a 00                	or     (%eax),%al
  10401c:	48                   	dec    %eax
  10401d:	65 6c                	gs insb (%dx),%es:(%edi)
  10401f:	6c                   	insb   (%dx),%es:(%edi)
  104020:	6f                   	outsl  %ds:(%esi),(%dx)
  104021:	20 57 6f             	and    %dl,0x6f(%edi)
  104024:	72 6c                	jb     104092 <__x86.get_pc_thunk.dx+0xb2e>
  104026:	64 0a 00             	or     %fs:(%eax),%al
  104029:	4c                   	dec    %esp
  10402a:	6f                   	outsl  %ds:(%esi),(%dx)
  10402b:	61                   	popa   
  10402c:	64 69 6e 67 20 47 44 	imul   $0x54444720,%fs:0x67(%esi),%ebp
  104033:	54 
  104034:	2e 2e 2e 0a 00       	cs cs or %cs:(%eax),%al
  104039:	4c                   	dec    %esp
  10403a:	6f                   	outsl  %ds:(%esi),(%dx)
  10403b:	61                   	popa   
  10403c:	64 69 6e 67 20 49 44 	imul   $0x54444920,%fs:0x67(%esi),%ebp
  104043:	54 
  104044:	2e 2e 2e 0a 00       	cs cs or %cs:(%eax),%al
  104049:	49                   	dec    %ecx
  10404a:	6e                   	outsb  %ds:(%esi),(%dx)
  10404b:	74 69                	je     1040b6 <__x86.get_pc_thunk.dx+0xb52>
  10404d:	61                   	popa   
  10404e:	6c                   	insb   (%dx),%es:(%edi)
  10404f:	69 73 69 6e 67 20 54 	imul   $0x5420676e,0x69(%ebx),%esi
  104056:	69 6d 65 72 2e 2e 2e 	imul   $0x2e2e2e72,0x65(%ebp),%ebp
  10405d:	0a 00                	or     (%eax),%al
  10405f:	49                   	dec    %ecx
  104060:	6e                   	outsb  %ds:(%esi),(%dx)
  104061:	74 69                	je     1040cc <__x86.get_pc_thunk.dx+0xb68>
  104063:	61                   	popa   
  104064:	6c                   	insb   (%dx),%es:(%edi)
  104065:	69 73 69 6e 67 20 4b 	imul   $0x4b20676e,0x69(%ebx),%esi
  10406c:	65 79 62             	gs jns 1040d1 <__x86.get_pc_thunk.dx+0xb6d>
  10406f:	6f                   	outsl  %ds:(%esi),(%dx)
  104070:	61                   	popa   
  104071:	72 64                	jb     1040d7 <__x86.get_pc_thunk.dx+0xb73>
  104073:	2e 2e 2e 0a 00       	cs cs or %cs:(%eax),%al
  104078:	49                   	dec    %ecx
  104079:	6e                   	outsb  %ds:(%esi),(%dx)
  10407a:	74 69                	je     1040e5 <__x86.get_pc_thunk.dx+0xb81>
  10407c:	61                   	popa   
  10407d:	6c                   	insb   (%dx),%es:(%edi)
  10407e:	69 73 69 6e 67 20 4d 	imul   $0x4d20676e,0x69(%ebx),%esi
  104085:	6f                   	outsl  %ds:(%esi),(%dx)
  104086:	75 73                	jne    1040fb <__x86.get_pc_thunk.dx+0xb97>
  104088:	65 2e 2e 2e 0a 00    	gs cs cs or %cs:(%eax),%al
  10408e:	49                   	dec    %ecx
  10408f:	6e                   	outsb  %ds:(%esi),(%dx)
  104090:	74 69                	je     1040fb <__x86.get_pc_thunk.dx+0xb97>
  104092:	61                   	popa   
  104093:	6c                   	insb   (%dx),%es:(%edi)
  104094:	69 73 69 6e 67 20 41 	imul   $0x4120676e,0x69(%ebx),%esi
  10409b:	54                   	push   %esp
  10409c:	41                   	inc    %ecx
  10409d:	2e 2e 2e 0a 00       	cs cs or %cs:(%eax),%al
  1040a2:	49                   	dec    %ecx
  1040a3:	6e                   	outsb  %ds:(%esi),(%dx)
  1040a4:	74 69                	je     10410f <__x86.get_pc_thunk.dx+0xbab>
  1040a6:	61                   	popa   
  1040a7:	6c                   	insb   (%dx),%es:(%edi)
  1040a8:	69 73 69 6e 67 20 50 	imul   $0x5020676e,0x69(%ebx),%esi
  1040af:	43                   	inc    %ebx
  1040b0:	49                   	dec    %ecx
  1040b1:	2e 2e 2e 0a 00       	cs cs or %cs:(%eax),%al
  1040b6:	00 00                	add    %al,(%eax)
  1040b8:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  1040bd:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  1040c2:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  1040c7:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  1040cc:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  1040d1:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  1040d6:	2d 0a 00 20 00       	sub    $0x20000a,%eax
  1040db:	00 0a                	add    %cl,(%edx)
  1040dd:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  1040e2:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  1040e7:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  1040ec:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  1040f1:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  1040f6:	2d 2d 2d 2d 2d       	sub    $0x2d2d2d2d,%eax
  1040fb:	2d 00 48 4f 4f       	sub    $0x4f4f4800,%eax
  104100:	4f                   	dec    %edi
  104101:	0a 00                	or     (%eax),%al
  104103:	48                   	dec    %eax
  104104:	45                   	inc    %ebp
  104105:	48                   	dec    %eax
  104106:	45                   	inc    %ebp
  104107:	48                   	dec    %eax
  104108:	45                   	inc    %ebp
  104109:	0a 00                	or     (%eax),%al
  10410b:	0a 53 68             	or     0x68(%ebx),%dl
  10410e:	65 6c                	gs insb (%dx),%es:(%edi)
  104110:	6c                   	insb   (%dx),%es:(%edi)
  104111:	20 76 30             	and    %dh,0x30(%esi)
  104114:	2e 31 0a             	xor    %ecx,%cs:(%edx)
  104117:	00 6d 79             	add    %ch,0x79(%ebp)
  10411a:	6f                   	outsl  %ds:(%esi),(%dx)
  10411b:	73 3e                	jae    10415b <__x86.get_pc_thunk.dx+0xbf7>
  10411d:	20 00                	and    %al,(%eax)
  10411f:	0a 00                	or     (%eax),%al
  104121:	00 63 6c             	add    %ah,0x6c(%ebx)
  104124:	65 61                	gs popa 
  104126:	72 00                	jb     104128 <__x86.get_pc_thunk.dx+0xbc4>
  104128:	65 78 69             	gs js  104194 <__x86.get_pc_thunk.dx+0xc30>
  10412b:	74 00                	je     10412d <__x86.get_pc_thunk.dx+0xbc9>
  10412d:	70 63                	jo     104192 <__x86.get_pc_thunk.dx+0xc2e>
  10412f:	69 00 00 00 00 41    	imul   $0x41000000,(%eax),%eax
  104135:	54                   	push   %esp
  104136:	41                   	inc    %ecx
  104137:	20 6e 61             	and    %ch,0x61(%esi)
  10413a:	6d                   	insl   (%dx),%es:(%edi)
  10413b:	65 3d 00 20 00 4d    	gs cmp $0x4d002000,%eax
  104141:	41                   	inc    %ecx
  104142:	53                   	push   %ebx
  104143:	54                   	push   %esp
  104144:	45                   	inc    %ebp
  104145:	52                   	push   %edx
  104146:	00 53 4c             	add    %dl,0x4c(%ebx)
  104149:	41                   	inc    %ecx
  10414a:	56                   	push   %esi
  10414b:	45                   	inc    %ebp
  10414c:	00 3a                	add    %bh,(%edx)
  10414e:	20 00                	and    %al,(%eax)
  104150:	4e                   	dec    %esi
  104151:	4f                   	dec    %edi
  104152:	20 44 45 56          	and    %al,0x56(%ebp,%eax,2)
  104156:	49                   	dec    %ecx
  104157:	43                   	inc    %ebx
  104158:	45                   	inc    %ebp
  104159:	0a 00                	or     (%eax),%al
  10415b:	45                   	inc    %ebp
  10415c:	52                   	push   %edx
  10415d:	52                   	push   %edx
  10415e:	4f                   	dec    %edi
  10415f:	52                   	push   %edx
  104160:	0a 00                	or     (%eax),%al
  104162:	52                   	push   %edx
  104163:	45                   	inc    %ebp
  104164:	41                   	inc    %ecx
  104165:	44                   	inc    %esp
  104166:	59                   	pop    %ecx
  104167:	0a 00                	or     (%eax),%al
  104169:	00 00                	add    %al,(%eax)
  10416b:	00 41 54             	add    %al,0x54(%ecx)
  10416e:	41                   	inc    %ecx
  10416f:	20 45 52             	and    %al,0x52(%ebp)
  104172:	52                   	push   %edx
  104173:	4f                   	dec    %edi
  104174:	52                   	push   %edx
  104175:	3a 20                	cmp    (%eax),%ah
  104177:	63 61 6e             	arpl   %sp,0x6e(%ecx)
  10417a:	6e                   	outsb  %ds:(%esi),(%dx)
  10417b:	6f                   	outsl  %ds:(%esi),(%dx)
  10417c:	74 20                	je     10419e <__x86.get_pc_thunk.dx+0xc3a>
  10417e:	72 65                	jb     1041e5 <__x86.get_pc_thunk.dx+0xc81>
  104180:	61                   	popa   
  104181:	64 20 73 65          	and    %dh,%fs:0x65(%ebx)
  104185:	63 74 6f 72          	arpl   %si,0x72(%edi,%ebp,2)
  104189:	0a 00                	or     (%eax),%al
  10418b:	41                   	inc    %ecx
  10418c:	54                   	push   %esp
  10418d:	41                   	inc    %ecx
  10418e:	20 45 52             	and    %al,0x52(%ebp)
  104191:	52                   	push   %edx
  104192:	4f                   	dec    %edi
  104193:	52                   	push   %edx
  104194:	3a 20                	cmp    (%eax),%ah
  104196:	63 61 6e             	arpl   %sp,0x6e(%ecx)
  104199:	6e                   	outsb  %ds:(%esi),(%dx)
  10419a:	6f                   	outsl  %ds:(%esi),(%dx)
  10419b:	74 20                	je     1041bd <__x86.get_pc_thunk.dx+0xc59>
  10419d:	66 6c                	data16 insb (%dx),%es:(%edi)
  10419f:	75 73                	jne    104214 <__x86.get_pc_thunk.dx+0xcb0>
  1041a1:	68 0a 00 6d 79       	push   $0x796d000a
  1041a6:	6f                   	outsl  %ds:(%esi),(%dx)
  1041a7:	73 00                	jae    1041a9 <__x86.get_pc_thunk.dx+0xc45>
  1041a9:	52                   	push   %edx
  1041aa:	45                   	inc    %ebp
  1041ab:	41                   	inc    %ecx
  1041ac:	44                   	inc    %esp
  1041ad:	3a 20                	cmp    (%eax),%ah
  1041af:	00 0a                	add    %cl,(%edx)
  1041b1:	00 08                	add    %cl,(%eax)
  1041b3:	00 55 6e             	add    %dl,0x6e(%ebp)
  1041b6:	63 6c 61 73          	arpl   %bp,0x73(%ecx,%eiz,2)
  1041ba:	73 69                	jae    104225 <__x86.get_pc_thunk.dx+0xcc1>
  1041bc:	66 69 65 64 3a 20    	imul   $0x203a,0x64(%ebp),%sp
  1041c2:	00 53 74             	add    %dl,0x74(%ebx)
  1041c5:	6f                   	outsl  %ds:(%esi),(%dx)
  1041c6:	72 61                	jb     104229 <__x86.get_pc_thunk.dx+0xcc5>
  1041c8:	67 65 3a 20          	cmp    %gs:(%bx,%si),%ah
  1041cc:	00 4e 65             	add    %cl,0x65(%esi)
  1041cf:	74 77                	je     104248 <__x86.get_pc_thunk.dx+0xce4>
  1041d1:	6f                   	outsl  %ds:(%esi),(%dx)
  1041d2:	72 6b                	jb     10423f <__x86.get_pc_thunk.dx+0xcdb>
  1041d4:	3a 20                	cmp    (%eax),%ah
  1041d6:	00 45 74             	add    %al,0x74(%ebp)
  1041d9:	68 65 72 6e 65       	push   $0x656e7265
  1041de:	74 00                	je     1041e0 <__x86.get_pc_thunk.dx+0xc7c>
  1041e0:	54                   	push   %esp
  1041e1:	6f                   	outsl  %ds:(%esi),(%dx)
  1041e2:	6b 65 6e 20          	imul   $0x20,0x6e(%ebp),%esp
  1041e6:	52                   	push   %edx
  1041e7:	69 6e 67 00 46 44 44 	imul   $0x44444600,0x67(%esi),%ebp
  1041ee:	49                   	dec    %ecx
  1041ef:	00 41 54             	add    %al,0x54(%ecx)
  1041f2:	4d                   	dec    %ebp
  1041f3:	00 49 53             	add    %cl,0x53(%ecx)
  1041f6:	44                   	inc    %esp
  1041f7:	4e                   	dec    %esi
  1041f8:	00 57 6f             	add    %dl,0x6f(%edi)
  1041fb:	72 6c                	jb     104269 <__x86.get_pc_thunk.dx+0xd05>
  1041fd:	64 46                	fs inc %esi
  1041ff:	6c                   	insb   (%dx),%es:(%edi)
  104200:	70 20                	jo     104222 <__x86.get_pc_thunk.dx+0xcbe>
  104202:	43                   	inc    %ebx
  104203:	6f                   	outsl  %ds:(%esi),(%dx)
  104204:	6e                   	outsb  %ds:(%esi),(%dx)
  104205:	74 72                	je     104279 <__x86.get_pc_thunk.dx+0xd15>
  104207:	6f                   	outsl  %ds:(%esi),(%dx)
  104208:	6c                   	insb   (%dx),%es:(%edi)
  104209:	6c                   	insb   (%dx),%es:(%edi)
  10420a:	65 72 00             	gs jb  10420d <__x86.get_pc_thunk.dx+0xca9>
  10420d:	50                   	push   %eax
  10420e:	49                   	dec    %ecx
  10420f:	43                   	inc    %ebx
  104210:	4d                   	dec    %ebp
  104211:	47                   	inc    %edi
  104212:	20 32                	and    %dh,(%edx)
  104214:	2e 31 34 20          	xor    %esi,%cs:(%eax,%eiz,1)
  104218:	4d                   	dec    %ebp
  104219:	75 6c                	jne    104287 <__x86.get_pc_thunk.dx+0xd23>
  10421b:	74 69                	je     104286 <__x86.get_pc_thunk.dx+0xd22>
  10421d:	43                   	inc    %ebx
  10421e:	6f                   	outsl  %ds:(%esi),(%dx)
  10421f:	6d                   	insl   (%dx),%es:(%edi)
  104220:	70 75                	jo     104297 <__x86.get_pc_thunk.dx+0xd33>
  104222:	74 69                	je     10428d <__x86.get_pc_thunk.dx+0xd29>
  104224:	6e                   	outsb  %ds:(%esi),(%dx)
  104225:	67 00 49 6e          	add    %cl,0x6e(%bx,%di)
  104229:	66 69 6e 69 62 61    	imul   $0x6162,0x69(%esi),%bp
  10422f:	6e                   	outsb  %ds:(%esi),(%dx)
  104230:	64 00 46 61          	add    %al,%fs:0x61(%esi)
  104234:	62 72 69             	bound  %esi,0x69(%edx)
  104237:	63 00                	arpl   %ax,(%eax)
  104239:	55                   	push   %ebp
  10423a:	6b 6e 6f 77          	imul   $0x77,0x6f(%esi),%ebp
  10423e:	6e                   	outsb  %ds:(%esi),(%dx)
  10423f:	20 28                	and    %ch,(%eax)
  104241:	30 78 00             	xor    %bh,0x0(%eax)
  104244:	29 00                	sub    %eax,(%eax)
  104246:	44                   	inc    %esp
  104247:	69 73 70 6c 61 79 3a 	imul   $0x3a79616c,0x70(%ebx),%esi
  10424e:	20 00                	and    %al,(%eax)
  104250:	56                   	push   %esi
  104251:	47                   	inc    %edi
  104252:	41                   	inc    %ecx
  104253:	20 43 6f             	and    %al,0x6f(%ebx)
  104256:	6e                   	outsb  %ds:(%esi),(%dx)
  104257:	74 72                	je     1042cb <__x86.get_pc_thunk.dx+0xd67>
  104259:	6f                   	outsl  %ds:(%esi),(%dx)
  10425a:	6c                   	insb   (%dx),%es:(%edi)
  10425b:	6c                   	insb   (%dx),%es:(%edi)
  10425c:	65 72 00             	gs jb  10425f <__x86.get_pc_thunk.dx+0xcfb>
  10425f:	58                   	pop    %eax
  104260:	47                   	inc    %edi
  104261:	41                   	inc    %ecx
  104262:	20 43 6f             	and    %al,0x6f(%ebx)
  104265:	6e                   	outsb  %ds:(%esi),(%dx)
  104266:	74 72                	je     1042da <__x86.get_pc_thunk.dx+0xd76>
  104268:	6f                   	outsl  %ds:(%esi),(%dx)
  104269:	6c                   	insb   (%dx),%es:(%edi)
  10426a:	6c                   	insb   (%dx),%es:(%edi)
  10426b:	65 72 00             	gs jb  10426e <__x86.get_pc_thunk.dx+0xd0a>
  10426e:	33 44 20 43          	xor    0x43(%eax,%eiz,1),%eax
  104272:	6f                   	outsl  %ds:(%esi),(%dx)
  104273:	6e                   	outsb  %ds:(%esi),(%dx)
  104274:	74 72                	je     1042e8 <__x86.get_pc_thunk.dx+0xd84>
  104276:	6f                   	outsl  %ds:(%esi),(%dx)
  104277:	6c                   	insb   (%dx),%es:(%edi)
  104278:	6c                   	insb   (%dx),%es:(%edi)
  104279:	65 72 00             	gs jb  10427c <__x86.get_pc_thunk.dx+0xd18>
  10427c:	4d                   	dec    %ebp
  10427d:	75 6c                	jne    1042eb <__x86.get_pc_thunk.dx+0xd87>
  10427f:	74 69                	je     1042ea <__x86.get_pc_thunk.dx+0xd86>
  104281:	6d                   	insl   (%dx),%es:(%edi)
  104282:	65 64 69 61 3a 20 00 	gs imul $0x654d0020,%fs:0x3a(%ecx),%esp
  104289:	4d 65 
  10428b:	6d                   	insl   (%dx),%es:(%edi)
  10428c:	6f                   	outsl  %ds:(%esi),(%dx)
  10428d:	72 79                	jb     104308 <__x86.get_pc_thunk.dx+0xda4>
  10428f:	3a 20                	cmp    (%eax),%ah
  104291:	00 42 72             	add    %al,0x72(%edx)
  104294:	69 64 67 65 3a 20 00 	imul   $0x4800203a,0x65(%edi,%eiz,2),%esp
  10429b:	48 
  10429c:	6f                   	outsl  %ds:(%esi),(%dx)
  10429d:	73 74                	jae    104313 <__x86.get_pc_thunk.dx+0xdaf>
  10429f:	00 49 53             	add    %cl,0x53(%ecx)
  1042a2:	41                   	inc    %ecx
  1042a3:	00 45 49             	add    %al,0x49(%ebp)
  1042a6:	53                   	push   %ebx
  1042a7:	41                   	inc    %ecx
  1042a8:	00 4d 43             	add    %cl,0x43(%ebp)
  1042ab:	41                   	inc    %ecx
  1042ac:	00 50 43             	add    %dl,0x43(%eax)
  1042af:	49                   	dec    %ecx
  1042b0:	2d 74 6f 2d 50       	sub    $0x502d6f74,%eax
  1042b5:	43                   	inc    %ebx
  1042b6:	49                   	dec    %ecx
  1042b7:	00 50 43             	add    %dl,0x43(%eax)
  1042ba:	4d                   	dec    %ebp
  1042bb:	43                   	inc    %ebx
  1042bc:	49                   	dec    %ecx
  1042bd:	41                   	inc    %ecx
  1042be:	00 4e 75             	add    %cl,0x75(%esi)
  1042c1:	42                   	inc    %edx
  1042c2:	75 73                	jne    104337 <__x86.get_pc_thunk.dx+0xdd3>
  1042c4:	00 43 61             	add    %al,0x61(%ebx)
  1042c7:	72 64                	jb     10432d <__x86.get_pc_thunk.dx+0xdc9>
  1042c9:	42                   	inc    %edx
  1042ca:	75 73                	jne    10433f <__x86.get_pc_thunk.dx+0xddb>
  1042cc:	00 52 41             	add    %dl,0x41(%edx)
  1042cf:	43                   	inc    %ebx
  1042d0:	45                   	inc    %ebp
  1042d1:	77 61                	ja     104334 <__x86.get_pc_thunk.dx+0xdd0>
  1042d3:	79 00                	jns    1042d5 <__x86.get_pc_thunk.dx+0xd71>
  1042d5:	49                   	dec    %ecx
  1042d6:	6e                   	outsb  %ds:(%esi),(%dx)
  1042d7:	66 69 6e 69 42 61    	imul   $0x6142,0x69(%esi),%bp
  1042dd:	6e                   	outsb  %ds:(%esi),(%dx)
  1042de:	64 2d 74 6f 2d 50    	fs sub $0x502d6f74,%eax
  1042e4:	43                   	inc    %ebx
  1042e5:	49                   	dec    %ecx
  1042e6:	00 53 69             	add    %dl,0x69(%ebx)
  1042e9:	6d                   	insl   (%dx),%es:(%edi)
  1042ea:	70 6c                	jo     104358 <__x86.get_pc_thunk.dx+0xdf4>
  1042ec:	65 20 43 6f          	and    %al,%gs:0x6f(%ebx)
  1042f0:	6d                   	insl   (%dx),%es:(%edi)
  1042f1:	6d                   	insl   (%dx),%es:(%edi)
  1042f2:	75 6e                	jne    104362 <__x86.get_pc_thunk.dx+0xdfe>
  1042f4:	69 63 61 74 69 6f 6e 	imul   $0x6e6f6974,0x61(%ebx),%esp
  1042fb:	3a 20                	cmp    (%eax),%ah
  1042fd:	00 42 61             	add    %al,0x61(%edx)
  104300:	73 65                	jae    104367 <__x86.get_pc_thunk.dx+0xe03>
  104302:	20 53 79             	and    %dl,0x79(%ebx)
  104305:	73 74                	jae    10437b <__x86.get_pc_thunk.dx+0xe17>
  104307:	65 6d                	gs insl (%dx),%es:(%edi)
  104309:	20 50 65             	and    %dl,0x65(%eax)
  10430c:	72 69                	jb     104377 <__x86.get_pc_thunk.dx+0xe13>
  10430e:	70 68                	jo     104378 <__x86.get_pc_thunk.dx+0xe14>
  104310:	65 72 61             	gs jb  104374 <__x86.get_pc_thunk.dx+0xe10>
  104313:	6c                   	insb   (%dx),%es:(%edi)
  104314:	3a 20                	cmp    (%eax),%ah
  104316:	00 50 49             	add    %dl,0x49(%eax)
  104319:	43                   	inc    %ebx
  10431a:	00 44 4d 41          	add    %al,0x41(%ebp,%ecx,2)
  10431e:	00 54 69 6d          	add    %dl,0x6d(%ecx,%ebp,2)
  104322:	65 72 00             	gs jb  104325 <__x86.get_pc_thunk.dx+0xdc1>
  104325:	52                   	push   %edx
  104326:	54                   	push   %esp
  104327:	43                   	inc    %ebx
  104328:	00 50 43             	add    %dl,0x43(%eax)
  10432b:	49                   	dec    %ecx
  10432c:	20 48 6f             	and    %cl,0x6f(%eax)
  10432f:	74 2d                	je     10435e <__x86.get_pc_thunk.dx+0xdfa>
  104331:	50                   	push   %eax
  104332:	6c                   	insb   (%dx),%es:(%edi)
  104333:	75 67                	jne    10439c <__x86.get_pc_thunk.dx+0xe38>
  104335:	00 53 44             	add    %dl,0x44(%ebx)
  104338:	20 48 6f             	and    %cl,0x6f(%eax)
  10433b:	73 74                	jae    1043b1 <__x86.get_pc_thunk.dx+0xe4d>
  10433d:	00 49 4f             	add    %cl,0x4f(%ecx)
  104340:	4d                   	dec    %ebp
  104341:	4d                   	dec    %ebp
  104342:	55                   	push   %ebp
  104343:	00 53 65             	add    %dl,0x65(%ebx)
  104346:	72 69                	jb     1043b1 <__x86.get_pc_thunk.dx+0xe4d>
  104348:	61                   	popa   
  104349:	6c                   	insb   (%dx),%es:(%edi)
  10434a:	20 42 75             	and    %al,0x75(%edx)
  10434d:	73 3a                	jae    104389 <__x86.get_pc_thunk.dx+0xe25>
  10434f:	20 00                	and    %al,(%eax)
  104351:	46                   	inc    %esi
  104352:	69 72 65 57 69 72 65 	imul   $0x65726957,0x65(%edx),%esi
  104359:	20 28                	and    %ch,(%eax)
  10435b:	49                   	dec    %ecx
  10435c:	45                   	inc    %ebp
  10435d:	45                   	inc    %ebp
  10435e:	45                   	inc    %ebp
  10435f:	20 31                	and    %dh,(%ecx)
  104361:	33 39                	xor    (%ecx),%edi
  104363:	34 29                	xor    $0x29,%al
  104365:	00 41 43             	add    %al,0x43(%ecx)
  104368:	43                   	inc    %ebx
  104369:	45                   	inc    %ebp
  10436a:	53                   	push   %ebx
  10436b:	53                   	push   %ebx
  10436c:	20 42 75             	and    %al,0x75(%edx)
  10436f:	73 00                	jae    104371 <__x86.get_pc_thunk.dx+0xe0d>
  104371:	53                   	push   %ebx
  104372:	53                   	push   %ebx
  104373:	41                   	inc    %ecx
  104374:	00 55 53             	add    %dl,0x53(%ebp)
  104377:	42                   	inc    %edx
  104378:	00 46 69             	add    %al,0x69(%esi)
  10437b:	62 72 65             	bound  %esi,0x65(%edx)
  10437e:	00 53 4d             	add    %dl,0x4d(%ebx)
  104381:	42                   	inc    %edx
  104382:	75 73                	jne    1043f7 <__x86.get_pc_thunk.dx+0xe93>
  104384:	00 49 6e             	add    %cl,0x6e(%ecx)
  104387:	66 69 6e 69 42 61    	imul   $0x6142,0x69(%esi),%bp
  10438d:	6e                   	outsb  %ds:(%esi),(%dx)
  10438e:	64 20 43 6f          	and    %al,%fs:0x6f(%ebx)
  104392:	6e                   	outsb  %ds:(%esi),(%dx)
  104393:	74 72                	je     104407 <__x86.get_pc_thunk.dx+0xea3>
  104395:	6f                   	outsl  %ds:(%esi),(%dx)
  104396:	6c                   	insb   (%dx),%es:(%edi)
  104397:	6c                   	insb   (%dx),%es:(%edi)
  104398:	65 72 00             	gs jb  10439b <__x86.get_pc_thunk.dx+0xe37>
  10439b:	49                   	dec    %ecx
  10439c:	50                   	push   %eax
  10439d:	4d                   	dec    %ebp
  10439e:	49                   	dec    %ecx
  10439f:	20 49 6e             	and    %cl,0x6e(%ecx)
  1043a2:	74 65                	je     104409 <__x86.get_pc_thunk.dx+0xea5>
  1043a4:	72 66                	jb     10440c <__x86.get_pc_thunk.dx+0xea8>
  1043a6:	61                   	popa   
  1043a7:	63 65 00             	arpl   %sp,0x0(%ebp)
  1043aa:	53                   	push   %ebx
  1043ab:	45                   	inc    %ebp
  1043ac:	52                   	push   %edx
  1043ad:	43                   	inc    %ebx
  1043ae:	4f                   	dec    %edi
  1043af:	53                   	push   %ebx
  1043b0:	20 49 6e             	and    %cl,0x6e(%ecx)
  1043b3:	74 65                	je     10441a <__x86.get_pc_thunk.dx+0xeb6>
  1043b5:	72 66                	jb     10441d <__x86.get_pc_thunk.dx+0xeb9>
  1043b7:	61                   	popa   
  1043b8:	63 65 20             	arpl   %sp,0x20(%ebp)
  1043bb:	28 49 45             	sub    %cl,0x45(%ecx)
  1043be:	43                   	inc    %ebx
  1043bf:	20 36                	and    %dh,(%esi)
  1043c1:	31 34 39             	xor    %esi,(%ecx,%edi,1)
  1043c4:	31 29                	xor    %ebp,(%ecx)
  1043c6:	00 43 41             	add    %al,0x41(%ebx)
  1043c9:	4e                   	dec    %esi
  1043ca:	62 75 73             	bound  %esi,0x73(%ebp)
  1043cd:	20 43 6f             	and    %al,0x6f(%ebx)
  1043d0:	6e                   	outsb  %ds:(%esi),(%dx)
  1043d1:	74 72                	je     104445 <__x86.get_pc_thunk.dx+0xee1>
  1043d3:	6f                   	outsl  %ds:(%esi),(%dx)
  1043d4:	6c                   	insb   (%dx),%es:(%edi)
  1043d5:	6c                   	insb   (%dx),%es:(%edi)
  1043d6:	65 72 00             	gs jb  1043d9 <__x86.get_pc_thunk.dx+0xe75>
  1043d9:	20 49 6e             	and    %cl,0x6e(%ecx)
  1043dc:	74 65                	je     104443 <__x86.get_pc_thunk.dx+0xedf>
  1043de:	6c                   	insb   (%dx),%es:(%edi)
  1043df:	00 20                	add    %ah,(%eax)
  1043e1:	41                   	inc    %ecx
  1043e2:	4d                   	dec    %ebp
  1043e3:	44                   	inc    %esp
  1043e4:	20 00                	and    %al,(%eax)
  1043e6:	61                   	popa   
  1043e7:	6d                   	insl   (%dx),%es:(%edi)
  1043e8:	37                   	aaa    
  1043e9:	39 63 39             	cmp    %esp,0x39(%ebx)
  1043ec:	37                   	aaa    
  1043ed:	33 00                	xor    (%eax),%eax
  1043ef:	00 14 c5 ff ff 32 c5 	add    %dl,-0x3acd0001(,%eax,8)
  1043f6:	ff                   	(bad)  
  1043f7:	ff 4b c5             	decl   -0x3b(%ebx)
  1043fa:	ff                   	(bad)  
  1043fb:	ff                   	(bad)  
  1043fc:	fe c6                	inc    %dh
  1043fe:	ff                   	(bad)  
  1043ff:	ff                   	(bad)  
  104400:	fb                   	sti    
  104401:	c7                   	(bad)  
  104402:	ff                   	(bad)  
  104403:	ff 19                	lcall  *(%ecx)
  104405:	c8 ff ff 37          	enter  $0xffff,$0x37
  104409:	c8 ff ff 26          	enter  $0xffff,$0x26
  10440d:	ca ff ff             	lret   $0xffff
  104410:	44                   	inc    %esp
  104411:	ca ff ff             	lret   $0xffff
  104414:	81 cd ff ff 81 cd    	or     $0xcd81ffff,%ebp
  10441a:	ff                   	(bad)  
  10441b:	ff 81 cd ff ff b7    	incl   -0x48000033(%ecx)
  104421:	cb                   	lret   
  104422:	ff                   	(bad)  
  104423:	ff 85 c5 ff ff a3    	incl   -0x5c00003b(%ebp)
  104429:	c5 ff ff             	(bad)  
  10442c:	c1 c5 ff             	rol    $0xff,%ebp
  10442f:	ff                   	(bad)  
  104430:	df c5                	ffreep %st(5)
  104432:	ff                   	(bad)  
  104433:	ff                   	(bad)  
  104434:	fd                   	std    
  104435:	c5 ff ff             	(bad)  
  104438:	1b c6                	sbb    %esi,%eax
  10443a:	ff                   	(bad)  
  10443b:	ff                   	(bad)  
  10443c:	39 c6                	cmp    %eax,%esi
  10443e:	ff                   	(bad)  
  10443f:	ff 57 c6             	call   *-0x3a(%edi)
  104442:	ff                   	(bad)  
  104443:	ff 75 c6             	push   -0x3a(%ebp)
  104446:	ff                   	(bad)  
  104447:	ff 71 c8             	push   -0x38(%ecx)
  10444a:	ff                   	(bad)  
  10444b:	ff 8f c8 ff ff ad    	decl   -0x52000038(%edi)
  104451:	c8 ff ff cb          	enter  $0xffff,$0xcb
  104455:	c8 ff ff e9          	enter  $0xffff,$0xe9
  104459:	c8 ff ff 07          	enter  $0xffff,$0x7
  10445d:	c9                   	leave  
  10445e:	ff                   	(bad)  
  10445f:	ff 25 c9 ff ff 43    	jmp    *0x43ffffc9
  104465:	c9                   	leave  
  104466:	ff                   	(bad)  
  104467:	ff 61 c9             	jmp    *-0x37(%ecx)
  10446a:	ff                   	(bad)  
  10446b:	ff                   	(bad)  
  10446c:	7f c9                	jg     104437 <__x86.get_pc_thunk.dx+0xed3>
  10446e:	ff                   	(bad)  
  10446f:	ff 9d c9 ff ff 7e    	lcall  *0x7effffc9(%ebp)
  104475:	ca ff ff             	lret   $0xffff
  104478:	9c                   	pushf  
  104479:	ca ff ff             	lret   $0xffff
  10447c:	ba ca ff ff d8       	mov    $0xd8ffffca,%edx
  104481:	ca ff ff             	lret   $0xffff
  104484:	f6 ca ff             	test   $0xff,%dl
  104487:	ff 14 cb             	call   *(%ebx,%ecx,8)
  10448a:	ff                   	(bad)  
  10448b:	ff 32                	push   (%edx)
  10448d:	cb                   	lret   
  10448e:	ff                   	(bad)  
  10448f:	ff f1                	push   %ecx
  104491:	cb                   	lret   
  104492:	ff                   	(bad)  
  104493:	ff 0f                	decl   (%edi)
  104495:	cc                   	int3   
  104496:	ff                   	(bad)  
  104497:	ff 2d cc ff ff 4b    	ljmp   *0x4bffffcc
  10449d:	cc                   	int3   
  10449e:	ff                   	(bad)  
  10449f:	ff 69 cc             	ljmp   *-0x34(%ecx)
  1044a2:	ff                   	(bad)  
  1044a3:	ff 87 cc ff ff a5    	incl   -0x5a000034(%edi)
  1044a9:	cc                   	int3   
  1044aa:	ff                   	(bad)  
  1044ab:	ff c3                	inc    %ebx
  1044ad:	cc                   	int3   
  1044ae:	ff                   	(bad)  
  1044af:	ff e1                	jmp    *%ecx
  1044b1:	cc                   	int3   
  1044b2:	ff                   	(bad)  
  1044b3:	ff                   	(bad)  
  1044b4:	ff cc                	dec    %esp
  1044b6:	ff                   	(bad)  
  1044b7:	ff 50 43             	call   *0x43(%eax)
  1044ba:	49                   	dec    %ecx
  1044bb:	20 00                	and    %al,(%eax)
  1044bd:	3a 00                	cmp    (%eax),%al
  1044bf:	2e 00 20             	add    %ah,%cs:(%eax)
  1044c2:	00 20                	add    %ah,(%eax)
  1044c4:	28 4e 49             	sub    %cl,0x49(%esi)
  1044c7:	29 00                	sub    %eax,(%eax)
  1044c9:	0a 00                	or     (%eax),%al
  1044cb:	44                   	inc    %esp
  1044cc:	69 76 69 73 69 6f 6e 	imul   $0x6e6f6973,0x69(%esi),%esi
  1044d3:	20 42 79             	and    %al,0x79(%edx)
  1044d6:	20 5a 65             	and    %bl,0x65(%edx)
  1044d9:	72 6f                	jb     10454a <__x86.get_pc_thunk.dx+0xfe6>
  1044db:	00 44 65 62          	add    %al,0x62(%ebp,%eiz,2)
  1044df:	75 67                	jne    104548 <__x86.get_pc_thunk.dx+0xfe4>
  1044e1:	00 4e 6f             	add    %cl,0x6f(%esi)
  1044e4:	6e                   	outsb  %ds:(%esi),(%dx)
  1044e5:	20 4d 61             	and    %cl,0x61(%ebp)
  1044e8:	73 6b                	jae    104555 <__x86.get_pc_thunk.dx+0xff1>
  1044ea:	61                   	popa   
  1044eb:	62 6c 65 20          	bound  %ebp,0x20(%ebp,%eiz,2)
  1044ef:	49                   	dec    %ecx
  1044f0:	6e                   	outsb  %ds:(%esi),(%dx)
  1044f1:	74 65                	je     104558 <__x86.get_pc_thunk.dx+0xff4>
  1044f3:	72 72                	jb     104567 <__x86.get_pc_thunk.dx+0x1003>
  1044f5:	75 70                	jne    104567 <__x86.get_pc_thunk.dx+0x1003>
  1044f7:	74 00                	je     1044f9 <__x86.get_pc_thunk.dx+0xf95>
  1044f9:	42                   	inc    %edx
  1044fa:	72 65                	jb     104561 <__x86.get_pc_thunk.dx+0xffd>
  1044fc:	61                   	popa   
  1044fd:	6b 70 6f 69          	imul   $0x69,0x6f(%eax),%esi
  104501:	6e                   	outsb  %ds:(%esi),(%dx)
  104502:	74 00                	je     104504 <__x86.get_pc_thunk.dx+0xfa0>
  104504:	49                   	dec    %ecx
  104505:	6e                   	outsb  %ds:(%esi),(%dx)
  104506:	74 6f                	je     104577 <__x86.get_pc_thunk.dx+0x1013>
  104508:	20 44 65 74          	and    %al,0x74(%ebp,%eiz,2)
  10450c:	65 63 74 65 64       	arpl   %si,%gs:0x64(%ebp,%eiz,2)
  104511:	20 4f 76             	and    %cl,0x76(%edi)
  104514:	65 72 66             	gs jb  10457d <__x86.get_pc_thunk.dx+0x1019>
  104517:	6c                   	insb   (%dx),%es:(%edi)
  104518:	6f                   	outsl  %ds:(%esi),(%dx)
  104519:	77 00                	ja     10451b <__x86.get_pc_thunk.dx+0xfb7>
  10451b:	4f                   	dec    %edi
  10451c:	75 74                	jne    104592 <__x86.get_pc_thunk.dx+0x102e>
  10451e:	20 6f 66             	and    %ch,0x66(%edi)
  104521:	20 42 6f             	and    %al,0x6f(%edx)
  104524:	75 6e                	jne    104594 <__x86.get_pc_thunk.dx+0x1030>
  104526:	64 73 00             	fs jae 104529 <__x86.get_pc_thunk.dx+0xfc5>
  104529:	49                   	dec    %ecx
  10452a:	6e                   	outsb  %ds:(%esi),(%dx)
  10452b:	76 61                	jbe    10458e <__x86.get_pc_thunk.dx+0x102a>
  10452d:	6c                   	insb   (%dx),%es:(%edi)
  10452e:	69 64 20 4f 70 63 6f 	imul   $0x646f6370,0x4f(%eax,%eiz,1),%esp
  104535:	64 
  104536:	65 00 4e 6f          	add    %cl,%gs:0x6f(%esi)
  10453a:	20 43 6f             	and    %al,0x6f(%ebx)
  10453d:	70 72                	jo     1045b1 <__x86.get_pc_thunk.dx+0x104d>
  10453f:	6f                   	outsl  %ds:(%esi),(%dx)
  104540:	63 65 73             	arpl   %sp,0x73(%ebp)
  104543:	73 6f                	jae    1045b4 <__x86.get_pc_thunk.dx+0x1050>
  104545:	72 00                	jb     104547 <__x86.get_pc_thunk.dx+0xfe3>
  104547:	44                   	inc    %esp
  104548:	6f                   	outsl  %ds:(%esi),(%dx)
  104549:	75 62                	jne    1045ad <__x86.get_pc_thunk.dx+0x1049>
  10454b:	6c                   	insb   (%dx),%es:(%edi)
  10454c:	65 20 46 61          	and    %al,%gs:0x61(%esi)
  104550:	75 6c                	jne    1045be <__x86.get_pc_thunk.dx+0x105a>
  104552:	74 00                	je     104554 <__x86.get_pc_thunk.dx+0xff0>
  104554:	43                   	inc    %ebx
  104555:	6f                   	outsl  %ds:(%esi),(%dx)
  104556:	70 72                	jo     1045ca <__x86.get_pc_thunk.dx+0x1066>
  104558:	6f                   	outsl  %ds:(%esi),(%dx)
  104559:	63 65 73             	arpl   %sp,0x73(%ebp)
  10455c:	73 6f                	jae    1045cd <__x86.get_pc_thunk.dx+0x1069>
  10455e:	72 20                	jb     104580 <__x86.get_pc_thunk.dx+0x101c>
  104560:	53                   	push   %ebx
  104561:	65 67 6d             	gs insl (%dx),%es:(%di)
  104564:	65 6e                	outsb  %gs:(%esi),(%dx)
  104566:	74 20                	je     104588 <__x86.get_pc_thunk.dx+0x1024>
  104568:	4f                   	dec    %edi
  104569:	76 65                	jbe    1045d0 <__x86.get_pc_thunk.dx+0x106c>
  10456b:	72 72                	jb     1045df <__x86.get_pc_thunk.dx+0x107b>
  10456d:	75 6e                	jne    1045dd <__x86.get_pc_thunk.dx+0x1079>
  10456f:	00 42 61             	add    %al,0x61(%edx)
  104572:	64 20 54 53 53       	and    %dl,%fs:0x53(%ebx,%edx,2)
  104577:	00 53 65             	add    %dl,0x65(%ebx)
  10457a:	67 6d                	insl   (%dx),%es:(%di)
  10457c:	65 6e                	outsb  %gs:(%esi),(%dx)
  10457e:	74 20                	je     1045a0 <__x86.get_pc_thunk.dx+0x103c>
  104580:	4e                   	dec    %esi
  104581:	6f                   	outsl  %ds:(%esi),(%dx)
  104582:	74 20                	je     1045a4 <__x86.get_pc_thunk.dx+0x1040>
  104584:	50                   	push   %eax
  104585:	72 65                	jb     1045ec <__x86.get_pc_thunk.dx+0x1088>
  104587:	73 65                	jae    1045ee <__x86.get_pc_thunk.dx+0x108a>
  104589:	6e                   	outsb  %ds:(%esi),(%dx)
  10458a:	74 00                	je     10458c <__x86.get_pc_thunk.dx+0x1028>
  10458c:	53                   	push   %ebx
  10458d:	74 61                	je     1045f0 <__x86.get_pc_thunk.dx+0x108c>
  10458f:	63 6b 20             	arpl   %bp,0x20(%ebx)
  104592:	46                   	inc    %esi
  104593:	61                   	popa   
  104594:	75 6c                	jne    104602 <__x86.get_pc_thunk.dx+0x109e>
  104596:	74 00                	je     104598 <__x86.get_pc_thunk.dx+0x1034>
  104598:	47                   	inc    %edi
  104599:	65 6e                	outsb  %gs:(%esi),(%dx)
  10459b:	65 72 61             	gs jb  1045ff <__x86.get_pc_thunk.dx+0x109b>
  10459e:	6c                   	insb   (%dx),%es:(%edi)
  10459f:	20 50 72             	and    %dl,0x72(%eax)
  1045a2:	6f                   	outsl  %ds:(%esi),(%dx)
  1045a3:	74 65                	je     10460a <__x86.get_pc_thunk.dx+0x10a6>
  1045a5:	63 74 69 6f          	arpl   %si,0x6f(%ecx,%ebp,2)
  1045a9:	6e                   	outsb  %ds:(%esi),(%dx)
  1045aa:	20 46 61             	and    %al,0x61(%esi)
  1045ad:	75 6c                	jne    10461b <__x86.get_pc_thunk.dx+0x10b7>
  1045af:	74 00                	je     1045b1 <__x86.get_pc_thunk.dx+0x104d>
  1045b1:	50                   	push   %eax
  1045b2:	61                   	popa   
  1045b3:	67 65 20 46 61       	and    %al,%gs:0x61(%bp)
  1045b8:	75 6c                	jne    104626 <__x86.get_pc_thunk.dx+0x10c2>
  1045ba:	74 00                	je     1045bc <__x86.get_pc_thunk.dx+0x1058>
  1045bc:	55                   	push   %ebp
  1045bd:	6e                   	outsb  %ds:(%esi),(%dx)
  1045be:	6b 6e 6f 77          	imul   $0x77,0x6f(%esi),%ebp
  1045c2:	6e                   	outsb  %ds:(%esi),(%dx)
  1045c3:	20 49 6e             	and    %cl,0x6e(%ecx)
  1045c6:	74 65                	je     10462d <__x86.get_pc_thunk.dx+0x10c9>
  1045c8:	72 72                	jb     10463c <__x86.get_pc_thunk.dx+0x10d8>
  1045ca:	75 70                	jne    10463c <__x86.get_pc_thunk.dx+0x10d8>
  1045cc:	74 00                	je     1045ce <__x86.get_pc_thunk.dx+0x106a>
  1045ce:	43                   	inc    %ebx
  1045cf:	6f                   	outsl  %ds:(%esi),(%dx)
  1045d0:	70 72                	jo     104644 <__x86.get_pc_thunk.dx+0x10e0>
  1045d2:	6f                   	outsl  %ds:(%esi),(%dx)
  1045d3:	63 65 73             	arpl   %sp,0x73(%ebp)
  1045d6:	73 6f                	jae    104647 <__x86.get_pc_thunk.dx+0x10e3>
  1045d8:	72 20                	jb     1045fa <__x86.get_pc_thunk.dx+0x1096>
  1045da:	46                   	inc    %esi
  1045db:	61                   	popa   
  1045dc:	75 6c                	jne    10464a <__x86.get_pc_thunk.dx+0x10e6>
  1045de:	74 00                	je     1045e0 <__x86.get_pc_thunk.dx+0x107c>
  1045e0:	41                   	inc    %ecx
  1045e1:	6c                   	insb   (%dx),%es:(%edi)
  1045e2:	69 67 6e 6d 65 6e 74 	imul   $0x746e656d,0x6e(%edi),%esp
  1045e9:	20 43 68             	and    %al,0x68(%ebx)
  1045ec:	65 63 6b 00          	arpl   %bp,%gs:0x0(%ebx)
  1045f0:	4d                   	dec    %ebp
  1045f1:	61                   	popa   
  1045f2:	63 68 69             	arpl   %bp,0x69(%eax)
  1045f5:	6e                   	outsb  %ds:(%esi),(%dx)
  1045f6:	65 20 43 68          	and    %al,%gs:0x68(%ebx)
  1045fa:	65 63 6b 00          	arpl   %bp,%gs:0x0(%ebx)
  1045fe:	52                   	push   %edx
  1045ff:	65 73 65             	gs jae 104667 <__x86.get_pc_thunk.dx+0x1103>
  104602:	72 76                	jb     10467a <__x86.get_pc_thunk.dx+0x1116>
  104604:	65 64 00 52 65       	gs add %dl,%fs:0x65(%edx)
  104609:	63 65 69             	arpl   %sp,0x69(%ebp)
  10460c:	76 65                	jbe    104673 <__x86.get_pc_thunk.dx+0x110f>
  10460e:	64 20 49 6e          	and    %cl,%fs:0x6e(%ecx)
  104612:	74 65                	je     104679 <__x86.get_pc_thunk.dx+0x1115>
  104614:	72 72                	jb     104688 <__x86.get_pc_thunk.dx+0x1124>
  104616:	75 70                	jne    104688 <__x86.get_pc_thunk.dx+0x1124>
  104618:	74 3a                	je     104654 <__x86.get_pc_thunk.dx+0x10f0>
  10461a:	20 00                	and    %al,(%eax)
  10461c:	0a 00                	or     (%eax),%al
  10461e:	30 31                	xor    %dh,(%ecx)
  104620:	32 33                	xor    (%ebx),%dh
  104622:	34 35                	xor    $0x35,%al
  104624:	36 37                	ss aaa 
  104626:	38 39                	cmp    %bh,(%ecx)
  104628:	41                   	inc    %ecx
  104629:	42                   	inc    %edx
  10462a:	43                   	inc    %ebx
  10462b:	44                   	inc    %esp
  10462c:	45                   	inc    %ebp
  10462d:	46                   	inc    %esi
	...

Disassembly of section .eh_frame:

00104630 <.eh_frame>:
  104630:	14 00                	adc    $0x0,%al
  104632:	00 00                	add    %al,(%eax)
  104634:	00 00                	add    %al,(%eax)
  104636:	00 00                	add    %al,(%eax)
  104638:	01 7a 52             	add    %edi,0x52(%edx)
  10463b:	00 01                	add    %al,(%ecx)
  10463d:	7c 08                	jl     104647 <__x86.get_pc_thunk.dx+0x10e3>
  10463f:	01 1b                	add    %ebx,(%ebx)
  104641:	0c 04                	or     $0x4,%al
  104643:	04 88                	add    $0x88,%al
  104645:	01 00                	add    %eax,(%eax)
  104647:	00 20                	add    %ah,(%eax)
  104649:	00 00                	add    %al,(%eax)
  10464b:	00 1c 00             	add    %bl,(%eax,%eax,1)
  10464e:	00 00                	add    %al,(%eax)
  104650:	e6 bb                	out    %al,$0xbb
  104652:	ff                   	(bad)  
  104653:	ff 5c 00 00          	lcall  *0x0(%eax,%eax,1)
  104657:	00 00                	add    %al,(%eax)
  104659:	41                   	inc    %ecx
  10465a:	0e                   	push   %cs
  10465b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104661:	44                   	inc    %esp
  104662:	83 03 02             	addl   $0x2,(%ebx)
  104665:	54                   	push   %esp
  104666:	c5 c3 0c             	(bad)
  104669:	04 04                	add    $0x4,%al
  10466b:	00 20                	add    %ah,(%eax)
  10466d:	00 00                	add    %al,(%eax)
  10466f:	00 40 00             	add    %al,0x0(%eax)
  104672:	00 00                	add    %al,(%eax)
  104674:	1e                   	push   %ds
  104675:	bc ff ff 38 00       	mov    $0x38ffff,%esp
  10467a:	00 00                	add    %al,(%eax)
  10467c:	00 41 0e             	add    %al,0xe(%ecx)
  10467f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104685:	44                   	inc    %esp
  104686:	83 03 70             	addl   $0x70,(%ebx)
  104689:	c5 c3 0c             	(bad)
  10468c:	04 04                	add    $0x4,%al
  10468e:	00 00                	add    %al,(%eax)
  104690:	20 00                	and    %al,(%eax)
  104692:	00 00                	add    %al,(%eax)
  104694:	64 00 00             	add    %al,%fs:(%eax)
  104697:	00 32                	add    %dh,(%edx)
  104699:	bc ff ff 77 00       	mov    $0x77ffff,%esp
  10469e:	00 00                	add    %al,(%eax)
  1046a0:	00 41 0e             	add    %al,0xe(%ecx)
  1046a3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  1046a9:	44                   	inc    %esp
  1046aa:	83 03 02             	addl   $0x2,(%ebx)
  1046ad:	6f                   	outsl  %ds:(%esi),(%dx)
  1046ae:	c5 c3 0c             	(bad)
  1046b1:	04 04                	add    $0x4,%al
  1046b3:	00 20                	add    %ah,(%eax)
  1046b5:	00 00                	add    %al,(%eax)
  1046b7:	00 88 00 00 00 85    	add    %cl,-0x7b000000(%eax)
  1046bd:	bc ff ff c7 00       	mov    $0xc7ffff,%esp
  1046c2:	00 00                	add    %al,(%eax)
  1046c4:	00 41 0e             	add    %al,0xe(%ecx)
  1046c7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  1046cd:	44                   	inc    %esp
  1046ce:	83 03 02             	addl   $0x2,(%ebx)
  1046d1:	bf c5 c3 0c 04       	mov    $0x40cc3c5,%edi
  1046d6:	04 00                	add    $0x0,%al
  1046d8:	20 00                	and    %al,(%eax)
  1046da:	00 00                	add    %al,(%eax)
  1046dc:	ac                   	lods   %ds:(%esi),%al
  1046dd:	00 00                	add    %al,(%eax)
  1046df:	00 28                	add    %ch,(%eax)
  1046e1:	bd ff ff ec 00       	mov    $0xecffff,%ebp
  1046e6:	00 00                	add    %al,(%eax)
  1046e8:	00 41 0e             	add    %al,0xe(%ecx)
  1046eb:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  1046f1:	44                   	inc    %esp
  1046f2:	83 03 02             	addl   $0x2,(%ebx)
  1046f5:	e4 c5                	in     $0xc5,%al
  1046f7:	c3                   	ret    
  1046f8:	0c 04                	or     $0x4,%al
  1046fa:	04 00                	add    $0x0,%al
  1046fc:	20 00                	and    %al,(%eax)
  1046fe:	00 00                	add    %al,(%eax)
  104700:	d0 00                	rolb   (%eax)
  104702:	00 00                	add    %al,(%eax)
  104704:	f0 bd ff ff 2d 00    	lock mov $0x2dffff,%ebp
  10470a:	00 00                	add    %al,(%eax)
  10470c:	00 41 0e             	add    %al,0xe(%ecx)
  10470f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104715:	44                   	inc    %esp
  104716:	83 03 65             	addl   $0x65,(%ebx)
  104719:	c5 c3 0c             	(bad)
  10471c:	04 04                	add    $0x4,%al
  10471e:	00 00                	add    %al,(%eax)
  104720:	18 00                	sbb    %al,(%eax)
  104722:	00 00                	add    %al,(%eax)
  104724:	f4                   	hlt    
  104725:	00 00                	add    %al,(%eax)
  104727:	00 f9                	add    %bh,%cl
  104729:	bd ff ff 05 02       	mov    $0x205ffff,%ebp
  10472e:	00 00                	add    %al,(%eax)
  104730:	00 41 0e             	add    %al,0xe(%ecx)
  104733:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104739:	44                   	inc    %esp
  10473a:	83 03 10             	addl   $0x10,(%ebx)
  10473d:	00 00                	add    %al,(%eax)
  10473f:	00 10                	add    %dl,(%eax)
  104741:	01 00                	add    %eax,(%eax)
  104743:	00 18                	add    %bl,(%eax)
  104745:	ee                   	out    %al,(%dx)
  104746:	ff                   	(bad)  
  104747:	ff 04 00             	incl   (%eax,%eax,1)
  10474a:	00 00                	add    %al,(%eax)
  10474c:	00 00                	add    %al,(%eax)
  10474e:	00 00                	add    %al,(%eax)
  104750:	10 00                	adc    %al,(%eax)
  104752:	00 00                	add    %al,(%eax)
  104754:	24 01                	and    $0x1,%al
  104756:	00 00                	add    %al,(%eax)
  104758:	08 ee                	or     %ch,%dh
  10475a:	ff                   	(bad)  
  10475b:	ff 04 00             	incl   (%eax,%eax,1)
  10475e:	00 00                	add    %al,(%eax)
  104760:	00 00                	add    %al,(%eax)
  104762:	00 00                	add    %al,(%eax)
  104764:	20 00                	and    %al,(%eax)
  104766:	00 00                	add    %al,(%eax)
  104768:	38 01                	cmp    %al,(%ecx)
  10476a:	00 00                	add    %al,(%eax)
  10476c:	ba bf ff ff 2d       	mov    $0x2dffffbf,%edx
  104771:	00 00                	add    %al,(%eax)
  104773:	00 00                	add    %al,(%eax)
  104775:	41                   	inc    %ecx
  104776:	0e                   	push   %cs
  104777:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  10477d:	44                   	inc    %esp
  10477e:	83 03 65             	addl   $0x65,(%ebx)
  104781:	c5 c3 0c             	(bad)
  104784:	04 04                	add    $0x4,%al
  104786:	00 00                	add    %al,(%eax)
  104788:	20 00                	and    %al,(%eax)
  10478a:	00 00                	add    %al,(%eax)
  10478c:	5c                   	pop    %esp
  10478d:	01 00                	add    %eax,(%eax)
  10478f:	00 c3                	add    %al,%bl
  104791:	bf ff ff 2d 00       	mov    $0x2dffff,%edi
  104796:	00 00                	add    %al,(%eax)
  104798:	00 41 0e             	add    %al,0xe(%ecx)
  10479b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  1047a1:	44                   	inc    %esp
  1047a2:	83 03 65             	addl   $0x65,(%ebx)
  1047a5:	c5 c3 0c             	(bad)
  1047a8:	04 04                	add    $0x4,%al
  1047aa:	00 00                	add    %al,(%eax)
  1047ac:	20 00                	and    %al,(%eax)
  1047ae:	00 00                	add    %al,(%eax)
  1047b0:	80 01 00             	addb   $0x0,(%ecx)
  1047b3:	00 cc                	add    %cl,%ah
  1047b5:	bf ff ff ef 00       	mov    $0xefffff,%edi
  1047ba:	00 00                	add    %al,(%eax)
  1047bc:	00 41 0e             	add    %al,0xe(%ecx)
  1047bf:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  1047c5:	44                   	inc    %esp
  1047c6:	83 03 02             	addl   $0x2,(%ebx)
  1047c9:	e7 c5                	out    %eax,$0xc5
  1047cb:	c3                   	ret    
  1047cc:	0c 04                	or     $0x4,%al
  1047ce:	04 00                	add    $0x0,%al
  1047d0:	20 00                	and    %al,(%eax)
  1047d2:	00 00                	add    %al,(%eax)
  1047d4:	a4                   	movsb  %ds:(%esi),%es:(%edi)
  1047d5:	01 00                	add    %eax,(%eax)
  1047d7:	00 97 c0 ff ff 0a    	add    %dl,0xaffffc0(%edi)
  1047dd:	03 00                	add    (%eax),%eax
  1047df:	00 00                	add    %al,(%eax)
  1047e1:	41                   	inc    %ecx
  1047e2:	0e                   	push   %cs
  1047e3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  1047e9:	44                   	inc    %esp
  1047ea:	83 03 03             	addl   $0x3,(%ebx)
  1047ed:	00 03                	add    %al,(%ebx)
  1047ef:	c5 c3 0c             	(bad)
  1047f2:	04 04                	add    $0x4,%al
  1047f4:	20 00                	and    %al,(%eax)
  1047f6:	00 00                	add    %al,(%eax)
  1047f8:	c8 01 00 00          	enter  $0x1,$0x0
  1047fc:	7d c3                	jge    1047c1 <__x86.get_pc_thunk.dx+0x125d>
  1047fe:	ff                   	(bad)  
  1047ff:	ff 14 02             	call   *(%edx,%eax,1)
  104802:	00 00                	add    %al,(%eax)
  104804:	00 41 0e             	add    %al,0xe(%ecx)
  104807:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  10480d:	44                   	inc    %esp
  10480e:	83 03 03             	addl   $0x3,(%ebx)
  104811:	0c 02                	or     $0x2,%al
  104813:	c5 c3 0c             	(bad)
  104816:	04 04                	add    $0x4,%al
  104818:	20 00                	and    %al,(%eax)
  10481a:	00 00                	add    %al,(%eax)
  10481c:	ec                   	in     (%dx),%al
  10481d:	01 00                	add    %eax,(%eax)
  10481f:	00 6d c5             	add    %ch,-0x3b(%ebp)
  104822:	ff                   	(bad)  
  104823:	ff 23                	jmp    *(%ebx)
  104825:	02 00                	add    (%eax),%al
  104827:	00 00                	add    %al,(%eax)
  104829:	41                   	inc    %ecx
  10482a:	0e                   	push   %cs
  10482b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104831:	44                   	inc    %esp
  104832:	83 03 03             	addl   $0x3,(%ebx)
  104835:	1b 02                	sbb    (%edx),%eax
  104837:	c5 c3 0c             	(bad)
  10483a:	04 04                	add    $0x4,%al
  10483c:	20 00                	and    %al,(%eax)
  10483e:	00 00                	add    %al,(%eax)
  104840:	10 02                	adc    %al,(%edx)
  104842:	00 00                	add    %al,(%eax)
  104844:	6c                   	insb   (%dx),%es:(%edi)
  104845:	c7                   	(bad)  
  104846:	ff                   	(bad)  
  104847:	ff cd                	dec    %ebp
  104849:	00 00                	add    %al,(%eax)
  10484b:	00 00                	add    %al,(%eax)
  10484d:	41                   	inc    %ecx
  10484e:	0e                   	push   %cs
  10484f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104855:	44                   	inc    %esp
  104856:	83 03 02             	addl   $0x2,(%ebx)
  104859:	c5 c5 c3             	(bad)
  10485c:	0c 04                	or     $0x4,%al
  10485e:	04 00                	add    $0x0,%al
  104860:	20 00                	and    %al,(%eax)
  104862:	00 00                	add    %al,(%eax)
  104864:	34 02                	xor    $0x2,%al
  104866:	00 00                	add    %al,(%eax)
  104868:	15 c8 ff ff ee       	adc    $0xeeffffc8,%eax
  10486d:	00 00                	add    %al,(%eax)
  10486f:	00 00                	add    %al,(%eax)
  104871:	41                   	inc    %ecx
  104872:	0e                   	push   %cs
  104873:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104879:	44                   	inc    %esp
  10487a:	83 03 02             	addl   $0x2,(%ebx)
  10487d:	e6 c5                	out    %al,$0xc5
  10487f:	c3                   	ret    
  104880:	0c 04                	or     $0x4,%al
  104882:	04 00                	add    $0x0,%al
  104884:	1c 00                	sbb    $0x0,%al
  104886:	00 00                	add    %al,(%eax)
  104888:	58                   	pop    %eax
  104889:	02 00                	add    (%eax),%al
  10488b:	00 df                	add    %bl,%bh
  10488d:	c8 ff ff 10          	enter  $0xffff,$0x10
  104891:	00 00                	add    %al,(%eax)
  104893:	00 00                	add    %al,(%eax)
  104895:	41                   	inc    %ecx
  104896:	0e                   	push   %cs
  104897:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  10489d:	4c                   	dec    %esp
  10489e:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  1048a1:	04 00                	add    $0x0,%al
  1048a3:	00 20                	add    %ah,(%eax)
  1048a5:	00 00                	add    %al,(%eax)
  1048a7:	00 78 02             	add    %bh,0x2(%eax)
  1048aa:	00 00                	add    %al,(%eax)
  1048ac:	cf                   	iret   
  1048ad:	c8 ff ff 4a          	enter  $0xffff,$0x4a
  1048b1:	00 00                	add    %al,(%eax)
  1048b3:	00 00                	add    %al,(%eax)
  1048b5:	41                   	inc    %ecx
  1048b6:	0e                   	push   %cs
  1048b7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  1048bd:	44                   	inc    %esp
  1048be:	83 03 02             	addl   $0x2,(%ebx)
  1048c1:	42                   	inc    %edx
  1048c2:	c5 c3 0c             	(bad)
  1048c5:	04 04                	add    $0x4,%al
  1048c7:	00 20                	add    %ah,(%eax)
  1048c9:	00 00                	add    %al,(%eax)
  1048cb:	00 9c 02 00 00 f5 c8 	add    %bl,-0x370b0000(%edx,%eax,1)
  1048d2:	ff                   	(bad)  
  1048d3:	ff a6 00 00 00 00    	jmp    *0x0(%esi)
  1048d9:	41                   	inc    %ecx
  1048da:	0e                   	push   %cs
  1048db:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  1048e1:	44                   	inc    %esp
  1048e2:	83 03 02             	addl   $0x2,(%ebx)
  1048e5:	9e                   	sahf   
  1048e6:	c5 c3 0c             	(bad)
  1048e9:	04 04                	add    $0x4,%al
  1048eb:	00 1c 00             	add    %bl,(%eax,%eax,1)
  1048ee:	00 00                	add    %al,(%eax)
  1048f0:	c0 02 00             	rolb   $0x0,(%edx)
  1048f3:	00 77 c9             	add    %dh,-0x37(%edi)
  1048f6:	ff                   	(bad)  
  1048f7:	ff 44 00 00          	incl   0x0(%eax,%eax,1)
  1048fb:	00 00                	add    %al,(%eax)
  1048fd:	41                   	inc    %ecx
  1048fe:	0e                   	push   %cs
  1048ff:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104905:	02 40 c5             	add    -0x3b(%eax),%al
  104908:	0c 04                	or     $0x4,%al
  10490a:	04 00                	add    $0x0,%al
  10490c:	1c 00                	sbb    $0x0,%al
  10490e:	00 00                	add    %al,(%eax)
  104910:	e0 02                	loopne 104914 <__x86.get_pc_thunk.dx+0x13b0>
  104912:	00 00                	add    %al,(%eax)
  104914:	9b                   	fwait
  104915:	c9                   	leave  
  104916:	ff                   	(bad)  
  104917:	ff 19                	lcall  *(%ecx)
  104919:	00 00                	add    %al,(%eax)
  10491b:	00 00                	add    %al,(%eax)
  10491d:	41                   	inc    %ecx
  10491e:	0e                   	push   %cs
  10491f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104925:	55                   	push   %ebp
  104926:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  104929:	04 00                	add    $0x0,%al
  10492b:	00 20                	add    %ah,(%eax)
  10492d:	00 00                	add    %al,(%eax)
  10492f:	00 00                	add    %al,(%eax)
  104931:	03 00                	add    (%eax),%eax
  104933:	00 94 c9 ff ff 2d 00 	add    %dl,0x2dffff(%ecx,%ecx,8)
  10493a:	00 00                	add    %al,(%eax)
  10493c:	00 41 0e             	add    %al,0xe(%ecx)
  10493f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104945:	44                   	inc    %esp
  104946:	83 03 65             	addl   $0x65,(%ebx)
  104949:	c5 c3 0c             	(bad)
  10494c:	04 04                	add    $0x4,%al
  10494e:	00 00                	add    %al,(%eax)
  104950:	20 00                	and    %al,(%eax)
  104952:	00 00                	add    %al,(%eax)
  104954:	24 03                	and    $0x3,%al
  104956:	00 00                	add    %al,(%eax)
  104958:	9d                   	popf   
  104959:	c9                   	leave  
  10495a:	ff                   	(bad)  
  10495b:	ff 62 00             	jmp    *0x0(%edx)
  10495e:	00 00                	add    %al,(%eax)
  104960:	00 41 0e             	add    %al,0xe(%ecx)
  104963:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104969:	44                   	inc    %esp
  10496a:	83 03 02             	addl   $0x2,(%ebx)
  10496d:	5a                   	pop    %edx
  10496e:	c5 c3 0c             	(bad)
  104971:	04 04                	add    $0x4,%al
  104973:	00 28                	add    %ch,(%eax)
  104975:	00 00                	add    %al,(%eax)
  104977:	00 48 03             	add    %cl,0x3(%eax)
  10497a:	00 00                	add    %al,(%eax)
  10497c:	db c9                	fcmovne %st(1),%st
  10497e:	ff                   	(bad)  
  10497f:	ff 80 00 00 00 00    	incl   0x0(%eax)
  104985:	41                   	inc    %ecx
  104986:	0e                   	push   %cs
  104987:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  10498d:	46                   	inc    %esi
  10498e:	87 03                	xchg   %eax,(%ebx)
  104990:	86 04 83             	xchg   %al,(%ebx,%eax,4)
  104993:	05 02 73 c3 41       	add    $0x41c37302,%eax
  104998:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
  10499c:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  10499f:	04 1c                	add    $0x1c,%al
  1049a1:	00 00                	add    %al,(%eax)
  1049a3:	00 74 03 00          	add    %dh,0x0(%ebx,%eax,1)
  1049a7:	00 2f                	add    %ch,(%edi)
  1049a9:	ca ff ff             	lret   $0xffff
  1049ac:	39 00                	cmp    %eax,(%eax)
  1049ae:	00 00                	add    %al,(%eax)
  1049b0:	00 41 0e             	add    %al,0xe(%ecx)
  1049b3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  1049b9:	75 c5                	jne    104980 <__x86.get_pc_thunk.dx+0x141c>
  1049bb:	0c 04                	or     $0x4,%al
  1049bd:	04 00                	add    $0x0,%al
  1049bf:	00 2c 00             	add    %ch,(%eax,%eax,1)
  1049c2:	00 00                	add    %al,(%eax)
  1049c4:	94                   	xchg   %eax,%esp
  1049c5:	03 00                	add    (%eax),%eax
  1049c7:	00 48 ca             	add    %cl,-0x36(%eax)
  1049ca:	ff                   	(bad)  
  1049cb:	ff 9a 01 00 00 00    	lcall  *0x1(%edx)
  1049d1:	41                   	inc    %ecx
  1049d2:	0e                   	push   %cs
  1049d3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  1049d9:	49                   	dec    %ecx
  1049da:	87 03                	xchg   %eax,(%ebx)
  1049dc:	86 04 83             	xchg   %al,(%ebx,%eax,4)
  1049df:	05 03 88 01 c3       	add    $0xc3018803,%eax
  1049e4:	41                   	inc    %ecx
  1049e5:	c6 41 c7 41          	movb   $0x41,-0x39(%ecx)
  1049e9:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  1049ec:	04 00                	add    $0x0,%al
  1049ee:	00 00                	add    %al,(%eax)
  1049f0:	20 00                	and    %al,(%eax)
  1049f2:	00 00                	add    %al,(%eax)
  1049f4:	c4 03                	les    (%ebx),%eax
  1049f6:	00 00                	add    %al,(%eax)
  1049f8:	b2 cb                	mov    $0xcb,%dl
  1049fa:	ff                   	(bad)  
  1049fb:	ff 9f 00 00 00 00    	lcall  *0x0(%edi)
  104a01:	41                   	inc    %ecx
  104a02:	0e                   	push   %cs
  104a03:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104a09:	44                   	inc    %esp
  104a0a:	83 03 02             	addl   $0x2,(%ebx)
  104a0d:	97                   	xchg   %eax,%edi
  104a0e:	c5 c3 0c             	(bad)
  104a11:	04 04                	add    $0x4,%al
  104a13:	00 20                	add    %ah,(%eax)
  104a15:	00 00                	add    %al,(%eax)
  104a17:	00 e8                	add    %ch,%al
  104a19:	03 00                	add    (%eax),%eax
  104a1b:	00 2d cc ff ff 23    	add    %ch,0x23ffffcc
  104a21:	09 00                	or     %eax,(%eax)
  104a23:	00 00                	add    %al,(%eax)
  104a25:	41                   	inc    %ecx
  104a26:	0e                   	push   %cs
  104a27:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104a2d:	44                   	inc    %esp
  104a2e:	83 03 03             	addl   $0x3,(%ebx)
  104a31:	1b 09                	sbb    (%ecx),%ecx
  104a33:	c5 c3 0c             	(bad)
  104a36:	04 04                	add    $0x4,%al
  104a38:	28 00                	sub    %al,(%eax)
  104a3a:	00 00                	add    %al,(%eax)
  104a3c:	0c 04                	or     $0x4,%al
  104a3e:	00 00                	add    %al,(%eax)
  104a40:	2c d5                	sub    $0xd5,%al
  104a42:	ff                   	(bad)  
  104a43:	ff 16                	call   *(%esi)
  104a45:	02 00                	add    (%eax),%al
  104a47:	00 00                	add    %al,(%eax)
  104a49:	41                   	inc    %ecx
  104a4a:	0e                   	push   %cs
  104a4b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104a51:	48                   	dec    %eax
  104a52:	86 03                	xchg   %al,(%ebx)
  104a54:	83 04 03 08          	addl   $0x8,(%ebx,%eax,1)
  104a58:	02 c3                	add    %bl,%al
  104a5a:	41                   	inc    %ecx
  104a5b:	c6 41 c5 0c          	movb   $0xc,-0x3b(%ecx)
  104a5f:	04 04                	add    $0x4,%al
  104a61:	00 00                	add    %al,(%eax)
  104a63:	00 1c 00             	add    %bl,(%eax,%eax,1)
  104a66:	00 00                	add    %al,(%eax)
  104a68:	38 04 00             	cmp    %al,(%eax,%eax,1)
  104a6b:	00 16                	add    %dl,(%esi)
  104a6d:	d7                   	xlat   %ds:(%ebx)
  104a6e:	ff                   	(bad)  
  104a6f:	ff 18                	lcall  *(%eax)
  104a71:	00 00                	add    %al,(%eax)
  104a73:	00 00                	add    %al,(%eax)
  104a75:	41                   	inc    %ecx
  104a76:	0e                   	push   %cs
  104a77:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104a7d:	54                   	push   %esp
  104a7e:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  104a81:	04 00                	add    $0x0,%al
  104a83:	00 1c 00             	add    %bl,(%eax,%eax,1)
  104a86:	00 00                	add    %al,(%eax)
  104a88:	58                   	pop    %eax
  104a89:	04 00                	add    $0x0,%al
  104a8b:	00 0e                	add    %cl,(%esi)
  104a8d:	d7                   	xlat   %ds:(%ebx)
  104a8e:	ff                   	(bad)  
  104a8f:	ff 56 00             	call   *0x0(%esi)
  104a92:	00 00                	add    %al,(%eax)
  104a94:	00 41 0e             	add    %al,0xe(%ecx)
  104a97:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104a9d:	02 52 c5             	add    -0x3b(%edx),%dl
  104aa0:	0c 04                	or     $0x4,%al
  104aa2:	04 00                	add    $0x0,%al
  104aa4:	1c 00                	sbb    $0x0,%al
  104aa6:	00 00                	add    %al,(%eax)
  104aa8:	78 04                	js     104aae <__x86.get_pc_thunk.dx+0x154a>
  104aaa:	00 00                	add    %al,(%eax)
  104aac:	44                   	inc    %esp
  104aad:	d7                   	xlat   %ds:(%ebx)
  104aae:	ff                   	(bad)  
  104aaf:	ff 61 00             	jmp    *0x0(%ecx)
  104ab2:	00 00                	add    %al,(%eax)
  104ab4:	00 41 0e             	add    %al,0xe(%ecx)
  104ab7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104abd:	02 5d c5             	add    -0x3b(%ebp),%bl
  104ac0:	0c 04                	or     $0x4,%al
  104ac2:	04 00                	add    $0x0,%al
  104ac4:	28 00                	sub    %al,(%eax)
  104ac6:	00 00                	add    %al,(%eax)
  104ac8:	98                   	cwtl   
  104ac9:	04 00                	add    $0x0,%al
  104acb:	00 85 d7 ff ff 52    	add    %al,0x52ffffd7(%ebp)
  104ad1:	01 00                	add    %eax,(%eax)
  104ad3:	00 00                	add    %al,(%eax)
  104ad5:	41                   	inc    %ecx
  104ad6:	0e                   	push   %cs
  104ad7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104add:	45                   	inc    %ebp
  104ade:	86 03                	xchg   %al,(%ebx)
  104ae0:	83 04 03 47          	addl   $0x47,(%ebx,%eax,1)
  104ae4:	01 c3                	add    %eax,%ebx
  104ae6:	41                   	inc    %ecx
  104ae7:	c6 41 c5 0c          	movb   $0xc,-0x3b(%ecx)
  104aeb:	04 04                	add    $0x4,%al
  104aed:	00 00                	add    %al,(%eax)
  104aef:	00 20                	add    %ah,(%eax)
  104af1:	00 00                	add    %al,(%eax)
  104af3:	00 c4                	add    %al,%ah
  104af5:	04 00                	add    $0x0,%al
  104af7:	00 ab d8 ff ff 3a    	add    %ch,0x3affffd8(%ebx)
  104afd:	00 00                	add    %al,(%eax)
  104aff:	00 00                	add    %al,(%eax)
  104b01:	41                   	inc    %ecx
  104b02:	0e                   	push   %cs
  104b03:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104b09:	44                   	inc    %esp
  104b0a:	83 03 72             	addl   $0x72,(%ebx)
  104b0d:	c5 c3 0c             	(bad)
  104b10:	04 04                	add    $0x4,%al
  104b12:	00 00                	add    %al,(%eax)
  104b14:	20 00                	and    %al,(%eax)
  104b16:	00 00                	add    %al,(%eax)
  104b18:	e8 04 00 00 c1       	call   c1104b21 <MAGIC+0xa5629b1f>
  104b1d:	d8 ff                	fdivr  %st(7),%st
  104b1f:	ff                   	(bad)  
  104b20:	3a 00                	cmp    (%eax),%al
  104b22:	00 00                	add    %al,(%eax)
  104b24:	00 41 0e             	add    %al,0xe(%ecx)
  104b27:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104b2d:	44                   	inc    %esp
  104b2e:	83 03 72             	addl   $0x72,(%ebx)
  104b31:	c5 c3 0c             	(bad)
  104b34:	04 04                	add    $0x4,%al
  104b36:	00 00                	add    %al,(%eax)
  104b38:	20 00                	and    %al,(%eax)
  104b3a:	00 00                	add    %al,(%eax)
  104b3c:	0c 05                	or     $0x5,%al
  104b3e:	00 00                	add    %al,(%eax)
  104b40:	d7                   	xlat   %ds:(%ebx)
  104b41:	d8 ff                	fdivr  %st(7),%st
  104b43:	ff 4a 00             	decl   0x0(%edx)
  104b46:	00 00                	add    %al,(%eax)
  104b48:	00 41 0e             	add    %al,0xe(%ecx)
  104b4b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104b51:	44                   	inc    %esp
  104b52:	83 03 02             	addl   $0x2,(%ebx)
  104b55:	42                   	inc    %edx
  104b56:	c5 c3 0c             	(bad)
  104b59:	04 04                	add    $0x4,%al
  104b5b:	00 20                	add    %ah,(%eax)
  104b5d:	00 00                	add    %al,(%eax)
  104b5f:	00 30                	add    %dh,(%eax)
  104b61:	05 00 00 fd d8       	add    $0xd8fd0000,%eax
  104b66:	ff                   	(bad)  
  104b67:	ff 72 00             	push   0x0(%edx)
  104b6a:	00 00                	add    %al,(%eax)
  104b6c:	00 41 0e             	add    %al,0xe(%ecx)
  104b6f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104b75:	44                   	inc    %esp
  104b76:	83 03 02             	addl   $0x2,(%ebx)
  104b79:	6a c5                	push   $0xffffffc5
  104b7b:	c3                   	ret    
  104b7c:	0c 04                	or     $0x4,%al
  104b7e:	04 00                	add    $0x0,%al
  104b80:	20 00                	and    %al,(%eax)
  104b82:	00 00                	add    %al,(%eax)
  104b84:	54                   	push   %esp
  104b85:	05 00 00 4b d9       	add    $0xd94b0000,%eax
  104b8a:	ff                   	(bad)  
  104b8b:	ff 82 00 00 00 00    	incl   0x0(%edx)
  104b91:	41                   	inc    %ecx
  104b92:	0e                   	push   %cs
  104b93:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104b99:	44                   	inc    %esp
  104b9a:	83 03 02             	addl   $0x2,(%ebx)
  104b9d:	7a c5                	jp     104b64 <__x86.get_pc_thunk.dx+0x1600>
  104b9f:	c3                   	ret    
  104ba0:	0c 04                	or     $0x4,%al
  104ba2:	04 00                	add    $0x0,%al
  104ba4:	1c 00                	sbb    $0x0,%al
  104ba6:	00 00                	add    %al,(%eax)
  104ba8:	78 05                	js     104baf <__x86.get_pc_thunk.dx+0x164b>
  104baa:	00 00                	add    %al,(%eax)
  104bac:	a9 d9 ff ff 38       	test   $0x38ffffd9,%eax
  104bb1:	00 00                	add    %al,(%eax)
  104bb3:	00 00                	add    %al,(%eax)
  104bb5:	41                   	inc    %ecx
  104bb6:	0e                   	push   %cs
  104bb7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104bbd:	74 c5                	je     104b84 <__x86.get_pc_thunk.dx+0x1620>
  104bbf:	0c 04                	or     $0x4,%al
  104bc1:	04 00                	add    $0x0,%al
  104bc3:	00 1c 00             	add    %bl,(%eax,%eax,1)
  104bc6:	00 00                	add    %al,(%eax)
  104bc8:	98                   	cwtl   
  104bc9:	05 00 00 c1 d9       	add    $0xd9c10000,%eax
  104bce:	ff                   	(bad)  
  104bcf:	ff 2d 00 00 00 00    	ljmp   *0x0
  104bd5:	41                   	inc    %ecx
  104bd6:	0e                   	push   %cs
  104bd7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104bdd:	69 c5 0c 04 04 00    	imul   $0x4040c,%ebp,%eax
  104be3:	00 20                	add    %ah,(%eax)
  104be5:	00 00                	add    %al,(%eax)
  104be7:	00 b8 05 00 00 ce    	add    %bh,-0x31fffffb(%eax)
  104bed:	d9 ff                	fcos   
  104bef:	ff 43 00             	incl   0x0(%ebx)
  104bf2:	00 00                	add    %al,(%eax)
  104bf4:	00 41 0e             	add    %al,0xe(%ecx)
  104bf7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104bfd:	44                   	inc    %esp
  104bfe:	83 03 7b             	addl   $0x7b,(%ebx)
  104c01:	c5 c3 0c             	(bad)
  104c04:	04 04                	add    $0x4,%al
  104c06:	00 00                	add    %al,(%eax)
  104c08:	1c 00                	sbb    $0x0,%al
  104c0a:	00 00                	add    %al,(%eax)
  104c0c:	dc 05 00 00 ed d9    	faddl  0xd9ed0000
  104c12:	ff                   	(bad)  
  104c13:	ff ae 00 00 00 00    	ljmp   *0x0(%esi)
  104c19:	41                   	inc    %ecx
  104c1a:	0e                   	push   %cs
  104c1b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104c21:	02 aa c5 0c 04 04    	add    0x4040cc5(%edx),%ch
  104c27:	00 20                	add    %ah,(%eax)
  104c29:	00 00                	add    %al,(%eax)
  104c2b:	00 fc                	add    %bh,%ah
  104c2d:	05 00 00 7b da       	add    $0xda7b0000,%eax
  104c32:	ff                   	(bad)  
  104c33:	ff b4 00 00 00 00 41 	push   0x41000000(%eax,%eax,1)
  104c3a:	0e                   	push   %cs
  104c3b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104c41:	44                   	inc    %esp
  104c42:	83 03 02             	addl   $0x2,(%ebx)
  104c45:	ac                   	lods   %ds:(%esi),%al
  104c46:	c5 c3 0c             	(bad)
  104c49:	04 04                	add    $0x4,%al
  104c4b:	00 1c 00             	add    %bl,(%eax,%eax,1)
  104c4e:	00 00                	add    %al,(%eax)
  104c50:	20 06                	and    %al,(%esi)
  104c52:	00 00                	add    %al,(%eax)
  104c54:	0b db                	or     %ebx,%ebx
  104c56:	ff                   	(bad)  
  104c57:	ff 2a                	ljmp   *(%edx)
  104c59:	00 00                	add    %al,(%eax)
  104c5b:	00 00                	add    %al,(%eax)
  104c5d:	41                   	inc    %ecx
  104c5e:	0e                   	push   %cs
  104c5f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104c65:	66 c5 0c 04          	lds    (%esp,%eax,1),%cx
  104c69:	04 00                	add    $0x0,%al
  104c6b:	00 20                	add    %ah,(%eax)
  104c6d:	00 00                	add    %al,(%eax)
  104c6f:	00 40 06             	add    %al,0x6(%eax)
  104c72:	00 00                	add    %al,(%eax)
  104c74:	15 db ff ff 70       	adc    $0x70ffffdb,%eax
  104c79:	05 00 00 00 41       	add    $0x41000000,%eax
  104c7e:	0e                   	push   %cs
  104c7f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104c85:	44                   	inc    %esp
  104c86:	83 03 03             	addl   $0x3,(%ebx)
  104c89:	68 05 c5 c3 0c       	push   $0xcc3c505
  104c8e:	04 04                	add    $0x4,%al
  104c90:	1c 00                	sbb    $0x0,%al
  104c92:	00 00                	add    %al,(%eax)
  104c94:	64 06                	fs push %es
  104c96:	00 00                	add    %al,(%eax)
  104c98:	61                   	popa   
  104c99:	e0 ff                	loopne 104c9a <__x86.get_pc_thunk.dx+0x1736>
  104c9b:	ff 17                	call   *(%edi)
  104c9d:	00 00                	add    %al,(%eax)
  104c9f:	00 00                	add    %al,(%eax)
  104ca1:	41                   	inc    %ecx
  104ca2:	0e                   	push   %cs
  104ca3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104ca9:	53                   	push   %ebx
  104caa:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  104cad:	04 00                	add    $0x0,%al
  104caf:	00 20                	add    %ah,(%eax)
  104cb1:	00 00                	add    %al,(%eax)
  104cb3:	00 84 06 00 00 58 e0 	add    %al,-0x1fa80000(%esi,%eax,1)
  104cba:	ff                   	(bad)  
  104cbb:	ff                   	(bad)  
  104cbc:	7a 00                	jp     104cbe <__x86.get_pc_thunk.dx+0x175a>
  104cbe:	00 00                	add    %al,(%eax)
  104cc0:	00 41 0e             	add    %al,0xe(%ecx)
  104cc3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104cc9:	44                   	inc    %esp
  104cca:	83 03 02             	addl   $0x2,(%ebx)
  104ccd:	72 c5                	jb     104c94 <__x86.get_pc_thunk.dx+0x1730>
  104ccf:	c3                   	ret    
  104cd0:	0c 04                	or     $0x4,%al
  104cd2:	04 00                	add    $0x0,%al
  104cd4:	18 00                	sbb    %al,(%eax)
  104cd6:	00 00                	add    %al,(%eax)
  104cd8:	a8 06                	test   $0x6,%al
  104cda:	00 00                	add    %al,(%eax)
  104cdc:	ae                   	scas   %es:(%edi),%al
  104cdd:	e0 ff                	loopne 104cde <__x86.get_pc_thunk.dx+0x177a>
  104cdf:	ff 84 00 00 00 00 41 	incl   0x41000000(%eax,%eax,1)
  104ce6:	0e                   	push   %cs
  104ce7:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104ced:	44                   	inc    %esp
  104cee:	83 03 1c             	addl   $0x1c,(%ebx)
  104cf1:	00 00                	add    %al,(%eax)
  104cf3:	00 c4                	add    %al,%ah
  104cf5:	06                   	push   %es
  104cf6:	00 00                	add    %al,(%eax)
  104cf8:	16                   	push   %ss
  104cf9:	e1 ff                	loope  104cfa <__x86.get_pc_thunk.dx+0x1796>
  104cfb:	ff 27                	jmp    *(%edi)
  104cfd:	00 00                	add    %al,(%eax)
  104cff:	00 00                	add    %al,(%eax)
  104d01:	41                   	inc    %ecx
  104d02:	0e                   	push   %cs
  104d03:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104d09:	63 c5                	arpl   %ax,%bp
  104d0b:	0c 04                	or     $0x4,%al
  104d0d:	04 00                	add    $0x0,%al
  104d0f:	00 20                	add    %ah,(%eax)
  104d11:	00 00                	add    %al,(%eax)
  104d13:	00 e4                	add    %ah,%ah
  104d15:	06                   	push   %es
  104d16:	00 00                	add    %al,(%eax)
  104d18:	1d e1 ff ff 45       	sbb    $0x45ffffe1,%eax
  104d1d:	00 00                	add    %al,(%eax)
  104d1f:	00 00                	add    %al,(%eax)
  104d21:	41                   	inc    %ecx
  104d22:	0e                   	push   %cs
  104d23:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104d29:	44                   	inc    %esp
  104d2a:	83 03 7d             	addl   $0x7d,(%ebx)
  104d2d:	c5 c3 0c             	(bad)
  104d30:	04 04                	add    $0x4,%al
  104d32:	00 00                	add    %al,(%eax)
  104d34:	20 00                	and    %al,(%eax)
  104d36:	00 00                	add    %al,(%eax)
  104d38:	08 07                	or     %al,(%edi)
  104d3a:	00 00                	add    %al,(%eax)
  104d3c:	3e e1 ff             	loope,pt 104d3e <__x86.get_pc_thunk.dx+0x17da>
  104d3f:	ff 8e 00 00 00 00    	decl   0x0(%esi)
  104d45:	41                   	inc    %ecx
  104d46:	0e                   	push   %cs
  104d47:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104d4d:	44                   	inc    %esp
  104d4e:	83 03 02             	addl   $0x2,(%ebx)
  104d51:	86 c5                	xchg   %al,%ch
  104d53:	c3                   	ret    
  104d54:	0c 04                	or     $0x4,%al
  104d56:	04 00                	add    $0x0,%al
  104d58:	1c 00                	sbb    $0x0,%al
  104d5a:	00 00                	add    %al,(%eax)
  104d5c:	2c 07                	sub    $0x7,%al
  104d5e:	00 00                	add    %al,(%eax)
  104d60:	a8 e1                	test   $0xe1,%al
  104d62:	ff                   	(bad)  
  104d63:	ff 27                	jmp    *(%edi)
  104d65:	00 00                	add    %al,(%eax)
  104d67:	00 00                	add    %al,(%eax)
  104d69:	41                   	inc    %ecx
  104d6a:	0e                   	push   %cs
  104d6b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104d71:	63 c5                	arpl   %ax,%bp
  104d73:	0c 04                	or     $0x4,%al
  104d75:	04 00                	add    $0x0,%al
  104d77:	00 1c 00             	add    %bl,(%eax,%eax,1)
  104d7a:	00 00                	add    %al,(%eax)
  104d7c:	4c                   	dec    %esp
  104d7d:	07                   	pop    %es
  104d7e:	00 00                	add    %al,(%eax)
  104d80:	af                   	scas   %es:(%edi),%eax
  104d81:	e1 ff                	loope  104d82 <__x86.get_pc_thunk.dx+0x181e>
  104d83:	ff 2b                	ljmp   *(%ebx)
  104d85:	00 00                	add    %al,(%eax)
  104d87:	00 00                	add    %al,(%eax)
  104d89:	41                   	inc    %ecx
  104d8a:	0e                   	push   %cs
  104d8b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104d91:	67 c5 0c             	lds    (%si),%ecx
  104d94:	04 04                	add    $0x4,%al
  104d96:	00 00                	add    %al,(%eax)
  104d98:	1c 00                	sbb    $0x0,%al
  104d9a:	00 00                	add    %al,(%eax)
  104d9c:	6c                   	insb   (%dx),%es:(%edi)
  104d9d:	07                   	pop    %es
  104d9e:	00 00                	add    %al,(%eax)
  104da0:	ba e1 ff ff 29       	mov    $0x29ffffe1,%edx
  104da5:	00 00                	add    %al,(%eax)
  104da7:	00 00                	add    %al,(%eax)
  104da9:	41                   	inc    %ecx
  104daa:	0e                   	push   %cs
  104dab:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104db1:	65 c5 0c 04          	lds    %gs:(%esp,%eax,1),%ecx
  104db5:	04 00                	add    $0x0,%al
  104db7:	00 1c 00             	add    %bl,(%eax,%eax,1)
  104dba:	00 00                	add    %al,(%eax)
  104dbc:	8c 07                	mov    %es,(%edi)
  104dbe:	00 00                	add    %al,(%eax)
  104dc0:	c3                   	ret    
  104dc1:	e1 ff                	loope  104dc2 <__x86.get_pc_thunk.dx+0x185e>
  104dc3:	ff 2b                	ljmp   *(%ebx)
  104dc5:	00 00                	add    %al,(%eax)
  104dc7:	00 00                	add    %al,(%eax)
  104dc9:	41                   	inc    %ecx
  104dca:	0e                   	push   %cs
  104dcb:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104dd1:	67 c5 0c             	lds    (%si),%ecx
  104dd4:	04 04                	add    $0x4,%al
  104dd6:	00 00                	add    %al,(%eax)
  104dd8:	1c 00                	sbb    $0x0,%al
  104dda:	00 00                	add    %al,(%eax)
  104ddc:	ac                   	lods   %ds:(%esi),%al
  104ddd:	07                   	pop    %es
  104dde:	00 00                	add    %al,(%eax)
  104de0:	ce                   	into   
  104de1:	e1 ff                	loope  104de2 <__x86.get_pc_thunk.dx+0x187e>
  104de3:	ff 26                	jmp    *(%esi)
  104de5:	00 00                	add    %al,(%eax)
  104de7:	00 00                	add    %al,(%eax)
  104de9:	41                   	inc    %ecx
  104dea:	0e                   	push   %cs
  104deb:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104df1:	62 c5 0c 04 04       	(bad)
  104df6:	00 00                	add    %al,(%eax)
  104df8:	1c 00                	sbb    $0x0,%al
  104dfa:	00 00                	add    %al,(%eax)
  104dfc:	cc                   	int3   
  104dfd:	07                   	pop    %es
  104dfe:	00 00                	add    %al,(%eax)
  104e00:	d4 e1                	aam    $0xe1
  104e02:	ff                   	(bad)  
  104e03:	ff 22                	jmp    *(%edx)
  104e05:	00 00                	add    %al,(%eax)
  104e07:	00 00                	add    %al,(%eax)
  104e09:	41                   	inc    %ecx
  104e0a:	0e                   	push   %cs
  104e0b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104e11:	5e                   	pop    %esi
  104e12:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  104e15:	04 00                	add    $0x0,%al
  104e17:	00 1c 00             	add    %bl,(%eax,%eax,1)
  104e1a:	00 00                	add    %al,(%eax)
  104e1c:	ec                   	in     (%dx),%al
  104e1d:	07                   	pop    %es
  104e1e:	00 00                	add    %al,(%eax)
  104e20:	d6                   	(bad)  
  104e21:	e1 ff                	loope  104e22 <__x86.get_pc_thunk.dx+0x18be>
  104e23:	ff 10                	call   *(%eax)
  104e25:	00 00                	add    %al,(%eax)
  104e27:	00 00                	add    %al,(%eax)
  104e29:	41                   	inc    %ecx
  104e2a:	0e                   	push   %cs
  104e2b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104e31:	4c                   	dec    %esp
  104e32:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  104e35:	04 00                	add    $0x0,%al
  104e37:	00 20                	add    %ah,(%eax)
  104e39:	00 00                	add    %al,(%eax)
  104e3b:	00 0c 08             	add    %cl,(%eax,%ecx,1)
  104e3e:	00 00                	add    %al,(%eax)
  104e40:	c6                   	(bad)  
  104e41:	e1 ff                	loope  104e42 <__x86.get_pc_thunk.dx+0x18de>
  104e43:	ff 8e 00 00 00 00    	decl   0x0(%esi)
  104e49:	41                   	inc    %ecx
  104e4a:	0e                   	push   %cs
  104e4b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104e51:	44                   	inc    %esp
  104e52:	83 03 02             	addl   $0x2,(%ebx)
  104e55:	86 c5                	xchg   %al,%ch
  104e57:	c3                   	ret    
  104e58:	0c 04                	or     $0x4,%al
  104e5a:	04 00                	add    $0x0,%al
  104e5c:	1c 00                	sbb    $0x0,%al
  104e5e:	00 00                	add    %al,(%eax)
  104e60:	30 08                	xor    %cl,(%eax)
  104e62:	00 00                	add    %al,(%eax)
  104e64:	30 e2                	xor    %ah,%dl
  104e66:	ff                   	(bad)  
  104e67:	ff                   	(bad)  
  104e68:	3b 00                	cmp    (%eax),%eax
  104e6a:	00 00                	add    %al,(%eax)
  104e6c:	00 41 0e             	add    %al,0xe(%ecx)
  104e6f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104e75:	77 c5                	ja     104e3c <__x86.get_pc_thunk.dx+0x18d8>
  104e77:	0c 04                	or     $0x4,%al
  104e79:	04 00                	add    $0x0,%al
  104e7b:	00 20                	add    %ah,(%eax)
  104e7d:	00 00                	add    %al,(%eax)
  104e7f:	00 50 08             	add    %dl,0x8(%eax)
  104e82:	00 00                	add    %al,(%eax)
  104e84:	4b                   	dec    %ebx
  104e85:	e2 ff                	loop   104e86 <__x86.get_pc_thunk.dx+0x1922>
  104e87:	ff c0                	inc    %eax
  104e89:	00 00                	add    %al,(%eax)
  104e8b:	00 00                	add    %al,(%eax)
  104e8d:	41                   	inc    %ecx
  104e8e:	0e                   	push   %cs
  104e8f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104e95:	44                   	inc    %esp
  104e96:	83 03 02             	addl   $0x2,(%ebx)
  104e99:	b8 c5 c3 0c 04       	mov    $0x40cc3c5,%eax
  104e9e:	04 00                	add    $0x0,%al
  104ea0:	1c 00                	sbb    $0x0,%al
  104ea2:	00 00                	add    %al,(%eax)
  104ea4:	74 08                	je     104eae <__x86.get_pc_thunk.dx+0x194a>
  104ea6:	00 00                	add    %al,(%eax)
  104ea8:	e7 e2                	out    %eax,$0xe2
  104eaa:	ff                   	(bad)  
  104eab:	ff 6b 00             	ljmp   *0x0(%ebx)
  104eae:	00 00                	add    %al,(%eax)
  104eb0:	00 41 0e             	add    %al,0xe(%ecx)
  104eb3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104eb9:	02 67 c5             	add    -0x3b(%edi),%ah
  104ebc:	0c 04                	or     $0x4,%al
  104ebe:	04 00                	add    $0x0,%al
  104ec0:	1c 00                	sbb    $0x0,%al
  104ec2:	00 00                	add    %al,(%eax)
  104ec4:	94                   	xchg   %eax,%esp
  104ec5:	08 00                	or     %al,(%eax)
  104ec7:	00 32                	add    %dh,(%edx)
  104ec9:	e3 ff                	jecxz  104eca <__x86.get_pc_thunk.dx+0x1966>
  104ecb:	ff 31                	push   (%ecx)
  104ecd:	00 00                	add    %al,(%eax)
  104ecf:	00 00                	add    %al,(%eax)
  104ed1:	41                   	inc    %ecx
  104ed2:	0e                   	push   %cs
  104ed3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104ed9:	6d                   	insl   (%dx),%es:(%edi)
  104eda:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  104edd:	04 00                	add    $0x0,%al
  104edf:	00 1c 00             	add    %bl,(%eax,%eax,1)
  104ee2:	00 00                	add    %al,(%eax)
  104ee4:	b4 08                	mov    $0x8,%ah
  104ee6:	00 00                	add    %al,(%eax)
  104ee8:	43                   	inc    %ebx
  104ee9:	e3 ff                	jecxz  104eea <__x86.get_pc_thunk.dx+0x1986>
  104eeb:	ff 75 00             	push   0x0(%ebp)
  104eee:	00 00                	add    %al,(%eax)
  104ef0:	00 41 0e             	add    %al,0xe(%ecx)
  104ef3:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104ef9:	02 71 c5             	add    -0x3b(%ecx),%dh
  104efc:	0c 04                	or     $0x4,%al
  104efe:	04 00                	add    $0x0,%al
  104f00:	1c 00                	sbb    $0x0,%al
  104f02:	00 00                	add    %al,(%eax)
  104f04:	d4 08                	aam    $0x8
  104f06:	00 00                	add    %al,(%eax)
  104f08:	98                   	cwtl   
  104f09:	e3 ff                	jecxz  104f0a <__x86.get_pc_thunk.dx+0x19a6>
  104f0b:	ff 23                	jmp    *(%ebx)
  104f0d:	00 00                	add    %al,(%eax)
  104f0f:	00 00                	add    %al,(%eax)
  104f11:	41                   	inc    %ecx
  104f12:	0e                   	push   %cs
  104f13:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104f19:	5f                   	pop    %edi
  104f1a:	c5 0c 04             	lds    (%esp,%eax,1),%ecx
  104f1d:	04 00                	add    $0x0,%al
  104f1f:	00 1c 00             	add    %bl,(%eax,%eax,1)
  104f22:	00 00                	add    %al,(%eax)
  104f24:	f4                   	hlt    
  104f25:	08 00                	or     %al,(%eax)
  104f27:	00 9b e3 ff ff 7f    	add    %bl,0x7fffffe3(%ebx)
  104f2d:	00 00                	add    %al,(%eax)
  104f2f:	00 00                	add    %al,(%eax)
  104f31:	41                   	inc    %ecx
  104f32:	0e                   	push   %cs
  104f33:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104f39:	02 7b c5             	add    -0x3b(%ebx),%bh
  104f3c:	0c 04                	or     $0x4,%al
  104f3e:	04 00                	add    $0x0,%al
  104f40:	24 00                	and    $0x0,%al
  104f42:	00 00                	add    %al,(%eax)
  104f44:	14 09                	adc    $0x9,%al
  104f46:	00 00                	add    %al,(%eax)
  104f48:	fa                   	cli    
  104f49:	e3 ff                	jecxz  104f4a <__x86.get_pc_thunk.dx+0x19e6>
  104f4b:	ff                   	(bad)  
  104f4c:	bf 00 00 00 00       	mov    $0x0,%edi
  104f51:	41                   	inc    %ecx
  104f52:	0e                   	push   %cs
  104f53:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104f59:	45                   	inc    %ebp
  104f5a:	86 03                	xchg   %al,(%ebx)
  104f5c:	83 04 02 b4          	addl   $0xffffffb4,(%edx,%eax,1)
  104f60:	c3                   	ret    
  104f61:	41                   	inc    %ecx
  104f62:	c6 41 c5 0c          	movb   $0xc,-0x3b(%ecx)
  104f66:	04 04                	add    $0x4,%al
  104f68:	20 00                	and    %al,(%eax)
  104f6a:	00 00                	add    %al,(%eax)
  104f6c:	3c 09                	cmp    $0x9,%al
  104f6e:	00 00                	add    %al,(%eax)
  104f70:	91                   	xchg   %eax,%ecx
  104f71:	e4 ff                	in     $0xff,%al
  104f73:	ff 94 00 00 00 00 41 	call   *0x41000000(%eax,%eax,1)
  104f7a:	0e                   	push   %cs
  104f7b:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104f81:	44                   	inc    %esp
  104f82:	83 03 02             	addl   $0x2,(%ebx)
  104f85:	8c c5                	mov    %es,%ebp
  104f87:	c3                   	ret    
  104f88:	0c 04                	or     $0x4,%al
  104f8a:	04 00                	add    $0x0,%al
  104f8c:	1c 00                	sbb    $0x0,%al
  104f8e:	00 00                	add    %al,(%eax)
  104f90:	60                   	pusha  
  104f91:	09 00                	or     %eax,(%eax)
  104f93:	00 01                	add    %al,(%ecx)
  104f95:	e5 ff                	in     $0xff,%eax
  104f97:	ff 2f                	ljmp   *(%edi)
  104f99:	00 00                	add    %al,(%eax)
  104f9b:	00 00                	add    %al,(%eax)
  104f9d:	41                   	inc    %ecx
  104f9e:	0e                   	push   %cs
  104f9f:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104fa5:	6b c5 0c             	imul   $0xc,%ebp,%eax
  104fa8:	04 04                	add    $0x4,%al
  104faa:	00 00                	add    %al,(%eax)
  104fac:	1c 00                	sbb    $0x0,%al
  104fae:	00 00                	add    %al,(%eax)
  104fb0:	80 09 00             	orb    $0x0,(%ecx)
  104fb3:	00 10                	add    %dl,(%eax)
  104fb5:	e5 ff                	in     $0xff,%eax
  104fb7:	ff 43 00             	incl   0x0(%ebx)
  104fba:	00 00                	add    %al,(%eax)
  104fbc:	00 41 0e             	add    %al,0xe(%ecx)
  104fbf:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104fc5:	7f c5                	jg     104f8c <__x86.get_pc_thunk.dx+0x1a28>
  104fc7:	0c 04                	or     $0x4,%al
  104fc9:	04 00                	add    $0x0,%al
  104fcb:	00 1c 00             	add    %bl,(%eax,%eax,1)
  104fce:	00 00                	add    %al,(%eax)
  104fd0:	a0 09 00 00 33       	mov    0x33000009,%al
  104fd5:	e5 ff                	in     $0xff,%eax
  104fd7:	ff 55 00             	call   *0x0(%ebp)
  104fda:	00 00                	add    %al,(%eax)
  104fdc:	00 41 0e             	add    %al,0xe(%ecx)
  104fdf:	08 85 02 42 0d 05    	or     %al,0x50d4202(%ebp)
  104fe5:	02 51 c5             	add    -0x3b(%ecx),%dl
  104fe8:	0c 04                	or     $0x4,%al
  104fea:	04 00                	add    $0x0,%al
  104fec:	10 00                	adc    %al,(%eax)
  104fee:	00 00                	add    %al,(%eax)
  104ff0:	c0 09 00             	rorb   $0x0,(%ecx)
  104ff3:	00 70 e5             	add    %dh,-0x1b(%eax)
  104ff6:	ff                   	(bad)  
  104ff7:	ff 04 00             	incl   (%eax,%eax,1)
  104ffa:	00 00                	add    %al,(%eax)
  104ffc:	00 00                	add    %al,(%eax)
	...

Disassembly of section .data:

00105000 <_scancode_std>:
  105000:	12 40 00             	adc    0x0(%eax),%al
  105003:	00 01                	add    %al,(%ecx)
  105005:	10 00                	adc    %al,(%eax)
  105007:	00 31                	add    %dh,(%ecx)
  105009:	00 00                	add    %al,(%eax)
  10500b:	00 32                	add    %dh,(%edx)
  10500d:	00 00                	add    %al,(%eax)
  10500f:	00 33                	add    %dh,(%ebx)
  105011:	00 00                	add    %al,(%eax)
  105013:	00 34 00             	add    %dh,(%eax,%eax,1)
  105016:	00 00                	add    %al,(%eax)
  105018:	35 00 00 00 36       	xor    $0x36000000,%eax
  10501d:	00 00                	add    %al,(%eax)
  10501f:	00 37                	add    %dh,(%edi)
  105021:	00 00                	add    %al,(%eax)
  105023:	00 38                	add    %bh,(%eax)
  105025:	00 00                	add    %al,(%eax)
  105027:	00 39                	add    %bh,(%ecx)
  105029:	00 00                	add    %al,(%eax)
  10502b:	00 30                	add    %dh,(%eax)
  10502d:	00 00                	add    %al,(%eax)
  10502f:	00 2d 00 00 00 3d    	add    %ch,0x3d000000
  105035:	00 00                	add    %al,(%eax)
  105037:	00 08                	add    %cl,(%eax)
  105039:	00 00                	add    %al,(%eax)
  10503b:	00 00                	add    %al,(%eax)
  10503d:	40                   	inc    %eax
  10503e:	00 00                	add    %al,(%eax)
  105040:	71 00                	jno    105042 <_scancode_std+0x42>
  105042:	00 00                	add    %al,(%eax)
  105044:	77 00                	ja     105046 <_scancode_std+0x46>
  105046:	00 00                	add    %al,(%eax)
  105048:	65 00 00             	add    %al,%gs:(%eax)
  10504b:	00 72 00             	add    %dh,0x0(%edx)
  10504e:	00 00                	add    %al,(%eax)
  105050:	74 00                	je     105052 <_scancode_std+0x52>
  105052:	00 00                	add    %al,(%eax)
  105054:	79 00                	jns    105056 <_scancode_std+0x56>
  105056:	00 00                	add    %al,(%eax)
  105058:	75 00                	jne    10505a <_scancode_std+0x5a>
  10505a:	00 00                	add    %al,(%eax)
  10505c:	69 00 00 00 6f 00    	imul   $0x6f0000,(%eax),%eax
  105062:	00 00                	add    %al,(%eax)
  105064:	70 00                	jo     105066 <_scancode_std+0x66>
  105066:	00 00                	add    %al,(%eax)
  105068:	5b                   	pop    %ebx
  105069:	00 00                	add    %al,(%eax)
  10506b:	00 5d 00             	add    %bl,0x0(%ebp)
  10506e:	00 00                	add    %al,(%eax)
  105070:	0a 00                	or     (%eax),%al
  105072:	00 00                	add    %al,(%eax)
  105074:	03 40 00             	add    0x0(%eax),%eax
  105077:	00 61 00             	add    %ah,0x0(%ecx)
  10507a:	00 00                	add    %al,(%eax)
  10507c:	73 00                	jae    10507e <_scancode_std+0x7e>
  10507e:	00 00                	add    %al,(%eax)
  105080:	64 00 00             	add    %al,%fs:(%eax)
  105083:	00 66 00             	add    %ah,0x0(%esi)
  105086:	00 00                	add    %al,(%eax)
  105088:	67 00 00             	add    %al,(%bx,%si)
  10508b:	00 68 00             	add    %ch,0x0(%eax)
  10508e:	00 00                	add    %al,(%eax)
  105090:	6a 00                	push   $0x0
  105092:	00 00                	add    %al,(%eax)
  105094:	6b 00 00             	imul   $0x0,(%eax),%eax
  105097:	00 6c 00 00          	add    %ch,0x0(%eax,%eax,1)
  10509b:	00 3b                	add    %bh,(%ebx)
  10509d:	00 00                	add    %al,(%eax)
  10509f:	00 27                	add    %ah,(%edi)
  1050a1:	00 00                	add    %al,(%eax)
  1050a3:	00 60 00             	add    %ah,0x0(%eax)
  1050a6:	00 00                	add    %al,(%eax)
  1050a8:	02 40 00             	add    0x0(%eax),%al
  1050ab:	00 5c 00 00          	add    %bl,0x0(%eax,%eax,1)
  1050af:	00 7a 00             	add    %bh,0x0(%edx)
  1050b2:	00 00                	add    %al,(%eax)
  1050b4:	78 00                	js     1050b6 <_scancode_std+0xb6>
  1050b6:	00 00                	add    %al,(%eax)
  1050b8:	63 00                	arpl   %ax,(%eax)
  1050ba:	00 00                	add    %al,(%eax)
  1050bc:	76 00                	jbe    1050be <_scancode_std+0xbe>
  1050be:	00 00                	add    %al,(%eax)
  1050c0:	62 00                	bound  %eax,(%eax)
  1050c2:	00 00                	add    %al,(%eax)
  1050c4:	6e                   	outsb  %ds:(%esi),(%dx)
  1050c5:	00 00                	add    %al,(%eax)
  1050c7:	00 6d 00             	add    %ch,0x0(%ebp)
  1050ca:	00 00                	add    %al,(%eax)
  1050cc:	2c 00                	sub    $0x0,%al
  1050ce:	00 00                	add    %al,(%eax)
  1050d0:	2e 00 00             	add    %al,%cs:(%eax)
  1050d3:	00 2f                	add    %ch,(%edi)
  1050d5:	00 00                	add    %al,(%eax)
  1050d7:	00 06                	add    %al,(%esi)
  1050d9:	40                   	inc    %eax
  1050da:	00 00                	add    %al,(%eax)
  1050dc:	2a 00                	sub    (%eax),%al
  1050de:	00 00                	add    %al,(%eax)
  1050e0:	08 40 00             	or     %al,0x0(%eax)
  1050e3:	00 20                	add    %ah,(%eax)
  1050e5:	00 00                	add    %al,(%eax)
  1050e7:	00 01                	add    %al,(%ecx)
  1050e9:	40                   	inc    %eax
  1050ea:	00 00                	add    %al,(%eax)
  1050ec:	01 12                	add    %edx,(%edx)
  1050ee:	00 00                	add    %al,(%eax)
  1050f0:	02 12                	add    (%edx),%dl
  1050f2:	00 00                	add    %al,(%eax)
  1050f4:	03 12                	add    (%edx),%edx
  1050f6:	00 00                	add    %al,(%eax)
  1050f8:	04 12                	add    $0x12,%al
  1050fa:	00 00                	add    %al,(%eax)
  1050fc:	05 12 00 00 06       	add    $0x6000012,%eax
  105101:	12 00                	adc    (%eax),%al
  105103:	00 07                	add    %al,(%edi)
  105105:	12 00                	adc    (%eax),%al
  105107:	00 08                	add    %cl,(%eax)
  105109:	12 00                	adc    (%eax),%al
  10510b:	00 09                	add    %cl,(%ecx)
  10510d:	12 00                	adc    (%eax),%al
  10510f:	00 0a                	add    %cl,(%edx)
  105111:	12 00                	adc    (%eax),%al
  105113:	00 0f                	add    %cl,(%edi)
  105115:	30 00                	xor    %al,(%eax)
  105117:	00 10                	add    %dl,(%eax)
  105119:	40                   	inc    %eax
  10511a:	00 00                	add    %al,(%eax)
  10511c:	37                   	aaa    
  10511d:	00 00                	add    %al,(%eax)
  10511f:	00 38                	add    %bh,(%eax)
  105121:	00 00                	add    %al,(%eax)
  105123:	00 39                	add    %bh,(%ecx)
  105125:	00 00                	add    %al,(%eax)
  105127:	00 2d 00 00 00 34    	add    %ch,0x34000000
  10512d:	00 00                	add    %al,(%eax)
  10512f:	00 35 00 00 00 36    	add    %dh,0x36000000
  105135:	00 00                	add    %al,(%eax)
  105137:	00 12                	add    %dl,(%edx)
  105139:	40                   	inc    %eax
  10513a:	00 00                	add    %al,(%eax)
  10513c:	31 00                	xor    %eax,(%eax)
  10513e:	00 00                	add    %al,(%eax)
  105140:	32 00                	xor    (%eax),%al
  105142:	00 00                	add    %al,(%eax)
  105144:	33 00                	xor    (%eax),%eax
  105146:	00 00                	add    %al,(%eax)
  105148:	30 00                	xor    %al,(%eax)
  10514a:	00 00                	add    %al,(%eax)
  10514c:	2e 00 00             	add    %al,%cs:(%eax)
  10514f:	00 12                	add    %dl,(%edx)
  105151:	40                   	inc    %eax
  105152:	00 00                	add    %al,(%eax)
  105154:	12 40 00             	adc    0x0(%eax),%al
  105157:	00 12                	add    %dl,(%edx)
  105159:	40                   	inc    %eax
  10515a:	00 00                	add    %al,(%eax)
  10515c:	0b 12                	or     (%edx),%edx
  10515e:	00 00                	add    %al,(%eax)
  105160:	0b 12                	or     (%edx),%edx
	...

00105164 <color>:
  105164:	0f                   	.byte 0xf

Disassembly of section .got.plt:

00105168 <_GLOBAL_OFFSET_TABLE_>:
	...

Disassembly of section .data.rel.local:

00105180 <keyboard_hook>:
  105180:	6b 11 10             	imul   $0x10,(%ecx),%edx
	...

001051a0 <exception_messages>:
  1051a0:	cb                   	lret   
  1051a1:	44                   	inc    %esp
  1051a2:	10 00                	adc    %al,(%eax)
  1051a4:	dc 44 10 00          	faddl  0x0(%eax,%edx,1)
  1051a8:	e2 44                	loop   1051ee <exception_messages+0x4e>
  1051aa:	10 00                	adc    %al,(%eax)
  1051ac:	f9                   	stc    
  1051ad:	44                   	inc    %esp
  1051ae:	10 00                	adc    %al,(%eax)
  1051b0:	04 45                	add    $0x45,%al
  1051b2:	10 00                	adc    %al,(%eax)
  1051b4:	1b 45 10             	sbb    0x10(%ebp),%eax
  1051b7:	00 29                	add    %ch,(%ecx)
  1051b9:	45                   	inc    %ebp
  1051ba:	10 00                	adc    %al,(%eax)
  1051bc:	38 45 10             	cmp    %al,0x10(%ebp)
  1051bf:	00 47 45             	add    %al,0x45(%edi)
  1051c2:	10 00                	adc    %al,(%eax)
  1051c4:	54                   	push   %esp
  1051c5:	45                   	inc    %ebp
  1051c6:	10 00                	adc    %al,(%eax)
  1051c8:	70 45                	jo     10520f <exception_messages+0x6f>
  1051ca:	10 00                	adc    %al,(%eax)
  1051cc:	78 45                	js     105213 <exception_messages+0x73>
  1051ce:	10 00                	adc    %al,(%eax)
  1051d0:	8c 45 10             	mov    %es,0x10(%ebp)
  1051d3:	00 98 45 10 00 b1    	add    %bl,-0x4effefbb(%eax)
  1051d9:	45                   	inc    %ebp
  1051da:	10 00                	adc    %al,(%eax)
  1051dc:	bc 45 10 00 ce       	mov    $0xce001045,%esp
  1051e1:	45                   	inc    %ebp
  1051e2:	10 00                	adc    %al,(%eax)
  1051e4:	e0 45                	loopne 10522b <exception_messages+0x8b>
  1051e6:	10 00                	adc    %al,(%eax)
  1051e8:	f0 45                	lock inc %ebp
  1051ea:	10 00                	adc    %al,(%eax)
  1051ec:	fe 45 10             	incb   0x10(%ebp)
  1051ef:	00 fe                	add    %bh,%dh
  1051f1:	45                   	inc    %ebp
  1051f2:	10 00                	adc    %al,(%eax)
  1051f4:	fe 45 10             	incb   0x10(%ebp)
  1051f7:	00 fe                	add    %bh,%dh
  1051f9:	45                   	inc    %ebp
  1051fa:	10 00                	adc    %al,(%eax)
  1051fc:	fe 45 10             	incb   0x10(%ebp)
  1051ff:	00 fe                	add    %bh,%dh
  105201:	45                   	inc    %ebp
  105202:	10 00                	adc    %al,(%eax)
  105204:	fe 45 10             	incb   0x10(%ebp)
  105207:	00 fe                	add    %bh,%dh
  105209:	45                   	inc    %ebp
  10520a:	10 00                	adc    %al,(%eax)
  10520c:	fe 45 10             	incb   0x10(%ebp)
  10520f:	00 fe                	add    %bh,%dh
  105211:	45                   	inc    %ebp
  105212:	10 00                	adc    %al,(%eax)
  105214:	fe 45 10             	incb   0x10(%ebp)
  105217:	00 fe                	add    %bh,%dh
  105219:	45                   	inc    %ebp
  10521a:	10 00                	adc    %al,(%eax)
  10521c:	fe 45 10             	incb   0x10(%ebp)
	...

Disassembly of section .bss:

00106000 <mouse_cycle-0x200000>:
	...

00306000 <mouse_cycle>:
	...

00306001 <mouse_byte>:
  306001:	00 00                	add    %al,(%eax)
	...

00306004 <mouse_x>:
	...

00306005 <mouse_y>:
	...

00306020 <inp>:
	...

00306120 <i>:
  306120:	00 00                	add    %al,(%eax)
	...

00306124 <c>:
	...

00306140 <gdt_entries>:
	...

00306168 <gdt_ptr>:
	...

00306180 <idt_entries>:
	...

00306980 <idt_ptr>:
	...

003069a0 <interrupt_handlers>:
	...

Disassembly of section .comment:

00000000 <.comment>:
   0:	47                   	inc    %edi
   1:	43                   	inc    %ebx
   2:	43                   	inc    %ebx
   3:	3a 20                	cmp    (%eax),%ah
   5:	28 55 62             	sub    %dl,0x62(%ebp)
   8:	75 6e                	jne    78 <FLAGS+0x75>
   a:	74 75                	je     81 <FLAGS+0x7e>
   c:	20 31                	and    %dh,(%ecx)
   e:	31 2e                	xor    %ebp,(%esi)
  10:	33 2e                	xor    (%esi),%ebp
  12:	30 2d 31 75 62 75    	xor    %ch,0x75627531
  18:	6e                   	outsb  %ds:(%esi),(%dx)
  19:	74 75                	je     90 <FLAGS+0x8d>
  1b:	31 7e 32             	xor    %edi,0x32(%esi)
  1e:	32 2e                	xor    (%esi),%ch
  20:	30 34 2e             	xor    %dh,(%esi,%ebp,1)
  23:	31 29                	xor    %ebp,(%ecx)
  25:	20 31                	and    %dh,(%ecx)
  27:	31 2e                	xor    %ebp,(%esi)
  29:	33 2e                	xor    (%esi),%ebp
  2b:	30 00                	xor    %al,(%eax)
